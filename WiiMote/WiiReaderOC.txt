This is my first attempt to translate my acceleration-to-position code into Objective-C.
Stuff here has not yet been tested; presumably it eventually will be two files instead 
of one, as well.

Please note! I haven't found a way to reset the value of an NSDate object so I just make 
a new one (assigned to the same field) each time; this is probably really bad practice
because Objective-C has no garbage collector, but I'm not sure how to clear this space
when it's a field...


///UPSWiiReader.h///

#import <Foundation/NSObject.h>

@interface UPSWiiReader: NSObject {
	float position;
	float velocity;
	NSDate *prevTime;
	char mode; 
	int converter;
}

-(WiiReader*) initWithAxis: (char) axis andConverter: (int) conv;
-(int) axisPosition
: (int) accel;
-(int) smartPositionX: (int) xAccel Y: (int) yAccel Z: (int) zAccel;
-(void) calibrate;
-(void) setAxis: (char) axis;
-(char) axisMode;
@end


///UPSWiiReader.m///

#import "UPSWiiReader.h"

@implementation UPSWiiReader
-(id) init {
	self = [super init];
	if ( self ) {
		[self calibrate];
		mode = 'y'; // default axis
		converter = 1;
	}
	return self;
}

-(UPSWiiReader*) initWithAxis: (char) axis andConverter: (int) conv{
	self = [super init];
	if ( self ) {
		[self calibrate];
		mode = axis;
		converter = conv;
	}
	return self;
}

-(int) axisPosition: (int) accel {
	// get change in time
	NSTimeInterval elapsedTime = [prevTime timeIntervalSinceNow] * -1;
	*prevTime = [NSDate date];
	// compensate for sign flip in x mode and/or gravity
	// in z mode
	if ( mode == 'x' ) {
		accel = -accel;
	}
	if ( mode == 'z' ) {
		accel = accel + 10;
	}
	// calculate new velocity/position
	float newVel = (elapsedTime * (float)accel) + velocity;
	position = elapsedTime * (newVel + velocity) / 2 + position;
	velocity = newVel;
	int finalPos = (int)(position * converter);
	return finalPos;
}

-(int) smartPositionX: (int) xAccel Y: (int) yAccel Z: (int) zAccel {
	// get change in time
	NSTimeInterval elapsedTime = [prevTime timeIntervalSinceNow] * -1;
	*prevTime = [NSDate date];
	// compensate for sign flip in x and/or gravity in z
	xAccel = -xAccel;
	zAccel = zAccel + 10;
	// find max
	int maxAccel = xAccel;
	if ( yAccel > maxAccel ) {
		maxAccel = yAccel;
	}
	if ( zAccel > maxAccel ) {
		maxAccel = zAccel;
	}
	// calculate new velocity/position
	float newVel = (elapsedTime * (float)maxAccel) + velocity;
	position = elapsedTime * (newVel + velocity) / 2 + position;
	velocity = newVel;
	int finalPos = (int)(position * converter);
	return finalPos;
}

-(void) calibrate {
	*prevTime = [NSDate date];
	pos = 0;
	vel = 0;
}

-(void) setAxis: (char) axis {
	if (axis == 'x' || axis == 'y' || axis == 'z' || axis == 's') {
		mode = axis;
	}
	else {
		mode = 'y'; // default to y axis if char is incorrect
	}
}

-(char) axisMode {
	return mode;
}
@end