// Three.js r42 - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!window.Int32Array)window.Int32Array=Array,window.Float32Array=Array;THREE.Color=function(b){this.setHex(b)};
THREE.Color.prototype={copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;this.hex=b.hex},setHex:function(b){this.hex=~~b&16777215;this.updateRGB()},setRGB:function(b,c,e){this.r=b;this.g=c;this.b=e;this.updateHex()},setHSV:function(b,c,e){var f,h,g,j,m,p;if(e==0)f=h=g=0;else switch(j=Math.floor(b*6),m=b*6-j,b=e*(1-c),p=e*(1-c*m),c=e*(1-c*(1-m)),j){case 1:f=p;h=e;g=b;break;case 2:f=b;h=e;g=c;break;case 3:f=b;h=p;g=e;break;case 4:f=c;h=b;g=e;break;case 5:f=e;h=b;g=p;break;case 6:case 0:f=e,h=c,g=b}this.setRGB(f,
h,g)},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGB:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},clone:function(){return new THREE.Color(this.hex)}};THREE.Vector2=function(b,c){this.set(b||0,c||0)};
THREE.Vector2.prototype={set:function(b,c){this.x=b;this.y=c;return this},copy:function(b){this.x=b.x;this.y=b.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(b,c){this.x=b.x+c.x;this.y=b.y+c.y;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;return this},sub:function(b,c){this.x=b.x-c.x;this.y=b.y-c.y;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divideScalar:function(b){b?
(this.x/=b,this.y/=b):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(b){var c=this.x-b.x,b=this.y-b.y;return c*c+b*b},setLength:function(b){return this.normalize().multiplyScalar(b)},
unit:function(){return this.normalize()},equals:function(b){return b.x==this.x&&b.y==this.y}};THREE.Vector3=function(b,c,e){this.set(b||0,c||0,e||0)};
THREE.Vector3.prototype={set:function(b,c,e){this.x=b;this.y=c;this.z=e;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(b,c){this.x=b.x+c.x;this.y=b.y+c.y;this.z=b.z+c.z;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},sub:function(b,c){this.x=b.x-c.x;this.y=b.y-c.y;this.z=b.z-c.z;return this},subSelf:function(b){this.x-=
b.x;this.y-=b.y;this.z-=b.z;return this},multiply:function(b,c){this.x=b.x*c.x;this.y=b.y*c.y;this.z=b.z*c.z;return this},multiplySelf:function(b){this.x*=b.x;this.y*=b.y;this.z*=b.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},divideSelf:function(b){return this.divide(this,b)},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b):this.set(0,0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*
b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(b){return this.normalize().multiplyScalar(b)},cross:function(b,c){this.x=b.y*c.z-b.z*c.y;this.y=b.z*c.x-b.x*c.z;this.z=b.x*c.y-b.y*c.x;return this},crossSelf:function(b){return this.set(this.y*b.z-this.z*b.y,this.z*b.x-this.x*b.z,this.x*
b.y-this.y*b.x)},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(b){return(new THREE.Vector3).sub(this,b).lengthSq()},setPositionFromMatrix:function(b){this.x=b.n14;this.y=b.n24;this.z=b.n34},setRotationFromMatrix:function(b){var c=Math.cos(this.y);this.y=Math.asin(b.n13);Math.abs(c)>1.0E-5?(this.x=Math.atan2(-b.n23/c,b.n33/c),this.z=Math.atan2(-b.n12/c,b.n11/c)):(this.x=0,this.z=Math.atan2(b.n21,b.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};
THREE.Vector4=function(b,c,e,f){this.set(b||0,c||0,e||0,f||1)};
THREE.Vector4.prototype={set:function(b,c,e,f){this.x=b;this.y=c;this.z=e;this.w=f;return this},copy:function(b){return this.set(b.x,b.y,b.z,b.w||1)},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(b,c){this.x=b.x+c.x;this.y=b.y+c.y;this.z=b.z+c.z;this.w=b.w+c.w;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},sub:function(b,c){this.x=b.x-c.x;this.y=b.y-c.y;this.z=b.z-c.z;this.w=b.w-c.w;return this},subSelf:function(b){this.x-=
b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},divideScalar:function(b){b?(this.x/=b,this.y/=b,this.z/=b,this.w/=b):this.set(0,0,0,1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},
setLength:function(b){return this.normalize().multiplyScalar(b)},lerpSelf:function(b,c){this.x+=(b.x-this.x)*c;this.y+=(b.y-this.y)*c;this.z+=(b.z-this.z)*c;this.w+=(b.w-this.w)*c;return this}};THREE.Ray=function(b,c){this.origin=b||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(b){return this.intersectObjects(b.objects)},intersectObjects:function(b){var c,e,f=[];c=0;for(e=b.length;c<e;c++)f=f.concat(this.intersectObject(b[c]));f.sort(function(b,e){return b.distance-e.distance});return f},intersectObject:function(b){function c(b,e,c){var f,c=c.matrixWorld.getPosition();f=c.clone().subSelf(b).dot(e);b=b.clone().addSelf(e.clone().multiplyScalar(f));return c.distanceTo(b)}function e(b,e,c,f){var f=f.clone().subSelf(e),c=c.clone().subSelf(e),
j=b.clone().subSelf(e),b=f.dot(f),e=f.dot(c),f=f.dot(j),h=c.dot(c),c=c.dot(j),j=1/(b*h-e*e),h=(h*f-e*c)*j,b=(b*c-e*f)*j;return h>0&&b>0&&h+b<1}if(b instanceof THREE.Particle){var f=c(this.origin,this.direction,b);if(!f||f>b.scale.x)return[];return[{distance:f,point:b.position,face:null,object:b}]}else if(b instanceof THREE.Mesh){f=c(this.origin,this.direction,b);if(!f||f>b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)))return[];var h,g,j,m,p,t,n,o,v,u,x=b.geometry,
z=x.vertices,y=[],f=0;for(h=x.faces.length;f<h;f++)if(g=x.faces[f],v=this.origin.clone(),u=this.direction.clone(),t=b.matrixWorld,j=t.multiplyVector3(z[g.a].position.clone()),m=t.multiplyVector3(z[g.b].position.clone()),p=t.multiplyVector3(z[g.c].position.clone()),t=g instanceof THREE.Face4?t.multiplyVector3(z[g.d].position.clone()):null,n=b.matrixRotationWorld.multiplyVector3(g.normal.clone()),o=u.dot(n),b.doubleSided||(b.flipSided?o>0:o<0))if(n=n.dot((new THREE.Vector3).sub(j,v))/o,v=v.addSelf(u.multiplyScalar(n)),
g instanceof THREE.Face3)e(v,j,m,p)&&(g={distance:this.origin.distanceTo(v),point:v,face:g,object:b},y.push(g));else if(g instanceof THREE.Face4&&(e(v,j,m,t)||e(v,m,p,t)))g={distance:this.origin.distanceTo(v),point:v,face:g,object:b},y.push(g);return y}else return[]}};
THREE.Rectangle=function(){function b(){g=f-c;j=h-e}var c,e,f,h,g,j,m=!0;this.getX=function(){return c};this.getY=function(){return e};this.getWidth=function(){return g};this.getHeight=function(){return j};this.getLeft=function(){return c};this.getTop=function(){return e};this.getRight=function(){return f};this.getBottom=function(){return h};this.set=function(j,g,n,o){m=!1;c=j;e=g;f=n;h=o;b()};this.addPoint=function(j,g){m?(m=!1,c=j,e=g,f=j,h=g):(c=c<j?c:j,e=e<g?e:g,f=f>j?f:j,h=h>g?h:g);b()};this.add3Points=
function(j,g,n,o,v,u){m?(m=!1,c=j<n?j<v?j:v:n<v?n:v,e=g<o?g<u?g:u:o<u?o:u,f=j>n?j>v?j:v:n>v?n:v,h=g>o?g>u?g:u:o>u?o:u):(c=j<n?j<v?j<c?j:c:v<c?v:c:n<v?n<c?n:c:v<c?v:c,e=g<o?g<u?g<e?g:e:u<e?u:e:o<u?o<e?o:e:u<e?u:e,f=j>n?j>v?j>f?j:f:v>f?v:f:n>v?n>f?n:f:v>f?v:f,h=g>o?g>u?g>h?g:h:u>h?u:h:o>u?o>h?o:h:u>h?u:h);b()};this.addRectangle=function(j){m?(m=!1,c=j.getLeft(),e=j.getTop(),f=j.getRight(),h=j.getBottom()):(c=c<j.getLeft()?c:j.getLeft(),e=e<j.getTop()?e:j.getTop(),f=f>j.getRight()?f:j.getRight(),h=h>
j.getBottom()?h:j.getBottom());b()};this.inflate=function(j){c-=j;e-=j;f+=j;h+=j;b()};this.minSelf=function(j){c=c>j.getLeft()?c:j.getLeft();e=e>j.getTop()?e:j.getTop();f=f<j.getRight()?f:j.getRight();h=h<j.getBottom()?h:j.getBottom();b()};this.instersects=function(b){return Math.min(f,b.getRight())-Math.max(c,b.getLeft())>=0&&Math.min(h,b.getBottom())-Math.max(e,b.getTop())>=0};this.empty=function(){m=!0;h=f=e=c=0;b()};this.isEmpty=function(){return m}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={transpose:function(){var b,c=this.m;b=c[1];c[1]=c[3];c[3]=b;b=c[2];c[2]=c[6];c[6]=b;b=c[5];c[5]=c[7];c[7]=b;return this},transposeIntoArray:function(b){var c=this.m;b[0]=c[0];b[1]=c[3];b[2]=c[6];b[3]=c[1];b[4]=c[4];b[5]=c[7];b[6]=c[2];b[7]=c[5];b[8]=c[8];return this}};THREE.Matrix4=function(b,c,e,f,h,g,j,m,p,t,n,o,v,u,x,z){this.set(b||1,c||0,e||0,f||0,h||0,g||1,j||0,m||0,p||0,t||0,n||1,o||0,v||0,u||0,x||0,z||1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={set:function(b,c,e,f,h,g,j,m,p,t,n,o,v,u,x,z){this.n11=b;this.n12=c;this.n13=e;this.n14=f;this.n21=h;this.n22=g;this.n23=j;this.n24=m;this.n31=p;this.n32=t;this.n33=n;this.n34=o;this.n41=v;this.n42=u;this.n43=x;this.n44=z;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){this.set(b.n11,b.n12,b.n13,b.n14,b.n21,b.n22,b.n23,b.n24,b.n31,b.n32,b.n33,b.n34,b.n41,b.n42,b.n43,b.n44);return this},lookAt:function(b,c,e){var f=THREE.Matrix4.__v1,
h=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(b,c).normalize();if(g.length()===0)g.z=1;f.cross(e,g).normalize();f.length()===0&&(g.x+=1.0E-4,f.cross(e,g).normalize());h.cross(g,f).normalize();this.n11=f.x;this.n12=h.x;this.n13=g.x;this.n21=f.y;this.n22=h.y;this.n23=g.y;this.n31=f.z;this.n32=h.z;this.n33=g.z;return this},multiplyVector3:function(b){var c=b.x,e=b.y,f=b.z,h=1/(this.n41*c+this.n42*e+this.n43*f+this.n44);b.x=(this.n11*c+this.n12*e+this.n13*f+this.n14)*h;b.y=(this.n21*c+this.n22*e+this.n23*
f+this.n24)*h;b.z=(this.n31*c+this.n32*e+this.n33*f+this.n34)*h;return b},multiplyVector4:function(b){var c=b.x,e=b.y,f=b.z,h=b.w;b.x=this.n11*c+this.n12*e+this.n13*f+this.n14*h;b.y=this.n21*c+this.n22*e+this.n23*f+this.n24*h;b.z=this.n31*c+this.n32*e+this.n33*f+this.n34*h;b.w=this.n41*c+this.n42*e+this.n43*f+this.n44*h;return b},rotateAxis:function(b){var c=b.x,e=b.y,f=b.z;b.x=c*this.n11+e*this.n12+f*this.n13;b.y=c*this.n21+e*this.n22+f*this.n23;b.z=c*this.n31+e*this.n32+f*this.n33;b.normalize();
return b},crossVector:function(b){var c=new THREE.Vector4;c.x=this.n11*b.x+this.n12*b.y+this.n13*b.z+this.n14*b.w;c.y=this.n21*b.x+this.n22*b.y+this.n23*b.z+this.n24*b.w;c.z=this.n31*b.x+this.n32*b.y+this.n33*b.z+this.n34*b.w;c.w=b.w?this.n41*b.x+this.n42*b.y+this.n43*b.z+this.n44*b.w:1;return c},multiply:function(b,c){var e=b.n11,f=b.n12,h=b.n13,g=b.n14,j=b.n21,m=b.n22,p=b.n23,t=b.n24,n=b.n31,o=b.n32,v=b.n33,u=b.n34,x=b.n41,z=b.n42,y=b.n43,w=b.n44,I=c.n11,C=c.n12,K=c.n13,F=c.n14,B=c.n21,O=c.n22,
E=c.n23,H=c.n24,P=c.n31,V=c.n32,G=c.n33,aa=c.n34,Q=c.n41,S=c.n42,T=c.n43,k=c.n44;this.n11=e*I+f*B+h*P+g*Q;this.n12=e*C+f*O+h*V+g*S;this.n13=e*K+f*E+h*G+g*T;this.n14=e*F+f*H+h*aa+g*k;this.n21=j*I+m*B+p*P+t*Q;this.n22=j*C+m*O+p*V+t*S;this.n23=j*K+m*E+p*G+t*T;this.n24=j*F+m*H+p*aa+t*k;this.n31=n*I+o*B+v*P+u*Q;this.n32=n*C+o*O+v*V+u*S;this.n33=n*K+o*E+v*G+u*T;this.n34=n*F+o*H+v*aa+u*k;this.n41=x*I+z*B+y*P+w*Q;this.n42=x*C+z*O+y*V+w*S;this.n43=x*K+z*E+y*G+w*T;this.n44=x*F+z*H+y*aa+w*k;return this},multiplyToArray:function(b,
c,e){this.multiply(b,c);e[0]=this.n11;e[1]=this.n21;e[2]=this.n31;e[3]=this.n41;e[4]=this.n12;e[5]=this.n22;e[6]=this.n32;e[7]=this.n42;e[8]=this.n13;e[9]=this.n23;e[10]=this.n33;e[11]=this.n43;e[12]=this.n14;e[13]=this.n24;e[14]=this.n34;e[15]=this.n44;return this},multiplySelf:function(b){this.multiply(this,b);return this},multiplyScalar:function(b){this.n11*=b;this.n12*=b;this.n13*=b;this.n14*=b;this.n21*=b;this.n22*=b;this.n23*=b;this.n24*=b;this.n31*=b;this.n32*=b;this.n33*=b;this.n34*=b;this.n41*=
b;this.n42*=b;this.n43*=b;this.n44*=b;return this},determinant:function(){var b=this.n11,c=this.n12,e=this.n13,f=this.n14,h=this.n21,g=this.n22,j=this.n23,m=this.n24,p=this.n31,t=this.n32,n=this.n33,o=this.n34,v=this.n41,u=this.n42,x=this.n43,z=this.n44;return f*j*t*v-e*m*t*v-f*g*n*v+c*m*n*v+e*g*o*v-c*j*o*v-f*j*p*u+e*m*p*u+f*h*n*u-b*m*n*u-e*h*o*u+b*j*o*u+f*g*p*x-c*m*p*x-f*h*t*x+b*m*t*x+c*h*o*x-b*g*o*x-e*g*p*z+c*j*p*z+e*h*t*z-b*j*t*z-c*h*n*z+b*g*n*z},transpose:function(){var b;b=this.n21;this.n21=
this.n12;this.n12=b;b=this.n31;this.n31=this.n13;this.n13=b;b=this.n32;this.n32=this.n23;this.n23=b;b=this.n41;this.n41=this.n14;this.n14=b;b=this.n42;this.n42=this.n24;this.n24=b;b=this.n43;this.n43=this.n34;this.n43=b;return this},clone:function(){var b=new THREE.Matrix4;b.n11=this.n11;b.n12=this.n12;b.n13=this.n13;b.n14=this.n14;b.n21=this.n21;b.n22=this.n22;b.n23=this.n23;b.n24=this.n24;b.n31=this.n31;b.n32=this.n32;b.n33=this.n33;b.n34=this.n34;b.n41=this.n41;b.n42=this.n42;b.n43=this.n43;b.n44=
this.n44;return b},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(b){b[0]=this.n11;b[1]=this.n21;b[2]=this.n31;b[3]=this.n41;b[4]=
this.n12;b[5]=this.n22;b[6]=this.n32;b[7]=this.n42;b[8]=this.n13;b[9]=this.n23;b[10]=this.n33;b[11]=this.n43;b[12]=this.n14;b[13]=this.n24;b[14]=this.n34;b[15]=this.n44;return b},flattenToArrayOffset:function(b,c){b[c]=this.n11;b[c+1]=this.n21;b[c+2]=this.n31;b[c+3]=this.n41;b[c+4]=this.n12;b[c+5]=this.n22;b[c+6]=this.n32;b[c+7]=this.n42;b[c+8]=this.n13;b[c+9]=this.n23;b[c+10]=this.n33;b[c+11]=this.n43;b[c+12]=this.n14;b[c+13]=this.n24;b[c+14]=this.n34;b[c+15]=this.n44;return b},setTranslation:function(b,
c,e){this.set(1,0,0,b,0,1,0,c,0,0,1,e,0,0,0,1);return this},setScale:function(b,c,e){this.set(b,0,0,0,0,c,0,0,0,0,e,0,0,0,0,1);return this},setRotationX:function(b){var c=Math.cos(b),b=Math.sin(b);this.set(1,0,0,0,0,c,-b,0,0,b,c,0,0,0,0,1);return this},setRotationY:function(b){var c=Math.cos(b),b=Math.sin(b);this.set(c,0,b,0,0,1,0,0,-b,0,c,0,0,0,0,1);return this},setRotationZ:function(b){var c=Math.cos(b),b=Math.sin(b);this.set(c,-b,0,0,b,c,0,0,0,0,1,0,0,0,0,1);return this},setRotationAxis:function(b,
c){var e=Math.cos(c),f=Math.sin(c),h=1-e,g=b.x,j=b.y,m=b.z,p=h*g,t=h*j;this.set(p*g+e,p*j-f*m,p*m+f*j,0,p*j+f*m,t*j+e,t*m-f*g,0,p*m-f*j,t*m+f*g,h*m*m+e,0,0,0,0,1);return this},setPosition:function(b){this.n14=b.x;this.n24=b.y;this.n34=b.z;return this},getPosition:function(){if(!this.position)this.position=new THREE.Vector3;this.position.set(this.n14,this.n24,this.n34);return this.position},getColumnX:function(){if(!this.columnX)this.columnX=new THREE.Vector3;this.columnX.set(this.n11,this.n21,this.n31);
return this.columnX},getColumnY:function(){if(!this.columnY)this.columnY=new THREE.Vector3;this.columnY.set(this.n12,this.n22,this.n32);return this.columnY},getColumnZ:function(){if(!this.columnZ)this.columnZ=new THREE.Vector3;this.columnZ.set(this.n13,this.n23,this.n33);return this.columnZ},setRotationFromEuler:function(b,c){var e=b.x,f=b.y,h=b.z,g=Math.cos(e),e=Math.sin(e),j=Math.cos(f),f=Math.sin(f),m=Math.cos(h),h=Math.sin(h);switch(c){case "YXZ":var p=j*m,t=j*h,n=f*m,o=f*h;this.n11=p+o*e;this.n12=
n*e-t;this.n13=g*f;this.n21=g*h;this.n22=g*m;this.n23=-e;this.n31=t*e-n;this.n32=o+p*e;this.n33=g*j;break;case "ZXY":p=j*m;t=j*h;n=f*m;o=f*h;this.n11=p-o*e;this.n12=-g*h;this.n13=n+t*e;this.n21=t+n*e;this.n22=g*m;this.n23=o-p*e;this.n31=-g*f;this.n32=e;this.n33=g*j;break;case "ZYX":p=g*m;t=g*h;n=e*m;o=e*h;this.n11=j*m;this.n12=n*f-t;this.n13=p*f+o;this.n21=j*h;this.n22=o*f+p;this.n23=t*f-n;this.n31=-f;this.n32=e*j;this.n33=g*j;break;case "YZX":p=g*j;t=g*f;n=e*j;o=e*f;this.n11=j*m;this.n12=o-p*h;this.n13=
n*h+t;this.n21=h;this.n22=g*m;this.n23=-e*m;this.n31=-f*m;this.n32=t*h+n;this.n33=p-o*h;break;case "XZY":p=g*j;t=g*f;n=e*j;o=e*f;this.n11=j*m;this.n12=-h;this.n13=f*m;this.n21=p*h+o;this.n22=g*m;this.n23=t*h-n;this.n31=n*h-t;this.n32=e*m;this.n33=o*h+p;break;default:p=g*m,t=g*h,n=e*m,o=e*h,this.n11=j*m,this.n12=-j*h,this.n13=f,this.n21=t+n*f,this.n22=p-o*f,this.n23=-e*j,this.n31=o-p*f,this.n32=n+t*f,this.n33=g*j}return this},setRotationFromQuaternion:function(b){var c=b.x,e=b.y,f=b.z,h=b.w,g=c+c,
j=e+e,m=f+f,b=c*g,p=c*j;c*=m;var t=e*j;e*=m;f*=m;g*=h;j*=h;h*=m;this.n11=1-(t+f);this.n12=p-h;this.n13=c+j;this.n21=p+h;this.n22=1-(b+f);this.n23=e-g;this.n31=c-j;this.n32=e+g;this.n33=1-(b+t);return this},scale:function(b){var c=b.x,e=b.y,b=b.z;this.n11*=c;this.n12*=e;this.n13*=b;this.n21*=c;this.n22*=e;this.n23*=b;this.n31*=c;this.n32*=e;this.n33*=b;this.n41*=c;this.n42*=e;this.n43*=b;return this},extractPosition:function(b){this.n14=b.n14;this.n24=b.n24;this.n34=b.n34},extractRotation:function(b,
c){var e=1/c.x,f=1/c.y,h=1/c.z;this.n11=b.n11*e;this.n21=b.n21*e;this.n31=b.n31*e;this.n12=b.n12*f;this.n22=b.n22*f;this.n32=b.n32*f;this.n13=b.n13*h;this.n23=b.n23*h;this.n33=b.n33*h}};
THREE.Matrix4.makeInvert=function(b,c){var e=b.n11,f=b.n12,h=b.n13,g=b.n14,j=b.n21,m=b.n22,p=b.n23,t=b.n24,n=b.n31,o=b.n32,v=b.n33,u=b.n34,x=b.n41,z=b.n42,y=b.n43,w=b.n44;c===void 0&&(c=new THREE.Matrix4);c.n11=p*u*z-t*v*z+t*o*y-m*u*y-p*o*w+m*v*w;c.n12=g*v*z-h*u*z-g*o*y+f*u*y+h*o*w-f*v*w;c.n13=h*t*z-g*p*z+g*m*y-f*t*y-h*m*w+f*p*w;c.n14=g*p*o-h*t*o-g*m*v+f*t*v+h*m*u-f*p*u;c.n21=t*v*x-p*u*x-t*n*y+j*u*y+p*n*w-j*v*w;c.n22=h*u*x-g*v*x+g*n*y-e*u*y-h*n*w+e*v*w;c.n23=g*p*x-h*t*x-g*j*y+e*t*y+h*j*w-e*p*w;c.n24=
h*t*n-g*p*n+g*j*v-e*t*v-h*j*u+e*p*u;c.n31=m*u*x-t*o*x+t*n*z-j*u*z-m*n*w+j*o*w;c.n32=g*o*x-f*u*x-g*n*z+e*u*z+f*n*w-e*o*w;c.n33=h*t*x-g*m*x+g*j*z-e*t*z-f*j*w+e*m*w;c.n34=g*m*n-f*t*n-g*j*o+e*t*o+f*j*u-e*m*u;c.n41=p*o*x-m*v*x-p*n*z+j*v*z+m*n*y-j*o*y;c.n42=f*v*x-h*o*x+h*n*z-e*v*z-f*n*y+e*o*y;c.n43=h*m*x-f*p*x-h*j*z+e*p*z+f*j*y-e*m*y;c.n44=f*p*n-h*m*n+h*j*o-e*p*o-f*j*v+e*m*v;c.multiplyScalar(1/b.determinant());return c};
THREE.Matrix4.makeInvert3x3=function(b){var c=b.m33,e=c.m,f=b.n33*b.n22-b.n32*b.n23,h=-b.n33*b.n21+b.n31*b.n23,g=b.n32*b.n21-b.n31*b.n22,j=-b.n33*b.n12+b.n32*b.n13,m=b.n33*b.n11-b.n31*b.n13,p=-b.n32*b.n11+b.n31*b.n12,t=b.n23*b.n12-b.n22*b.n13,n=-b.n23*b.n11+b.n21*b.n13,o=b.n22*b.n11-b.n21*b.n12,b=b.n11*f+b.n21*j+b.n31*t;b==0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");b=1/b;e[0]=b*f;e[1]=b*h;e[2]=b*g;e[3]=b*j;e[4]=b*m;e[5]=b*p;e[6]=b*t;e[7]=b*n;e[8]=b*o;return c};
THREE.Matrix4.makeFrustum=function(b,c,e,f,h,g){var j;j=new THREE.Matrix4;j.n11=2*h/(c-b);j.n12=0;j.n13=(c+b)/(c-b);j.n14=0;j.n21=0;j.n22=2*h/(f-e);j.n23=(f+e)/(f-e);j.n24=0;j.n31=0;j.n32=0;j.n33=-(g+h)/(g-h);j.n34=-2*g*h/(g-h);j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(b,c,e,f){var h,b=e*Math.tan(b*Math.PI/360);h=-b;return THREE.Matrix4.makeFrustum(h*c,b*c,h,b,e,f)};
THREE.Matrix4.makeOrtho=function(b,c,e,f,h,g){var j,m,p,t;j=new THREE.Matrix4;m=c-b;p=e-f;t=g-h;j.n11=2/m;j.n12=0;j.n13=0;j.n14=-((c+b)/m);j.n21=0;j.n22=2/p;j.n23=0;j.n24=-((e+f)/p);j.n31=0;j.n32=0;j.n33=-2/t;j.n34=-((g+h)/t);j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;
THREE.Object3D=function(){this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;
this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this._vector=new THREE.Vector3;this.name=""};
THREE.Object3D.prototype={translate:function(b,c){this.matrix.rotateAxis(c);this.position.addSelf(c.multiplyScalar(b))},translateX:function(b){this.translate(b,this._vector.set(1,0,0))},translateY:function(b){this.translate(b,this._vector.set(0,1,0))},translateZ:function(b){this.translate(b,this._vector.set(0,0,1))},lookAt:function(b){this.matrix.lookAt(b,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},addChild:function(b){if(this.children.indexOf(b)===
-1){b.parent!==void 0&&b.parent.removeChild(b);b.parent=this;this.children.push(b);for(var c=this;c.parent!==void 0;)c=c.parent;c!==void 0&&c instanceof THREE.Scene&&c.addChildRecurse(b)}},removeChild:function(b){var c=this.children.indexOf(b);if(c!==-1)b.parent=void 0,this.children.splice(c,1)},getChildByName:function(b,c){var e,f,h;e=0;for(f=this.children.length;e<f;e++){h=this.children[e];if(h.name===b)return h;if(c&&(h=h.getChildByName(b,c),h!==void 0))return h}},updateMatrix:function(){this.matrix.setPosition(this.position);
this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},update:function(b,c,e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||c)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),
this.matrixRotationWorld.extractRotation(this.matrixWorld,this.scale),this.matrixWorldNeedsUpdate=!1,c=!0;for(var b=0,f=this.children.length;b<f;b++)this.children[b].update(this.matrixWorld,c,e)}};THREE.Quaternion=function(b,c,e,f){this.set(b||0,c||0,e||0,f!==void 0?f:1)};
THREE.Quaternion.prototype={set:function(b,c,e,f){this.x=b;this.y=c;this.z=e;this.w=f;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w;return this},setFromEuler:function(b){var c=0.5*Math.PI/360,e=b.x*c,f=b.y*c,h=b.z*c,b=Math.cos(f),f=Math.sin(f),c=Math.cos(-h),h=Math.sin(-h),g=Math.cos(e),e=Math.sin(e),j=b*c,m=f*h;this.w=j*g-m*e;this.x=j*e+m*g;this.y=f*c*g+b*h*e;this.z=b*h*g-f*c*e;return this},setFromAxisAngle:function(b,c){var e=c/2,f=Math.sin(e);this.x=b.x*f;this.y=b.y*
f;this.z=b.z*f;this.w=Math.cos(e);return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var b=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);b==0?this.w=this.z=this.y=this.x=0:(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b);return this},
multiplySelf:function(b){var c=this.x,e=this.y,f=this.z,h=this.w,g=b.x,j=b.y,m=b.z,b=b.w;this.x=c*b+h*g+e*m-f*j;this.y=e*b+h*j+f*g-c*m;this.z=f*b+h*m+c*j-e*g;this.w=h*b-c*g-e*j-f*m;return this},multiply:function(b,c){this.x=b.x*c.w+b.y*c.z-b.z*c.y+b.w*c.x;this.y=-b.x*c.z+b.y*c.w+b.z*c.x+b.w*c.y;this.z=b.x*c.y-b.y*c.x+b.z*c.w+b.w*c.z;this.w=-b.x*c.x-b.y*c.y-b.z*c.z+b.w*c.w;return this},multiplyVector3:function(b,c){c||(c=b);var e=b.x,f=b.y,h=b.z,g=this.x,j=this.y,m=this.z,p=this.w,t=p*e+j*h-m*f,n=
p*f+m*e-g*h,o=p*h+g*f-j*e,e=-g*e-j*f-m*h;c.x=t*p+e*-g+n*-m-o*-j;c.y=n*p+e*-j+o*-g-t*-m;c.z=o*p+e*-m+t*-j-n*-g;return c}};
THREE.Quaternion.slerp=function(b,c,e,f){var h=b.w*c.w+b.x*c.x+b.y*c.y+b.z*c.z;if(Math.abs(h)>=1)return e.w=b.w,e.x=b.x,e.y=b.y,e.z=b.z,e;var g=Math.acos(h),j=Math.sqrt(1-h*h);if(Math.abs(j)<0.0010)return e.w=0.5*(b.w+c.w),e.x=0.5*(b.x+c.x),e.y=0.5*(b.y+c.y),e.z=0.5*(b.z+c.z),e;h=Math.sin((1-f)*g)/j;f=Math.sin(f*g)/j;e.w=b.w*h+c.w*f;e.x=b.x*h+c.x*f;e.y=b.y*h+c.y*f;e.z=b.z*h+c.z*f;return e};THREE.Vertex=function(b){this.position=b||new THREE.Vector3};
THREE.Face3=function(b,c,e,f,h,g){this.a=b;this.b=c;this.c=e;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=h instanceof THREE.Color?h:new THREE.Color;this.vertexColors=h instanceof Array?h:[];this.vertexTangents=[];this.materials=g instanceof Array?g:[g];this.centroid=new THREE.Vector3};
THREE.Face4=function(b,c,e,f,h,g,j){this.a=b;this.b=c;this.c=e;this.d=f;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3;this.vertexNormals=h instanceof Array?h:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materials=j instanceof Array?j:[j];this.centroid=new THREE.Vector3};THREE.UV=function(b,c){this.set(b||0,c||0)};
THREE.UV.prototype={set:function(b,c){this.u=b;this.v=c;return this},copy:function(b){this.set(b.u,b.v);return this}};THREE.Geometry=function(){this.id="Geometry"+THREE.GeometryIdCounter++;this.vertices=[];this.colors=[];this.faces=[];this.edges=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1};
THREE.Geometry.prototype={computeCentroids:function(){var b,c,e;b=0;for(c=this.faces.length;b<c;b++)e=this.faces[b],e.centroid.set(0,0,0),e instanceof THREE.Face3?(e.centroid.addSelf(this.vertices[e.a].position),e.centroid.addSelf(this.vertices[e.b].position),e.centroid.addSelf(this.vertices[e.c].position),e.centroid.divideScalar(3)):e instanceof THREE.Face4&&(e.centroid.addSelf(this.vertices[e.a].position),e.centroid.addSelf(this.vertices[e.b].position),e.centroid.addSelf(this.vertices[e.c].position),
e.centroid.addSelf(this.vertices[e.d].position),e.centroid.divideScalar(4))},computeFaceNormals:function(b){var c,e,f,h,g,j,m=new THREE.Vector3,p=new THREE.Vector3;f=0;for(h=this.faces.length;f<h;f++){g=this.faces[f];if(b&&g.vertexNormals.length){m.set(0,0,0);c=0;for(e=g.vertexNormals.length;c<e;c++)m.addSelf(g.vertexNormals[c]);m.divideScalar(3)}else c=this.vertices[g.a],e=this.vertices[g.b],j=this.vertices[g.c],m.sub(j.position,e.position),p.sub(c.position,e.position),m.crossSelf(p);m.isZero()||
m.normalize();g.normal.copy(m)}},computeVertexNormals:function(){var b,c,e,f;if(this.__tmpVertices==void 0){f=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)f[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)if(e=this.faces[b],e instanceof THREE.Face3)e.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(e instanceof THREE.Face4)e.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{f=
this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)f[b].set(0,0,0)}b=0;for(c=this.faces.length;b<c;b++)e=this.faces[b],e instanceof THREE.Face3?(f[e.a].addSelf(e.normal),f[e.b].addSelf(e.normal),f[e.c].addSelf(e.normal)):e instanceof THREE.Face4&&(f[e.a].addSelf(e.normal),f[e.b].addSelf(e.normal),f[e.c].addSelf(e.normal),f[e.d].addSelf(e.normal));b=0;for(c=this.vertices.length;b<c;b++)f[b].normalize();b=0;for(c=this.faces.length;b<c;b++)e=this.faces[b],e instanceof THREE.Face3?(e.vertexNormals[0].copy(f[e.a]),
e.vertexNormals[1].copy(f[e.b]),e.vertexNormals[2].copy(f[e.c])):e instanceof THREE.Face4&&(e.vertexNormals[0].copy(f[e.a]),e.vertexNormals[1].copy(f[e.b]),e.vertexNormals[2].copy(f[e.c]),e.vertexNormals[3].copy(f[e.d]))},computeTangents:function(){function b(b,e,c,f,g,h,E){m=b.vertices[e].position;p=b.vertices[c].position;t=b.vertices[f].position;n=j[g];o=j[h];v=j[E];u=p.x-m.x;x=t.x-m.x;z=p.y-m.y;y=t.y-m.y;w=p.z-m.z;I=t.z-m.z;C=o.u-n.u;K=v.u-n.u;F=o.v-n.v;B=v.v-n.v;O=1/(C*B-K*F);V.set((B*u-F*x)*
O,(B*z-F*y)*O,(B*w-F*I)*O);G.set((C*x-K*u)*O,(C*y-K*z)*O,(C*I-K*w)*O);H[e].addSelf(V);H[c].addSelf(V);H[f].addSelf(V);P[e].addSelf(G);P[c].addSelf(G);P[f].addSelf(G)}var c,e,f,h,g,j,m,p,t,n,o,v,u,x,z,y,w,I,C,K,F,B,O,E,H=[],P=[],V=new THREE.Vector3,G=new THREE.Vector3,aa=new THREE.Vector3,Q=new THREE.Vector3,S=new THREE.Vector3;c=0;for(e=this.vertices.length;c<e;c++)H[c]=new THREE.Vector3,P[c]=new THREE.Vector3;c=0;for(e=this.faces.length;c<e;c++)g=this.faces[c],j=this.faceVertexUvs[0][c],g instanceof
THREE.Face3?b(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(b(this,g.a,g.b,g.c,0,1,2),b(this,g.a,g.b,g.d,0,1,3));var T=["a","b","c","d"];c=0;for(e=this.faces.length;c<e;c++){g=this.faces[c];for(f=0;f<g.vertexNormals.length;f++)S.copy(g.vertexNormals[f]),h=g[T[f]],E=H[h],aa.copy(E),aa.subSelf(S.multiplyScalar(S.dot(E))).normalize(),Q.cross(g.vertexNormals[f],E),h=Q.dot(P[h]),h=h<0?-1:1,g.vertexTangents[f]=new THREE.Vector4(aa.x,aa.y,aa.z,h)}this.hasTangents=!0},computeBoundingBox:function(){var b;
if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,e=this.vertices.length;c<e;c++){b=this.vertices[c];if(b.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=b.position.x;else if(b.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=b.position.x;if(b.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=b.position.y;
else if(b.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=b.position.y;if(b.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=b.position.z;else if(b.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=b.position.z}}},computeBoundingSphere:function(){for(var b=0,c=0,e=this.vertices.length;c<e;c++)b=Math.max(b,this.vertices[c].position.length());this.boundingSphere={radius:b}},computeEdgeFaces:function(){function b(b,e){return Math.min(b,e)+"_"+Math.max(b,e)}function c(b,e,c){b[e]===
void 0?(b[e]={set:{},array:[]},b[e].set[c]=1,b[e].array.push(c)):b[e].set[c]===void 0&&(b[e].set[c]=1,b[e].array.push(c))}var e,f,h,g,j,m={};e=0;for(f=this.faces.length;e<f;e++)j=this.faces[e],j instanceof THREE.Face3?(h=b(j.a,j.b),c(m,h,e),h=b(j.b,j.c),c(m,h,e),h=b(j.a,j.c),c(m,h,e)):j instanceof THREE.Face4&&(h=b(j.b,j.d),c(m,h,e),h=b(j.a,j.b),c(m,h,e),h=b(j.a,j.d),c(m,h,e),h=b(j.b,j.c),c(m,h,e),h=b(j.c,j.d),c(m,h,e));e=0;for(f=this.edges.length;e<f;e++){j=this.edges[e];h=j.vertexIndices[0];g=j.vertexIndices[1];
j.faceIndices=m[b(h,g)].array;for(h=0;h<j.faceIndices.length;h++)g=j.faceIndices[h],j.faces.push(this.faces[g])}}};THREE.GeometryIdCounter=0;
THREE.Spline=function(b){function c(b,e,c,f,j,g,h){b=(c-b)*0.5;f=(f-e)*0.5;return(2*(e-c)+b+f)*h+(-3*(e-c)-2*b-f)*g+b*j+e}this.points=b;var e=[],f={x:0,y:0,z:0},h,g,j,m,p,t,n,o,v;this.initFromArray=function(b){this.points=[];for(var e=0;e<b.length;e++)this.points[e]={x:b[e][0],y:b[e][1],z:b[e][2]}};this.getPoint=function(b){h=(this.points.length-1)*b;g=Math.floor(h);j=h-g;e[0]=g==0?g:g-1;e[1]=g;e[2]=g>this.points.length-2?g:g+1;e[3]=g>this.points.length-3?g:g+2;t=this.points[e[0]];n=this.points[e[1]];
o=this.points[e[2]];v=this.points[e[3]];m=j*j;p=j*m;f.x=c(t.x,n.x,o.x,v.x,j,m,p);f.y=c(t.y,n.y,o.y,v.y,j,m,p);f.z=c(t.z,n.z,o.z,v.z,j,m,p);return f};this.getControlPointsArray=function(){var b,e,c=this.points.length,f=[];for(b=0;b<c;b++)e=this.points[b],f[b]=[e.x,e.y,e.z];return f};this.getLength=function(b){var e,c,f=e=e=0,j=new THREE.Vector3,g=new THREE.Vector3,h=[],m=0;h[0]=0;b||(b=100);c=this.points.length*b;j.copy(this.points[0]);for(b=1;b<c;b++)e=b/c,position=this.getPoint(e),g.copy(position),
m+=g.distanceTo(j),j.copy(position),e*=this.points.length-1,e=Math.floor(e),e!=f&&(h[e]=m,f=e);h[h.length]=m;return{chunks:h,total:m}};this.reparametrizeByArcLength=function(b){var e,c,f,j,g,h,m=[],p=new THREE.Vector3,t=this.getLength();m.push(p.copy(this.points[0]).clone());for(e=1;e<this.points.length;e++){c=t.chunks[e]-t.chunks[e-1];h=Math.ceil(b*c/t.total);j=(e-1)/(this.points.length-1);g=e/(this.points.length-1);for(c=1;c<h-1;c++)f=j+c*(1/h)*(g-j),position=this.getPoint(f),m.push(p.copy(position).clone());
m.push(p.copy(this.points[e]).clone())}this.points=m}};THREE.Edge=function(b,c,e,f){this.vertices=[b,c];this.vertexIndices=[e,f];this.faces=[];this.faceIndices=[]};THREE.Camera=function(b,c,e,f,h){THREE.Object3D.call(this);this.fov=b||50;this.aspect=c||1;this.near=e||0.1;this.far=f||2E3;this.target=h||new THREE.Object3D;this.useTarget=!0;this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=null;this.updateProjectionMatrix()};THREE.Camera.prototype=new THREE.Object3D;
THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.supr=THREE.Object3D.prototype;THREE.Camera.prototype.translate=function(b,c){this.matrix.rotateAxis(c);c.multiplyScalar(b);this.position.addSelf(c);this.target.position.addSelf(c)};
THREE.Camera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var b=this.fullWidth/this.fullHeight,c=Math.tan(this.fov*Math.PI/360)*this.near,e=-c,f=b*e,b=Math.abs(b*c-f),e=Math.abs(c-e);this.projectionMatrix=THREE.Matrix4.makeFrustum(f+this.x*b/this.fullWidth,f+(this.x+this.width)*b/this.fullWidth,c-(this.y+this.height)*e/this.fullHeight,c-this.y*e/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Camera.prototype.setViewOffset=function(b,c,e,f,h,g){this.fullWidth=b;this.fullHeight=c;this.x=e;this.y=f;this.width=h;this.height=g;this.updateProjectionMatrix()};
THREE.Camera.prototype.update=function(b,c,e){if(this.useTarget)this.matrix.lookAt(this.position,this.target.position,this.up),this.matrix.setPosition(this.position),b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse),c=!0;else if(this.matrixAutoUpdate&&this.updateMatrix(),c||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,c=!0,THREE.Matrix4.makeInvert(this.matrixWorld,this.matrixWorldInverse);for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,c,e)};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=new THREE.Light;
THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(b,c,e,f){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1;this.distance=e||0;this.castShadow=f!==void 0?f:!1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(b,c,e){THREE.Light.call(this,b);this.position=new THREE.Vector3;this.intensity=c||1;this.distance=e||0};
THREE.PointLight.prototype=new THREE.Light;THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(b,c,e,f){THREE.Light.call(this,b);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=c||1;this.distance=e||0;this.castShadow=f!==void 0?f:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.LensFlare=function(b,c,e,f){THREE.Object3D.call(this);this.positionScreen=new THREE.Vector3;this.lensFlares=[];this.customUpdateCallback=void 0;b!==void 0&&this.add(b,c,e,f)};THREE.LensFlare.prototype=new THREE.Object3D;THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.supr=THREE.Object3D.prototype;
THREE.LensFlare.prototype.add=function(b,c,e,f){c===void 0&&(c=-1);e===void 0&&(e=0);if(f===void 0)f=THREE.BillboardBlending;e=Math.min(e,Math.max(0,e));this.lensFlares.push({texture:b,size:c,distance:e,x:0,y:0,z:0,scale:1,rotation:1,opacity:1,blending:f})};
THREE.LensFlare.prototype.updateLensFlares=function(){var b,c=this.lensFlares.length,e,f=-this.positionScreen.x*2,h=-this.positionScreen.y*2;for(b=0;b<c;b++)e=this.lensFlares[b],e.x=this.positionScreen.x+f*e.distance,e.y=this.positionScreen.y+h*e.distance,e.wantedRotation=e.x*Math.PI*0.25,e.rotation+=(e.wantedRotation-e.rotation)*0.25};
THREE.Material=function(b){this.id=THREE.MaterialCounter.value++;b=b||{};this.opacity=b.opacity!==void 0?b.opacity:1;this.transparent=b.transparent!==void 0?b.transparent:!1;this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.depthTest=b.depthTest!==void 0?b.depthTest:!0;this.polygonOffset=b.polygonOffset!==void 0?b.polygonOffset:!1;this.polygonOffsetFactor=b.polygonOffsetFactor!==void 0?b.polygonOffsetFactor:0;this.polygonOffsetUnits=b.polygonOffsetUnits!==void 0?b.polygonOffsetUnits:
0};THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;THREE.MaterialCounter={value:0};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};
THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.LineBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.linewidth=b.linewidth!==void 0?b.linewidth:1;this.linecap=b.linecap!==void 0?b.linecap:"round";this.linejoin=b.linejoin!==void 0?b.linejoin:"round";this.vertexColors=b.vertexColors?b.vertexColors:!1};THREE.LineBasicMaterial.prototype=new THREE.Material;
THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.ambient=b.ambient!==void 0?new THREE.Color(b.ambient):new THREE.Color(328965);this.specular=b.specular!==void 0?new THREE.Color(b.specular):new THREE.Color(1118481);this.shininess=b.shininess!==void 0?b.shininess:30;this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;
this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==
void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.shading=b.shading?b.shading:THREE.FlatShading;this.wireframe=b.wireframe?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth?b.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.fragmentShader=b.fragmentShader!==void 0?b.fragmentShader:"void main() {}";this.vertexShader=b.vertexShader!==void 0?b.vertexShader:"void main() {}";this.uniforms=b.uniforms!==void 0?b.uniforms:{};this.attributes=b.attributes;this.shading=b.shading!==void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.fog=
b.fog!==void 0?b.fog:!1;this.lights=b.lights!==void 0?b.lights:!1;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};THREE.MeshShaderMaterial.prototype=new THREE.Material;THREE.MeshShaderMaterial.prototype.constructor=THREE.MeshShaderMaterial;
THREE.ShadowVolumeDynamicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.lightMap=b.lightMap!==void 0?b.lightMap:null;this.envMap=b.envMap!==void 0?b.envMap:null;this.combine=b.combine!==void 0?b.combine:THREE.MultiplyOperation;this.reflectivity=b.reflectivity!==void 0?b.reflectivity:1;this.refractionRatio=b.refractionRatio!==void 0?b.refractionRatio:0.98;this.shading=b.shading!==
void 0?b.shading:THREE.SmoothShading;this.wireframe=b.wireframe!==void 0?b.wireframe:!1;this.wireframeLinewidth=b.wireframeLinewidth!==void 0?b.wireframeLinewidth:1;this.wireframeLinecap=b.wireframeLinecap!==void 0?b.wireframeLinecap:"round";this.wireframeLinejoin=b.wireframeLinejoin!==void 0?b.wireframeLinejoin:"round";this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1;this.skinning=b.skinning!==void 0?b.skinning:!1;this.morphTargets=b.morphTargets!==void 0?b.morphTargets:!1};
THREE.ShadowVolumeDynamicMaterial.prototype=new THREE.Material;THREE.ShadowVolumeDynamicMaterial.prototype.constructor=THREE.ShadowVolumeDynamicMaterial;
THREE.ParticleBasicMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.map=b.map!==void 0?b.map:null;this.size=b.size!==void 0?b.size:1;this.sizeAttenuation=b.sizeAttenuation!==void 0?b.sizeAttenuation:!0;this.vertexColors=b.vertexColors!==void 0?b.vertexColors:!1};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ParticleCanvasMaterial=function(b){THREE.Material.call(this,b);b=b||{};this.color=b.color!==void 0?new THREE.Color(b.color):new THREE.Color(16777215);this.program=b.program!==void 0?b.program:function(){}};THREE.ParticleCanvasMaterial.prototype=new THREE.Material;THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial;THREE.ParticleDOMMaterial=function(b){THREE.Material.call(this);this.domElement=b};
THREE.Texture=function(b,c,e,f,h,g){this.image=b;this.mapping=c!==void 0?c:new THREE.UVMapping;this.wrapS=e!==void 0?e:THREE.ClampToEdgeWrapping;this.wrapT=f!==void 0?f:THREE.ClampToEdgeWrapping;this.magFilter=h!==void 0?h:THREE.LinearFilter;this.minFilter=g!==void 0?g:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1};
THREE.Texture.prototype={clone:function(){var b=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);b.offset.copy(this.offset);b.repeat.copy(this.repeat);return b}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;
THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.Particle=function(b){THREE.Object3D.call(this);this.materials=b instanceof Array?b:[b]};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;
THREE.ParticleSystem=function(b,c){THREE.Object3D.call(this);this.geometry=b;this.materials=c instanceof Array?c:[c];this.sortParticles=!1};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(b,c,e){THREE.Object3D.call(this);this.geometry=b;this.materials=c instanceof Array?c:[c];this.type=e!=void 0?e:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;
THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(b,c){THREE.Object3D.call(this);this.geometry=b;this.materials=c&&c.length?c:[c];this.overdraw=!1;if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=b.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var e=0;e<this.geometry.morphTargets.length;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=
e}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(this.morphTargetDictionary[b]!==void 0)return this.morphTargetDictionary[b];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};
THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4;this.hasNoneBoneChildren=!1};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(b,c,e){this.matrixAutoUpdate&&(c|=this.updateMatrix());if(c||this.matrixWorldNeedsUpdate)b?this.skinMatrix.multiply(b,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0;var f,h=this.children.length;if(this.hasNoneBoneChildren){this.matrixWorld.multiply(this.skin.matrixWorld,this.skinMatrix);for(f=0;f<h;f++)b=this.children[f],b instanceof THREE.Bone?b.update(this.skinMatrix,c,e):b.update(this.matrixWorld,!0,e)}else for(f=0;f<h;f++)this.children[f].update(this.skinMatrix,
c,e)};THREE.Bone.prototype.addChild=function(b){if(this.children.indexOf(b)===-1&&(b.parent!==void 0&&b.parent.removeChild(b),b.parent=this,this.children.push(b),!(b instanceof THREE.Bone)))this.hasNoneBoneChildren=!0};
THREE.SkinnedMesh=function(b,c){THREE.Mesh.call(this,b,c);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var e,f,h,g,j,m;if(this.geometry.bones!==void 0){for(e=0;e<this.geometry.bones.length;e++)h=this.geometry.bones[e],g=h.pos,j=h.rotq,m=h.scl,f=this.addBone(),f.name=h.name,f.position.set(g[0],g[1],g[2]),f.quaternion.set(j[0],j[1],j[2],j[3]),f.useQuaternion=!0,m!==void 0?f.scale.set(m[0],m[1],m[2]):f.scale.set(1,1,1);for(e=0;e<this.bones.length;e++)h=this.geometry.bones[e],
f=this.bones[e],h.parent===-1?this.addChild(f):this.bones[h.parent].addChild(f);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;
THREE.SkinnedMesh.prototype.update=function(b,c,e){if(this.visible){this.matrixAutoUpdate&&(c|=this.updateMatrix());if(c||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0;var f,h=this.children.length;for(f=0;f<h;f++)b=this.children[f],b instanceof THREE.Bone?b.update(this.identityMatrix,!1,e):b.update(this.matrixWorld,c,e);e=this.bones.length;ba=this.bones;bm=this.boneMatrices;for(c=0;c<e;c++)ba[c].skinMatrix.flattenToArrayOffset(bm,
c*16)}};THREE.SkinnedMesh.prototype.addBone=function(b){b===void 0&&(b=new THREE.Bone(this));this.bones.push(b);return b};
THREE.SkinnedMesh.prototype.pose=function(){this.update(void 0,!0);for(var b,c=[],e=0;e<this.bones.length;e++)b=this.bones[e],c.push(THREE.Matrix4.makeInvert(b.skinMatrix)),b.skinMatrix.flattenToArrayOffset(this.boneMatrices,e*16);if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];var f;for(b=0;b<this.geometry.skinIndices.length;b++){var e=this.geometry.vertices[b].position,h=this.geometry.skinIndices[b].x,g=this.geometry.skinIndices[b].y;f=new THREE.Vector3(e.x,
e.y,e.z);this.geometry.skinVerticesA.push(c[h].multiplyVector3(f));f=new THREE.Vector3(e.x,e.y,e.z);this.geometry.skinVerticesB.push(c[g].multiplyVector3(f));this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y!==1&&(e=(1-(this.geometry.skinWeights[b].x+this.geometry.skinWeights[b].y))*0.5,this.geometry.skinWeights[b].x+=e,this.geometry.skinWeights[b].y+=e)}}};THREE.Ribbon=function(b,c){THREE.Object3D.call(this);this.geometry=b;this.materials=c instanceof Array?c:[c]};
THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.add=function(b,c){c===void 0&&(c=0);for(var c=Math.abs(c),e=0;e<this.LODs.length;e++)if(c<this.LODs[e].visibleAtDistance)break;this.LODs.splice(e,0,{visibleAtDistance:c,object3D:b});this.addChild(b)};
THREE.LOD.prototype.update=function(b,c,e){this.matrixAutoUpdate&&(c|=this.updateMatrix());if(c||this.matrixWorldNeedsUpdate)b?this.matrixWorld.multiply(b,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,c=!0;if(this.LODs.length>1){b=e.matrixWorldInverse;b=-(b.n31*this.position.x+b.n32*this.position.y+b.n33*this.position.z+b.n34);this.LODs[0].object3D.visible=!0;for(var f=1;f<this.LODs.length;f++)if(b>=this.LODs[f].visibleAtDistance)this.LODs[f-1].object3D.visible=!1,
this.LODs[f].object3D.visible=!0;else break;for(;f<this.LODs.length;f++)this.LODs[f].object3D.visible=!1}for(b=0;b<this.children.length;b++)this.children[b].update(this.matrixWorld,c,e)};THREE.ShadowVolume=function(b,c){b instanceof THREE.Mesh?(THREE.Mesh.call(this,b.geometry,c?[new THREE.ShadowVolumeDynamicMaterial]:[new THREE.ShadowVolumeDynamicMaterial]),b.addChild(this)):THREE.Mesh.call(this,b,c?[new THREE.ShadowVolumeDynamicMaterial]:[new THREE.ShadowVolumeDynamicMaterial]);this.calculateShadowVolumeGeometry()};
THREE.ShadowVolume.prototype=new THREE.Mesh;THREE.ShadowVolume.prototype.constructor=THREE.ShadowVolume;THREE.ShadowVolume.prototype.supr=THREE.Mesh.prototype;
THREE.ShadowVolume.prototype.calculateShadowVolumeGeometry=function(){if(this.geometry.edges&&this.geometry.edges.length){var b,c,e,f,h,g,j,m,p,t,n,o,v,u,x=new THREE.Geometry;x.vertices=this.geometry.vertices;f=x.faces=this.geometry.faces;var z=x.egdes=this.geometry.edges,y=x.edgeFaces=[];h=0;var w=[];b=0;for(c=f.length;b<c;b++)if(e=f[b],w.push(h),h+=e instanceof THREE.Face3?3:4,e.vertexNormals[0]=e.normal,e.vertexNormals[1]=e.normal,e.vertexNormals[2]=e.normal,e instanceof THREE.Face4)e.vertexNormals[3]=
e.normal;b=0;for(c=z.length;b<c;b++)m=z[b],e=m.faces[0],f=m.faces[1],h=m.faceIndices[0],g=m.faceIndices[1],j=m.vertexIndices[0],m=m.vertexIndices[1],e.a===j?(p="a",n=w[h]+0):e.b===j?(p="b",n=w[h]+1):e.c===j?(p="c",n=w[h]+2):e.d===j&&(p="d",n=w[h]+3),e.a===m?(p+="a",o=w[h]+0):e.b===m?(p+="b",o=w[h]+1):e.c===m?(p+="c",o=w[h]+2):e.d===m&&(p+="d",o=w[h]+3),f.a===j?(t="a",v=w[g]+0):f.b===j?(t="b",v=w[g]+1):f.c===j?(t="c",v=w[g]+2):f.d===j&&(t="d",v=w[g]+3),f.a===m?(t+="a",u=w[g]+0):f.b===m?(t+="b",u=w[g]+
1):f.c===m?(t+="c",u=w[g]+2):f.d===m&&(t+="d",u=w[g]+3),p==="ac"||p==="ad"||p==="ca"||p==="da"?n>o&&(e=n,n=o,o=e):n<o&&(e=n,n=o,o=e),t==="ac"||t==="ad"||t==="ca"||t==="da"?v>u&&(e=v,v=u,u=e):v<u&&(e=v,v=u,u=e),e=new THREE.Face4(n,o,v,u),e.normal.set(1,0,0),y.push(e);this.geometry=x}else this.calculateShadowVolumeGeometryWithoutEdgeInfo(this.geometry)};
THREE.ShadowVolume.prototype.calculateShadowVolumeGeometryWithoutEdgeInfo=function(b){this.geometry=new THREE.Geometry;this.geometry.boundingSphere=b.boundingSphere;this.geometry.edgeFaces=[];var c=this.geometry.vertices,e=this.geometry.faces,f=this.geometry.edgeFaces,h=b.faces,b=b.vertices,g=h.length,j,m,p,t,n,o=["a","b","c","d"];for(p=0;p<g;p++){m=c.length;j=h[p];j instanceof THREE.Face4?(t=4,m=new THREE.Face4(m,m+1,m+2,m+3)):(t=3,m=new THREE.Face3(m,m+1,m+2));m.normal.copy(j.normal);e.push(m);
for(m=0;m<t;m++)n=b[j[o[m]]],c.push(new THREE.Vertex(n.position.clone()))}for(g=0;g<h.length-1;g++){b=e[g];for(j=g+1;j<h.length;j++)m=e[j],m=this.facesShareEdge(c,b,m),m!==void 0&&(m=new THREE.Face4(m.indices[0],m.indices[3],m.indices[2],m.indices[1]),m.normal.set(1,0,0),f.push(m))}};
THREE.ShadowVolume.prototype.facesShareEdge=function(b,c,e){var f,h,g,j,m,p,t,n,o,v,u,x,z,y=0,w=["a","b","c","d"];f=c instanceof THREE.Face4?4:3;h=e instanceof THREE.Face4?4:3;for(x=0;x<f;x++){g=c[w[x]];m=b[g];for(z=0;z<h;z++)if(j=e[w[z]],p=b[j],Math.abs(m.position.x-p.position.x)<1.0E-4&&Math.abs(m.position.y-p.position.y)<1.0E-4&&Math.abs(m.position.z-p.position.z)<1.0E-4&&(y++,y===1&&(t=m,n=p,o=g,v=j,u=w[x]),y===2))return u+=w[x],u==="ad"||u==="ac"?{faces:[c,e],vertices:[t,n,p,m],indices:[o,v,
j,g],vertexTypes:[1,2,2,1],extrudable:!0}:{faces:[c,e],vertices:[t,m,p,n],indices:[o,g,j,v],vertexTypes:[1,1,2,2],extrudable:!0}}};
THREE.Sprite=function(b){THREE.Object3D.call(this);if(b.material!==void 0)this.material=b.material,this.map=void 0,this.blending=material.blending;else if(b.map!==void 0)this.map=b.map instanceof THREE.Texture?b.map:THREE.ImageUtils.loadTexture(b.map),this.material=void 0,this.blending=b.blending!==void 0?b.blending:THREE.NormalBlending;this.useScreenCoordinates=b.useScreenCoordinates!==void 0?b.useScreenCoordinates:!0;this.mergeWith3D=b.mergeWith3D!==void 0?b.mergeWith3D:!this.useScreenCoordinates;
this.affectedByDistance=b.affectedByDistance!==void 0?b.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=b.scaleByViewport!==void 0?b.scaleByViewport:!this.affectedByDistance;this.alignment=b.alignment instanceof THREE.Vector2?b.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.supr=THREE.Object3D.prototype;THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.collisions=this.overrideMaterial=this.fog=null;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.supr=THREE.Object3D.prototype;THREE.Scene.prototype.addChild=function(b){this.supr.addChild.call(this,b);this.addChildRecurse(b)};
THREE.Scene.prototype.addChildRecurse=function(b){if(b instanceof THREE.Light)this.lights.indexOf(b)===-1&&this.lights.push(b);else if(!(b instanceof THREE.Camera||b instanceof THREE.Bone)&&this.objects.indexOf(b)===-1)this.objects.push(b),this.__objectsAdded.push(b);for(var c=0;c<b.children.length;c++)this.addChildRecurse(b.children[c])};THREE.Scene.prototype.removeChild=function(b){this.supr.removeChild.call(this,b);this.removeChildRecurse(b)};
THREE.Scene.prototype.removeChildRecurse=function(b){if(b instanceof THREE.Light){var c=this.lights.indexOf(b);c!==-1&&this.lights.splice(c,1)}else b instanceof THREE.Camera||(c=this.objects.indexOf(b),c!==-1&&(this.objects.splice(c,1),this.__objectsRemoved.push(b)));for(c=0;c<b.children.length;c++)this.removeChildRecurse(b.children[c])};THREE.Scene.prototype.addObject=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeObject=THREE.Scene.prototype.removeChild;
THREE.Scene.prototype.addLight=THREE.Scene.prototype.addChild;THREE.Scene.prototype.removeLight=THREE.Scene.prototype.removeChild;THREE.Fog=function(b,c,e){this.color=new THREE.Color(b);this.near=c||1;this.far=e||1E3};THREE.FogExp2=function(b,c){this.color=new THREE.Color(b);this.density=c!==void 0?c:2.5E-4};
THREE.Projector=function(){function b(){var b=p[m]=p[m]||new THREE.RenderableVertex;m++;return b}function c(b,e){return e.z-b.z}function e(b,e){var c=0,f=1,j=b.z+b.w,g=e.z+e.w,k=-b.z+b.w,h=-e.z+e.w;return j>=0&&g>=0&&k>=0&&h>=0?!0:j<0&&g<0||k<0&&h<0?!1:(j<0?c=Math.max(c,j/(j-g)):g<0&&(f=Math.min(f,j/(j-g))),k<0?c=Math.max(c,k/(k-h)):h<0&&(f=Math.min(f,k/(k-h))),f<c?!1:(b.lerpSelf(e,c),e.lerpSelf(b,1-f),!0))}var f,h,g=[],j,m,p=[],t,n,o=[],v,u=[],x,z,y=[],w,I,C=[],K=new THREE.Vector4,F=new THREE.Vector4,
B=new THREE.Matrix4,O=new THREE.Matrix4,E=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],H=new THREE.Vector4,P=new THREE.Vector4;this.projectVector=function(b,e){B.multiply(e.projectionMatrix,e.matrixWorldInverse);B.multiplyVector3(b);return b};this.unprojectVector=function(b,e){B.multiply(e.matrixWorld,THREE.Matrix4.makeInvert(e.projectionMatrix));B.multiplyVector3(b);return b};this.projectObjects=function(b,e,j){var e=[],m,p,t;h=0;p=
b.objects;b=0;for(m=p.length;b<m;b++){t=p[b];var k;if(!(k=!t.visible))if(k=t instanceof THREE.Mesh){a:{k=void 0;for(var n=t.matrixWorld,o=-t.geometry.boundingSphere.radius*Math.max(t.scale.x,Math.max(t.scale.y,t.scale.z)),u=0;u<6;u++)if(k=E[u].x*n.n14+E[u].y*n.n24+E[u].z*n.n34+E[u].w,k<=o){k=!1;break a}k=!0}k=!k}if(!k)k=g[h]=g[h]||new THREE.RenderableObject,h++,f=k,K.copy(t.position),B.multiplyVector3(K),f.object=t,f.z=K.z,e.push(f)}j&&e.sort(c);return e};this.projectScene=function(f,g,h){var K=[],
S=g.near,T=g.far,k,L,ca,W,X,$,da,ea,fa,J,ia,la,ja,oa,U,ha,ga;I=z=v=n=0;g.matrixAutoUpdate&&g.update(void 0,!0);f.update(void 0,!1,g);B.multiply(g.projectionMatrix,g.matrixWorldInverse);E[0].set(B.n41-B.n11,B.n42-B.n12,B.n43-B.n13,B.n44-B.n14);E[1].set(B.n41+B.n11,B.n42+B.n12,B.n43+B.n13,B.n44+B.n14);E[2].set(B.n41+B.n21,B.n42+B.n22,B.n43+B.n23,B.n44+B.n24);E[3].set(B.n41-B.n21,B.n42-B.n22,B.n43-B.n23,B.n44-B.n24);E[4].set(B.n41-B.n31,B.n42-B.n32,B.n43-B.n33,B.n44-B.n34);E[5].set(B.n41+B.n31,B.n42+
B.n32,B.n43+B.n33,B.n44+B.n34);for(k=0;k<6;k++)fa=E[k],fa.divideScalar(Math.sqrt(fa.x*fa.x+fa.y*fa.y+fa.z*fa.z));fa=this.projectObjects(f,g,!0);f=0;for(k=fa.length;f<k;f++)if(J=fa[f].object,J.visible)if(ia=J.matrixWorld,la=J.matrixRotationWorld,ja=J.materials,oa=J.overdraw,m=0,J instanceof THREE.Mesh){U=J.geometry;W=U.vertices;ha=U.faces;U=U.faceVertexUvs;L=0;for(ca=W.length;L<ca;L++)j=b(),j.positionWorld.copy(W[L].position),ia.multiplyVector3(j.positionWorld),j.positionScreen.copy(j.positionWorld),
B.multiplyVector4(j.positionScreen),j.positionScreen.x/=j.positionScreen.w,j.positionScreen.y/=j.positionScreen.w,j.visible=j.positionScreen.z>S&&j.positionScreen.z<T;W=0;for(L=ha.length;W<L;W++){ca=ha[W];if(ca instanceof THREE.Face3)if(X=p[ca.a],$=p[ca.b],da=p[ca.c],X.visible&&$.visible&&da.visible&&(J.doubleSided||J.flipSided!=(da.positionScreen.x-X.positionScreen.x)*($.positionScreen.y-X.positionScreen.y)-(da.positionScreen.y-X.positionScreen.y)*($.positionScreen.x-X.positionScreen.x)<0))ea=o[n]=
o[n]||new THREE.RenderableFace3,n++,t=ea,t.v1.copy(X),t.v2.copy($),t.v3.copy(da);else continue;else if(ca instanceof THREE.Face4)if(X=p[ca.a],$=p[ca.b],da=p[ca.c],ea=p[ca.d],X.visible&&$.visible&&da.visible&&ea.visible&&(J.doubleSided||J.flipSided!=((ea.positionScreen.x-X.positionScreen.x)*($.positionScreen.y-X.positionScreen.y)-(ea.positionScreen.y-X.positionScreen.y)*($.positionScreen.x-X.positionScreen.x)<0||($.positionScreen.x-da.positionScreen.x)*(ea.positionScreen.y-da.positionScreen.y)-($.positionScreen.y-
da.positionScreen.y)*(ea.positionScreen.x-da.positionScreen.x)<0)))ga=u[v]=u[v]||new THREE.RenderableFace4,v++,t=ga,t.v1.copy(X),t.v2.copy($),t.v3.copy(da),t.v4.copy(ea);else continue;t.normalWorld.copy(ca.normal);la.multiplyVector3(t.normalWorld);t.centroidWorld.copy(ca.centroid);ia.multiplyVector3(t.centroidWorld);t.centroidScreen.copy(t.centroidWorld);B.multiplyVector3(t.centroidScreen);da=ca.vertexNormals;X=0;for($=da.length;X<$;X++)ea=t.vertexNormalsWorld[X],ea.copy(da[X]),la.multiplyVector3(ea);
X=0;for($=U.length;X<$;X++)if(ga=U[X][W]){da=0;for(ea=ga.length;da<ea;da++)t.uvs[X][da]=ga[da]}t.meshMaterials=ja;t.faceMaterials=ca.materials;t.overdraw=oa;t.z=t.centroidScreen.z;K.push(t)}}else if(J instanceof THREE.Line){O.multiply(B,ia);W=J.geometry.vertices;X=b();X.positionScreen.copy(W[0].position);O.multiplyVector4(X.positionScreen);L=1;for(ca=W.length;L<ca;L++)if(X=b(),X.positionScreen.copy(W[L].position),O.multiplyVector4(X.positionScreen),$=p[m-2],H.copy(X.positionScreen),P.copy($.positionScreen),
e(H,P))H.multiplyScalar(1/H.w),P.multiplyScalar(1/P.w),ia=y[z]=y[z]||new THREE.RenderableLine,z++,x=ia,x.v1.positionScreen.copy(H),x.v2.positionScreen.copy(P),x.z=Math.max(H.z,P.z),x.materials=J.materials,K.push(x)}else if(J instanceof THREE.Particle&&(F.set(J.matrixWorld.n14,J.matrixWorld.n24,J.matrixWorld.n34,1),B.multiplyVector4(F),F.z/=F.w,F.z>0&&F.z<1))ia=C[I]=C[I]||new THREE.RenderableParticle,I++,w=ia,w.x=F.x/F.w,w.y=F.y/F.w,w.z=F.z,w.rotation=J.rotation.z,w.scale.x=J.scale.x*Math.abs(w.x-
(F.x+g.projectionMatrix.n11)/(F.w+g.projectionMatrix.n14)),w.scale.y=J.scale.y*Math.abs(w.y-(F.y+g.projectionMatrix.n22)/(F.w+g.projectionMatrix.n24)),w.materials=J.materials,K.push(w);h&&K.sort(c);return K}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var b=null,c=new THREE.Projector,e,f,h,g;this.domElement=document.createElement("div");this.setSize=function(b,c){e=b;f=c;h=e/2;g=f/2};this.render=function(e,f){var p,t,n,o,v,u,x,z;b=c.projectScene(e,f);p=0;for(t=b.length;p<t;p++)if(v=b[p],v instanceof THREE.RenderableParticle){x=v.x*h+h;z=v.y*g+g;n=0;for(o=v.material.length;n<o;n++)if(u=v.material[n],u instanceof THREE.ParticleDOMMaterial)u=u.domElement,u.style.left=x+"px",u.style.top=z+"px"}}};
THREE.CanvasRenderer=function(b){function c(b){if(w!=b)x.globalAlpha=w=b}function e(b){if(I!=b){switch(b){case THREE.NormalBlending:x.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:x.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:x.globalCompositeOperation="darker"}I=b}}function f(b){if(C!=b.hex)C=b.hex,x.strokeStyle="#"+g(C.toString(16))}function h(b){if(K!=b.hex)K=b.hex,x.fillStyle="#"+g(K.toString(16))}function g(b){for(;b.length<6;)b="0"+b;return b}
var j=this,m=null,p=new THREE.Projector,b=b||{},t=b.canvas!==void 0?b.canvas:document.createElement("canvas"),n,o,v,u,x=t.getContext("2d"),z=new THREE.Color(0),y=0,w=1,I=0,C=null,K=null,F=null,B=null,O=null,E,H,P,V,G=new THREE.RenderableVertex,aa=new THREE.RenderableVertex,Q,S,T,k,L,ca,W,X,$,da,ea,fa,J=new THREE.Color(0),ia=new THREE.Color(0),la=new THREE.Color(0),ja=new THREE.Color(0),oa=new THREE.Color(0),U,ha,ga,na,za,wa,Aa,Ia,Ba,Pa,Z=new THREE.Rectangle,ka=new THREE.Rectangle,qa=new THREE.Rectangle,
sa=!1,ta=new THREE.Color,va=new THREE.Color,Da=new THREE.Color,xa=new THREE.Color,ra=new THREE.Vector3,Ea,Y,R,ua,M,ya,b=16;Ea=document.createElement("canvas");Ea.width=Ea.height=2;Y=Ea.getContext("2d");Y.fillStyle="rgba(0,0,0,1)";Y.fillRect(0,0,2,2);R=Y.getImageData(0,0,2,2);ua=R.data;M=document.createElement("canvas");M.width=M.height=b;ya=M.getContext("2d");ya.translate(-b/2,-b/2);ya.scale(b,b);b--;this.domElement=t;this.sortElements=this.sortObjects=this.autoClear=!0;this.data={vertices:0,faces:0};
this.setSize=function(b,e){n=b;o=e;v=n/2;u=o/2;t.width=n;t.height=o;Z.set(-v,-u,v,u);ka.set(-v,-u,v,u);w=1;I=0;O=B=F=K=C=null};this.setClearColor=function(b,e){z=b;y=e;ka.set(-v,-u,v,u)};this.setClearColorHex=function(b,e){z.setHex(b);y=e;ka.set(-v,-u,v,u)};this.clear=function(){x.setTransform(1,0,0,-1,v,u);if(!ka.isEmpty())ka.inflate(1),ka.minSelf(Z),y==0?x.clearRect(ka.getX(),ka.getY(),ka.getWidth(),ka.getHeight()):(e(THREE.NormalBlending),c(1),K="rgba("+Math.floor(z.r*255)+","+Math.floor(z.g*255)+
","+Math.floor(z.b*255)+","+y+")",x.fillStyle=K,x.fillRect(ka.getX(),ka.getY(),ka.getWidth(),ka.getHeight())),ka.empty()};this.render=function(b,g){function t(b){var e,c,f,j=b.lights;va.setRGB(0,0,0);Da.setRGB(0,0,0);xa.setRGB(0,0,0);b=0;for(e=j.length;b<e;b++)c=j[b],f=c.color,c instanceof THREE.AmbientLight?(va.r+=f.r,va.g+=f.g,va.b+=f.b):c instanceof THREE.DirectionalLight?(Da.r+=f.r,Da.g+=f.g,Da.b+=f.b):c instanceof THREE.PointLight&&(xa.r+=f.r,xa.g+=f.g,xa.b+=f.b)}function n(b,e,c,f){var j,k,
g,h,m=b.lights,b=0;for(j=m.length;b<j;b++)k=m[b],g=k.color,k instanceof THREE.DirectionalLight?(h=c.dot(k.position),h<=0||(h*=k.intensity,f.r+=g.r*h,f.g+=g.g*h,f.b+=g.b*h)):k instanceof THREE.PointLight&&(h=c.dot(ra.sub(k.position,e).normalize()),h<=0||(h*=k.distance==0?1:1-Math.min(e.distanceTo(k.position)/k.distance,1),h!=0&&(h*=k.intensity,f.r+=g.r*h,f.g+=g.g*h,f.b+=g.b*h)))}function o(b,j,k){c(k.opacity);e(k.blending);var g,m,p,t,ma,n;if(k instanceof THREE.ParticleBasicMaterial){if(k.map)t=k.map.image,
ma=t.width>>1,n=t.height>>1,k=j.scale.x*v,p=j.scale.y*u,g=k*ma,m=p*n,qa.set(b.x-g,b.y-m,b.x+g,b.y+m),Z.instersects(qa)&&(x.save(),x.translate(b.x,b.y),x.rotate(-j.rotation),x.scale(k,-p),x.translate(-ma,-n),x.drawImage(t,0,0),x.restore())}else k instanceof THREE.ParticleCanvasMaterial&&(g=j.scale.x*v,m=j.scale.y*u,qa.set(b.x-g,b.y-m,b.x+g,b.y+m),Z.instersects(qa)&&(f(k.color),h(k.color),x.save(),x.translate(b.x,b.y),x.rotate(-j.rotation),x.scale(g,m),k.program(x),x.restore()))}function w(b,j,k,g){c(g.opacity);
e(g.blending);x.beginPath();x.moveTo(b.positionScreen.x,b.positionScreen.y);x.lineTo(j.positionScreen.x,j.positionScreen.y);x.closePath();if(g instanceof THREE.LineBasicMaterial){b=g.linewidth;if(F!=b)x.lineWidth=F=b;b=g.linecap;if(B!=b)x.lineCap=B=b;b=g.linejoin;if(O!=b)x.lineJoin=O=b;f(g.color);x.stroke();qa.inflate(g.linewidth*2)}}function y(b,f,h,m,p,t,ma,o,u){j.data.vertices+=3;j.data.faces++;c(o.opacity);e(o.blending);Q=b.positionScreen.x;S=b.positionScreen.y;T=f.positionScreen.x;k=f.positionScreen.y;
L=h.positionScreen.x;ca=h.positionScreen.y;C(Q,S,T,k,L,ca);if(o instanceof THREE.MeshBasicMaterial)if(o.map)o.map.mapping instanceof THREE.UVMapping&&(na=ma.uvs[0],Ga(Q,S,T,k,L,ca,o.map.image,na[m].u,na[m].v,na[p].u,na[p].v,na[t].u,na[t].v));else if(o.envMap){if(o.envMap.mapping instanceof THREE.SphericalReflectionMapping)b=g.matrixWorldInverse,ra.copy(ma.vertexNormalsWorld[0]),za=(ra.x*b.n11+ra.y*b.n12+ra.z*b.n13)*0.5+0.5,wa=-(ra.x*b.n21+ra.y*b.n22+ra.z*b.n23)*0.5+0.5,ra.copy(ma.vertexNormalsWorld[1]),
Aa=(ra.x*b.n11+ra.y*b.n12+ra.z*b.n13)*0.5+0.5,Ia=-(ra.x*b.n21+ra.y*b.n22+ra.z*b.n23)*0.5+0.5,ra.copy(ma.vertexNormalsWorld[2]),Ba=(ra.x*b.n11+ra.y*b.n12+ra.z*b.n13)*0.5+0.5,Pa=-(ra.x*b.n21+ra.y*b.n22+ra.z*b.n23)*0.5+0.5,Ga(Q,S,T,k,L,ca,o.envMap.image,za,wa,Aa,Ia,Ba,Pa)}else o.wireframe?Ja(o.color,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(o.color);else if(o instanceof THREE.MeshLambertMaterial)o.map&&!o.wireframe&&(o.map.mapping instanceof THREE.UVMapping&&(na=ma.uvs[0],Ga(Q,S,
T,k,L,ca,o.map.image,na[m].u,na[m].v,na[p].u,na[p].v,na[t].u,na[t].v)),e(THREE.SubtractiveBlending)),sa?!o.wireframe&&o.shading==THREE.SmoothShading&&ma.vertexNormalsWorld.length==3?(ia.r=la.r=ja.r=va.r,ia.g=la.g=ja.g=va.g,ia.b=la.b=ja.b=va.b,n(u,ma.v1.positionWorld,ma.vertexNormalsWorld[0],ia),n(u,ma.v2.positionWorld,ma.vertexNormalsWorld[1],la),n(u,ma.v3.positionWorld,ma.vertexNormalsWorld[2],ja),oa.r=(la.r+ja.r)*0.5,oa.g=(la.g+ja.g)*0.5,oa.b=(la.b+ja.b)*0.5,ga=K(ia,la,ja,oa),Ga(Q,S,T,k,L,ca,ga,
0,0,1,0,0,1)):(ta.r=va.r,ta.g=va.g,ta.b=va.b,n(u,ma.centroidWorld,ma.normalWorld,ta),J.r=Math.max(0,Math.min(o.color.r*ta.r,1)),J.g=Math.max(0,Math.min(o.color.g*ta.g,1)),J.b=Math.max(0,Math.min(o.color.b*ta.b,1)),J.updateHex(),o.wireframe?Ja(J,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(J)):o.wireframe?Ja(o.color,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(o.color);else if(o instanceof THREE.MeshDepthMaterial)U=g.near,ha=g.far,ia.r=ia.g=ia.b=1-Na(b.positionScreen.z,
U,ha),la.r=la.g=la.b=1-Na(f.positionScreen.z,U,ha),ja.r=ja.g=ja.b=1-Na(h.positionScreen.z,U,ha),oa.r=(la.r+ja.r)*0.5,oa.g=(la.g+ja.g)*0.5,oa.b=(la.b+ja.b)*0.5,ga=K(ia,la,ja,oa),Ga(Q,S,T,k,L,ca,ga,0,0,1,0,0,1);else if(o instanceof THREE.MeshNormalMaterial)J.r=Qa(ma.normalWorld.x),J.g=Qa(ma.normalWorld.y),J.b=Qa(ma.normalWorld.z),J.updateHex(),o.wireframe?Ja(J,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(J)}function z(b,f,h,m,p,t,ma,o,u){j.data.vertices+=4;j.data.faces++;c(o.opacity);
e(o.blending);if(o.map||o.envMap)y(b,f,m,0,1,3,ma,o,u),y(p,h,t,1,2,3,ma,o,u);else if(Q=b.positionScreen.x,S=b.positionScreen.y,T=f.positionScreen.x,k=f.positionScreen.y,L=h.positionScreen.x,ca=h.positionScreen.y,W=m.positionScreen.x,X=m.positionScreen.y,$=p.positionScreen.x,da=p.positionScreen.y,ea=t.positionScreen.x,fa=t.positionScreen.y,o instanceof THREE.MeshBasicMaterial)Sa(Q,S,T,k,L,ca,W,X),o.wireframe?Ja(o.color,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(o.color);else if(o instanceof
THREE.MeshLambertMaterial)sa?!o.wireframe&&o.shading==THREE.SmoothShading&&ma.vertexNormalsWorld.length==4?(ia.r=la.r=ja.r=oa.r=va.r,ia.g=la.g=ja.g=oa.g=va.g,ia.b=la.b=ja.b=oa.b=va.b,n(u,ma.v1.positionWorld,ma.vertexNormalsWorld[0],ia),n(u,ma.v2.positionWorld,ma.vertexNormalsWorld[1],la),n(u,ma.v4.positionWorld,ma.vertexNormalsWorld[3],ja),n(u,ma.v3.positionWorld,ma.vertexNormalsWorld[2],oa),ga=K(ia,la,ja,oa),C(Q,S,T,k,W,X),Ga(Q,S,T,k,W,X,ga,0,0,1,0,0,1),C($,da,L,ca,ea,fa),Ga($,da,L,ca,ea,fa,ga,1,
0,1,1,0,1)):(ta.r=va.r,ta.g=va.g,ta.b=va.b,n(u,ma.centroidWorld,ma.normalWorld,ta),J.r=Math.max(0,Math.min(o.color.r*ta.r,1)),J.g=Math.max(0,Math.min(o.color.g*ta.g,1)),J.b=Math.max(0,Math.min(o.color.b*ta.b,1)),J.updateHex(),Sa(Q,S,T,k,L,ca,W,X),o.wireframe?Ja(J,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(J)):(Sa(Q,S,T,k,L,ca,W,X),o.wireframe?Ja(o.color,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(o.color));else if(o instanceof THREE.MeshNormalMaterial)J.r=Qa(ma.normalWorld.x),
J.g=Qa(ma.normalWorld.y),J.b=Qa(ma.normalWorld.z),J.updateHex(),Sa(Q,S,T,k,L,ca,W,X),o.wireframe?Ja(J,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):I(J);else if(o instanceof THREE.MeshDepthMaterial)U=g.near,ha=g.far,ia.r=ia.g=ia.b=1-Na(b.positionScreen.z,U,ha),la.r=la.g=la.b=1-Na(f.positionScreen.z,U,ha),ja.r=ja.g=ja.b=1-Na(m.positionScreen.z,U,ha),oa.r=oa.g=oa.b=1-Na(h.positionScreen.z,U,ha),ga=K(ia,la,ja,oa),C(Q,S,T,k,W,X),Ga(Q,S,T,k,W,X,ga,0,0,1,0,0,1),C($,da,L,ca,ea,fa),Ga($,da,
L,ca,ea,fa,ga,1,0,1,1,0,1)}function C(b,e,c,f,j,k){x.beginPath();x.moveTo(b,e);x.lineTo(c,f);x.lineTo(j,k);x.lineTo(b,e);x.closePath()}function Sa(b,e,c,f,j,k,g,h){x.beginPath();x.moveTo(b,e);x.lineTo(c,f);x.lineTo(j,k);x.lineTo(g,h);x.lineTo(b,e);x.closePath()}function Ja(b,e,c,j){if(F!=e)x.lineWidth=F=e;if(B!=c)x.lineCap=B=c;if(O!=j)x.lineJoin=O=j;f(b);x.stroke();qa.inflate(e*2)}function I(b){h(b);x.fill()}function Ga(b,e,c,f,j,k,g,h,m,p,ma,o,t){var n,u;n=g.width-1;u=g.height-1;h*=n;m*=u;p*=n;ma*=
u;o*=n;t*=u;c-=b;f-=e;j-=b;k-=e;p-=h;ma-=m;o-=h;t-=m;n=p*t-o*ma;if(!((n<0?-n:n)<1))u=1/n,n=(t*c-ma*j)*u,ma=(t*f-ma*k)*u,c=(p*j-o*c)*u,f=(p*k-o*f)*u,b=b-n*h-c*m,e=e-ma*h-f*m,x.save(),x.transform(n,ma,c,f,b,e),x.clip(),x.drawImage(g,0,0),x.restore()}function K(b,e,c,f){var j=~~(b.r*255),k=~~(b.g*255),b=~~(b.b*255),g=~~(e.r*255),h=~~(e.g*255),e=~~(e.b*255),m=~~(c.r*255),ma=~~(c.g*255),c=~~(c.b*255),p=~~(f.r*255),o=~~(f.g*255),f=~~(f.b*255);ua[0]=j<0?0:j>255?255:j;ua[1]=k<0?0:k>255?255:k;ua[2]=b<0?0:
b>255?255:b;ua[4]=g<0?0:g>255?255:g;ua[5]=h<0?0:h>255?255:h;ua[6]=e<0?0:e>255?255:e;ua[8]=m<0?0:m>255?255:m;ua[9]=ma<0?0:ma>255?255:ma;ua[10]=c<0?0:c>255?255:c;ua[12]=p<0?0:p>255?255:p;ua[13]=o<0?0:o>255?255:o;ua[14]=f<0?0:f>255?255:f;Y.putImageData(R,0,0);ya.drawImage(Ea,0,0);return M}function Na(b,e,c){b=(b-e)/(c-e);return b*b*(3-2*b)}function Qa(b){b=(b+1)*0.5;return b<0?0:b>1?1:b}function Ka(b,e){var c=e.x-b.x,f=e.y-b.y,j=c*c+f*f;j!=0&&(j=1/Math.sqrt(j),c*=j,f*=j,e.x+=c,e.y+=f,b.x-=c,b.y-=f)}
var Ta,Va,pa,Ca,La,Ra,Ua,D;this.autoClear?this.clear():x.setTransform(1,0,0,-1,v,u);j.data.vertices=0;j.data.faces=0;m=p.projectScene(b,g,this.sortElements);(sa=b.lights.length>0)&&t(b);Ta=0;for(Va=m.length;Ta<Va;Ta++){pa=m[Ta];qa.empty();if(pa instanceof THREE.RenderableParticle){E=pa;E.x*=v;E.y*=u;Ca=0;for(La=pa.materials.length;Ca<La;)D=pa.materials[Ca++],D.opacity!=0&&o(E,pa,D,b)}else if(pa instanceof THREE.RenderableLine){if(E=pa.v1,H=pa.v2,E.positionScreen.x*=v,E.positionScreen.y*=u,H.positionScreen.x*=
v,H.positionScreen.y*=u,qa.addPoint(E.positionScreen.x,E.positionScreen.y),qa.addPoint(H.positionScreen.x,H.positionScreen.y),Z.instersects(qa)){Ca=0;for(La=pa.materials.length;Ca<La;)D=pa.materials[Ca++],D.opacity!=0&&w(E,H,pa,D,b)}}else if(pa instanceof THREE.RenderableFace3){if(E=pa.v1,H=pa.v2,P=pa.v3,E.positionScreen.x*=v,E.positionScreen.y*=u,H.positionScreen.x*=v,H.positionScreen.y*=u,P.positionScreen.x*=v,P.positionScreen.y*=u,pa.overdraw&&(Ka(E.positionScreen,H.positionScreen),Ka(H.positionScreen,
P.positionScreen),Ka(P.positionScreen,E.positionScreen)),qa.add3Points(E.positionScreen.x,E.positionScreen.y,H.positionScreen.x,H.positionScreen.y,P.positionScreen.x,P.positionScreen.y),Z.instersects(qa)){Ca=0;for(La=pa.meshMaterials.length;Ca<La;)if(D=pa.meshMaterials[Ca++],D instanceof THREE.MeshFaceMaterial){Ra=0;for(Ua=pa.faceMaterials.length;Ra<Ua;)(D=pa.faceMaterials[Ra++])&&D.opacity!=0&&y(E,H,P,0,1,2,pa,D,b)}else D.opacity!=0&&y(E,H,P,0,1,2,pa,D,b)}}else if(pa instanceof THREE.RenderableFace4&&
(E=pa.v1,H=pa.v2,P=pa.v3,V=pa.v4,E.positionScreen.x*=v,E.positionScreen.y*=u,H.positionScreen.x*=v,H.positionScreen.y*=u,P.positionScreen.x*=v,P.positionScreen.y*=u,V.positionScreen.x*=v,V.positionScreen.y*=u,G.positionScreen.copy(H.positionScreen),aa.positionScreen.copy(V.positionScreen),pa.overdraw&&(Ka(E.positionScreen,H.positionScreen),Ka(H.positionScreen,V.positionScreen),Ka(V.positionScreen,E.positionScreen),Ka(P.positionScreen,G.positionScreen),Ka(P.positionScreen,aa.positionScreen)),qa.addPoint(E.positionScreen.x,
E.positionScreen.y),qa.addPoint(H.positionScreen.x,H.positionScreen.y),qa.addPoint(P.positionScreen.x,P.positionScreen.y),qa.addPoint(V.positionScreen.x,V.positionScreen.y),Z.instersects(qa))){Ca=0;for(La=pa.meshMaterials.length;Ca<La;)if(D=pa.meshMaterials[Ca++],D instanceof THREE.MeshFaceMaterial){Ra=0;for(Ua=pa.faceMaterials.length;Ra<Ua;)(D=pa.faceMaterials[Ra++])&&D.opacity!=0&&z(E,H,P,V,G,aa,pa,D,b)}else D.opacity!=0&&z(E,H,P,V,G,aa,pa,D,b)}ka.addRectangle(qa)}x.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function b(b,e,c){var f,j,k,g;f=0;for(j=b.lights.length;f<j;f++)k=b.lights[f],k instanceof THREE.DirectionalLight?(g=e.normalWorld.dot(k.position)*k.intensity,g>0&&(c.r+=k.color.r*g,c.g+=k.color.g*g,c.b+=k.color.b*g)):k instanceof THREE.PointLight&&(V.sub(k.position,e.centroidWorld),V.normalize(),g=e.normalWorld.dot(V)*k.intensity,g>0&&(c.r+=k.color.r*g,c.g+=k.color.g*g,c.b+=k.color.b*g))}function c(e,c,k,m,p,o){j.data.vertices+=3;j.data.faces++;Q=f(S++);Q.setAttribute("d",
"M "+e.positionScreen.x+" "+e.positionScreen.y+" L "+c.positionScreen.x+" "+c.positionScreen.y+" L "+k.positionScreen.x+","+k.positionScreen.y+"z");p instanceof THREE.MeshBasicMaterial?F.hex=p.color.hex:p instanceof THREE.MeshLambertMaterial?K?(B.r=O.r,B.g=O.g,B.b=O.b,b(o,m,B),F.r=Math.max(0,Math.min(p.color.r*B.r,1)),F.g=Math.max(0,Math.min(p.color.g*B.g,1)),F.b=Math.max(0,Math.min(p.color.b*B.b,1)),F.updateHex()):F.hex=p.color.hex:p instanceof THREE.MeshDepthMaterial?(P=1-p.__2near/(p.__farPlusNear-
m.z*p.__farMinusNear),F.setRGB(P,P,P)):p instanceof THREE.MeshNormalMaterial&&F.setRGB(h(m.normalWorld.x),h(m.normalWorld.y),h(m.normalWorld.z));p.wireframe?Q.setAttribute("style","fill: none; stroke: #"+g(F.hex.toString(16))+"; stroke-width: "+p.wireframeLinewidth+"; stroke-opacity: "+p.opacity+"; stroke-linecap: "+p.wireframeLinecap+"; stroke-linejoin: "+p.wireframeLinejoin):Q.setAttribute("style","fill: #"+g(F.hex.toString(16))+"; fill-opacity: "+p.opacity);t.appendChild(Q)}function e(e,c,k,m,
p,o,n){j.data.vertices+=4;j.data.faces++;Q=f(S++);Q.setAttribute("d","M "+e.positionScreen.x+" "+e.positionScreen.y+" L "+c.positionScreen.x+" "+c.positionScreen.y+" L "+k.positionScreen.x+","+k.positionScreen.y+" L "+m.positionScreen.x+","+m.positionScreen.y+"z");o instanceof THREE.MeshBasicMaterial?F.hex=o.color.hex:o instanceof THREE.MeshLambertMaterial?K?(B.r=O.r,B.g=O.g,B.b=O.b,b(n,p,B),F.r=Math.max(0,Math.min(o.color.r*B.r,1)),F.g=Math.max(0,Math.min(o.color.g*B.g,1)),F.b=Math.max(0,Math.min(o.color.b*
B.b,1)),F.updateHex()):F.hex=o.color.hex:o instanceof THREE.MeshDepthMaterial?(P=1-o.__2near/(o.__farPlusNear-p.z*o.__farMinusNear),F.setRGB(P,P,P)):o instanceof THREE.MeshNormalMaterial&&F.setRGB(h(p.normalWorld.x),h(p.normalWorld.y),h(p.normalWorld.z));o.wireframe?Q.setAttribute("style","fill: none; stroke: #"+g(F.hex.toString(16))+"; stroke-width: "+o.wireframeLinewidth+"; stroke-opacity: "+o.opacity+"; stroke-linecap: "+o.wireframeLinecap+"; stroke-linejoin: "+o.wireframeLinejoin):Q.setAttribute("style",
"fill: #"+g(F.hex.toString(16))+"; fill-opacity: "+o.opacity);t.appendChild(Q)}function f(b){G[b]==null&&(G[b]=document.createElementNS("http://www.w3.org/2000/svg","path"),k==0&&G[b].setAttribute("shape-rendering","crispEdges"));return G[b]}function h(b){b=(b+1)*0.5;return b<0?0:b>1?1:b}function g(b){for(;b.length<6;)b="0"+b;return b}var j=this,m=null,p=new THREE.Projector,t=document.createElementNS("http://www.w3.org/2000/svg","svg"),n,o,v,u,x,z,y,w,I=new THREE.Rectangle,C=new THREE.Rectangle,K=
!1,F=new THREE.Color(16777215),B=new THREE.Color(16777215),O=new THREE.Color(0),E=new THREE.Color(0),H=new THREE.Color(0),P,V=new THREE.Vector3,G=[],aa=[],Q,S,T,k=1;this.domElement=t;this.sortElements=this.sortObjects=this.autoClear=!0;this.data={vertices:0,faces:0};this.setQuality=function(b){switch(b){case "high":k=1;break;case "low":k=0}};this.setSize=function(b,e){n=b;o=e;v=n/2;u=o/2;t.setAttribute("viewBox",-v+" "+-u+" "+n+" "+o);t.setAttribute("width",n);t.setAttribute("height",o);I.set(-v,
-u,v,u)};this.clear=function(){for(;t.childNodes.length>0;)t.removeChild(t.childNodes[0])};this.render=function(b,f){var h,o,n,F,B,P,J,G;this.autoClear&&this.clear();j.data.vertices=0;j.data.faces=0;m=p.projectScene(b,f,this.sortElements);T=S=0;if(K=b.lights.length>0){J=b.lights;O.setRGB(0,0,0);E.setRGB(0,0,0);H.setRGB(0,0,0);h=0;for(o=J.length;h<o;h++)n=J[h],F=n.color,n instanceof THREE.AmbientLight?(O.r+=F.r,O.g+=F.g,O.b+=F.b):n instanceof THREE.DirectionalLight?(E.r+=F.r,E.g+=F.g,E.b+=F.b):n instanceof
THREE.PointLight&&(H.r+=F.r,H.g+=F.g,H.b+=F.b)}h=0;for(o=m.length;h<o;h++)if(J=m[h],C.empty(),J instanceof THREE.RenderableParticle){x=J;x.x*=v;x.y*=-u;n=0;for(F=J.materials.length;n<F;)n++}else if(J instanceof THREE.RenderableLine){if(x=J.v1,z=J.v2,x.positionScreen.x*=v,x.positionScreen.y*=-u,z.positionScreen.x*=v,z.positionScreen.y*=-u,C.addPoint(x.positionScreen.x,x.positionScreen.y),C.addPoint(z.positionScreen.x,z.positionScreen.y),I.instersects(C)){n=0;for(F=J.materials.length;n<F;)if((G=J.materials[n++])&&
G.opacity!=0){B=x;P=z;var V=T++;aa[V]==null&&(aa[V]=document.createElementNS("http://www.w3.org/2000/svg","line"),k==0&&aa[V].setAttribute("shape-rendering","crispEdges"));Q=aa[V];Q.setAttribute("x1",B.positionScreen.x);Q.setAttribute("y1",B.positionScreen.y);Q.setAttribute("x2",P.positionScreen.x);Q.setAttribute("y2",P.positionScreen.y);G instanceof THREE.LineBasicMaterial&&(Q.setAttribute("style","fill: none; stroke: ##"+g(G.color.hex.toString(16))+"; stroke-width: "+G.linewidth+"; stroke-opacity: "+
G.opacity+"; stroke-linecap: "+G.linecap+"; stroke-linejoin: "+G.linejoin),t.appendChild(Q))}}}else if(J instanceof THREE.RenderableFace3){if(x=J.v1,z=J.v2,y=J.v3,x.positionScreen.x*=v,x.positionScreen.y*=-u,z.positionScreen.x*=v,z.positionScreen.y*=-u,y.positionScreen.x*=v,y.positionScreen.y*=-u,C.addPoint(x.positionScreen.x,x.positionScreen.y),C.addPoint(z.positionScreen.x,z.positionScreen.y),C.addPoint(y.positionScreen.x,y.positionScreen.y),I.instersects(C)){n=0;for(F=J.meshMaterials.length;n<
F;)if(G=J.meshMaterials[n++],G instanceof THREE.MeshFaceMaterial){B=0;for(P=J.faceMaterials.length;B<P;)(G=J.faceMaterials[B++])&&G.opacity!=0&&c(x,z,y,J,G,b)}else G&&G.opacity!=0&&c(x,z,y,J,G,b)}}else if(J instanceof THREE.RenderableFace4&&(x=J.v1,z=J.v2,y=J.v3,w=J.v4,x.positionScreen.x*=v,x.positionScreen.y*=-u,z.positionScreen.x*=v,z.positionScreen.y*=-u,y.positionScreen.x*=v,y.positionScreen.y*=-u,w.positionScreen.x*=v,w.positionScreen.y*=-u,C.addPoint(x.positionScreen.x,x.positionScreen.y),C.addPoint(z.positionScreen.x,
z.positionScreen.y),C.addPoint(y.positionScreen.x,y.positionScreen.y),C.addPoint(w.positionScreen.x,w.positionScreen.y),I.instersects(C))){n=0;for(F=J.meshMaterials.length;n<F;)if(G=J.meshMaterials[n++],G instanceof THREE.MeshFaceMaterial){B=0;for(P=J.faceMaterials.length;B<P;)(G=J.faceMaterials[B++])&&G.opacity!=0&&e(x,z,y,w,J,G,b)}else G&&G.opacity!=0&&e(x,z,y,w,J,G,b)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = vec4( mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity ), opacity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",
envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef PHONG\nvPointLight[ i ] = vec4( lVector, lDistance );\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mColor = vec4( diffuse, opacity );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nvec3 pointHalfVector = normalize( vPointLight[ i ].xyz + viewPosition );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight * pointDistance;\npointSpecular += mSpecular * pointSpecularWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\nvColor = color;\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec4 shadowColor = vec4( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < ( shadowCoord.z + shadowBias ) )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec4( vec3( ( 1.0 - shadowDarkness * shadow ) ), 1.0 );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < ( shadowCoord.z + shadowBias ) )\nshadowColor = shadowColor * vec4( vec3( shadowDarkness ), 1.0 );\n#endif\n}\n}\ngl_FragColor = gl_FragColor * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif"};
THREE.UniformsUtils={merge:function(b){var c,e,f,h={};for(c=0;c<b.length;c++)for(e in f=this.clone(b[c]),f)h[e]=f[e];return h},clone:function(b){var c,e,f,h={};for(c in b)for(e in h[c]={},b[c])f=b[c][e],h[c][e]=f instanceof THREE.Color||f instanceof THREE.Vector2||f instanceof THREE.Vector3||f instanceof THREE.Vector4||f instanceof THREE.Matrix4||f instanceof THREE.Texture?f.clone():f instanceof Array?f.slice():f;return h}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",
value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:3,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 UV;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * vVisibility;\ngl_FragColor = color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 UV;\nvarying vec2 vUV;\nvoid main() {\nvUV = UV;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity * visibility;\ngl_FragColor = color;\n}\n}"},
sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 color = texture2D( map, vUV );\ncolor.a *= opacity;\ngl_FragColor = color;\n}"},shadowPost:{vertexShader:"uniform \tmat4 \tprojectionMatrix;\nattribute \tvec3 \tposition;\nvoid main() {\ngl_Position = projectionMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform \tfloat \tdarkness;\nvoid main() {\ngl_FragColor = vec4( 0, 0, 0, darkness );\n}"},
shadowVolumeDynamic:{uniforms:{directionalLightDirection:{type:"fv",value:[]}},vertexShader:"uniform \tvec3 \tdirectionalLightDirection;\nvoid main() {\nvec4 pos      = objectMatrix * vec4( position, 1.0 );\nvec3 norm     = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nvec4 extruded = vec4( directionalLightDirection * 5000.0 * step( 0.0, dot( directionalLightDirection, norm ) ), 0.0 );\ngl_Position   = projectionMatrix * viewMatrix * ( pos + extruded );\n}",
fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0 );\n}"},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}",vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},
normal:{uniforms:{opacity:{type:"f",value:1}},fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}",vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );\ngl_FragColor = gl_FragColor * vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vLightWeighting, 1.0 );",THREE.ShaderChunk.lights_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsLib.particle,fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["uniform float size;\nuniform float scale;",
THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},depthRGBA:{uniforms:{},fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}",
vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n")}};
THREE.WebGLRenderer=function(b){function c(b,e,c){var f,j,g,h=b.vertices,m=h.length,p=b.colors,o=p.length,t=b.__vertexArray,n=b.__colorArray,u=b.__sortArray,v=b.__dirtyVertices,x=b.__dirtyColors,w=b.__webglCustomAttributes,y,z;if(w)for(y in w)w[y].offset=0;if(c.sortParticles){na.multiplySelf(c.matrixWorld);for(f=0;f<m;f++)j=h[f].position,Aa.copy(j),na.multiplyVector3(Aa),u[f]=[Aa.z,f];u.sort(function(b,e){return e[0]-b[0]});for(f=0;f<m;f++)j=h[u[f][1]].position,g=f*3,t[g]=j.x,t[g+1]=j.y,t[g+2]=j.z;
for(f=0;f<o;f++)g=f*3,color=p[u[f][1]],n[g]=color.r,n[g+1]=color.g,n[g+2]=color.b;if(w)for(y in w){f=w[y];p=f.value.length;for(g=0;g<p;g++){index=u[g][1];o=f.offset;if(f.size===1){if(f.boundTo===void 0||f.boundTo==="vertices")f.array[o]=f.value[index]}else{if(f.boundTo===void 0||f.boundTo==="vertices")z=f.value[index];f.size===2?(f.array[o]=z.x,f.array[o+1]=z.y):f.size===3?f.type==="c"?(f.array[o]=z.r,f.array[o+1]=z.g,f.array[o+2]=z.b):(f.array[o]=z.x,f.array[o+1]=z.y,f.array[o+2]=z.z):(f.array[o]=
z.x,f.array[o+1]=z.y,f.array[o+2]=z.z,f.array[o+3]=z.w)}f.offset+=f.size}}}else{if(v)for(f=0;f<m;f++)j=h[f].position,g=f*3,t[g]=j.x,t[g+1]=j.y,t[g+2]=j.z;if(x)for(f=0;f<o;f++)color=p[f],g=f*3,n[g]=color.r,n[g+1]=color.g,n[g+2]=color.b;if(w)for(y in w)if(f=w[y],f.__original.needsUpdate){p=f.value.length;for(g=0;g<p;g++){o=f.offset;if(f.size===1){if(f.boundTo===void 0||f.boundTo==="vertices")f.array[o]=f.value[g]}else{if(f.boundTo===void 0||f.boundTo==="vertices")z=f.value[g];f.size===2?(f.array[o]=
z.x,f.array[o+1]=z.y):f.size===3?f.type==="c"?(f.array[o]=z.r,f.array[o+1]=z.g,f.array[o+2]=z.b):(f.array[o]=z.x,f.array[o+1]=z.y,f.array[o+2]=z.z):(f.array[o]=z.x,f.array[o+1]=z.y,f.array[o+2]=z.z,f.array[o+3]=z.w)}f.offset+=f.size}}}if(v||c.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,b.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,t,e);if(x||c.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,b.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,n,e);if(w)for(y in w)if(f=w[y],f.__original.needsUpdate||c.sortParticles)k.bindBuffer(k.ARRAY_BUFFER,
f.buffer),k.bufferData(k.ARRAY_BUFFER,f.array,e)}function e(b,e,c,f,j){f.program||T.initMaterial(f,e,c,j);if(f.morphTargets&&!j.__webglMorphTargetInfluences){j.__webglMorphTargetInfluences=new Float32Array(T.maxMorphTargets);for(var g=0,h=this.maxMorphTargets;g<h;g++)j.__webglMorphTargetInfluences[g]=0}var g=f.program,h=g.uniforms,m=f.uniforms;g!=ca&&(k.useProgram(g),ca=g);k.uniformMatrix4fv(h.projectionMatrix,!1,za);if(c&&(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||
f instanceof THREE.MeshPhongMaterial||f instanceof THREE.LineBasicMaterial||f instanceof THREE.ParticleBasicMaterial||f.fog))if(m.fogColor.value=c.color,c instanceof THREE.Fog)m.fogNear.value=c.near,m.fogFar.value=c.far;else if(c instanceof THREE.FogExp2)m.fogDensity.value=c.density;if(f instanceof THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f.lights){var o,p,t,n=0,u=0,v=0,x,w,y,z=Ia,C=z.directional.colors,E=z.directional.positions,F=z.point.colors,I=z.point.positions,B=z.point.distances,
U=0,D=0,c=p=y=0;for(o=e.length;c<o;c++)if(p=e[c],t=p.color,x=p.position,w=p.intensity,y=p.distance,p instanceof THREE.AmbientLight)n+=t.r,u+=t.g,v+=t.b;else if(p instanceof THREE.DirectionalLight)y=U*3,C[y]=t.r*w,C[y+1]=t.g*w,C[y+2]=t.b*w,E[y]=x.x,E[y+1]=x.y,E[y+2]=x.z,U+=1;else if(p instanceof THREE.SpotLight)y=U*3,C[y]=t.r*w,C[y+1]=t.g*w,C[y+2]=t.b*w,t=1/x.length(),E[y]=x.x*t,E[y+1]=x.y*t,E[y+2]=x.z*t,U+=1;else if(p instanceof THREE.PointLight)p=D*3,F[p]=t.r*w,F[p+1]=t.g*w,F[p+2]=t.b*w,I[p]=x.x,
I[p+1]=x.y,I[p+2]=x.z,B[D]=y,D+=1;for(c=U*3;c<C.length;c++)C[c]=0;for(c=D*3;c<F.length;c++)F[c]=0;z.point.length=D;z.directional.length=U;z.ambient[0]=n;z.ambient[1]=u;z.ambient[2]=v;c=Ia;m.enableLighting.value=c.directional.length+c.point.length;m.ambientLightColor.value=c.ambient;m.directionalLightColor.value=c.directional.colors;m.directionalLightDirection.value=c.directional.positions;m.pointLightColor.value=c.point.colors;m.pointLightPosition.value=c.point.positions;m.pointLightDistance.value=
c.point.distances}if(f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)m.diffuse.value=f.color,m.opacity.value=f.opacity,(m.map.texture=f.map)&&m.offsetRepeat.value.set(f.map.offset.x,f.map.offset.y,f.map.repeat.x,f.map.repeat.y),m.lightMap.texture=f.lightMap,m.envMap.texture=f.envMap,m.reflectivity.value=f.reflectivity,m.refractionRatio.value=f.refractionRatio,m.combine.value=f.combine,m.useRefract.value=f.envMap&&f.envMap.mapping instanceof
THREE.CubeRefractionMapping;if(f instanceof THREE.LineBasicMaterial)m.diffuse.value=f.color,m.opacity.value=f.opacity;else if(f instanceof THREE.ParticleBasicMaterial)m.psColor.value=f.color,m.opacity.value=f.opacity,m.size.value=f.size,m.scale.value=Ba.height/2,m.map.texture=f.map;else if(f instanceof THREE.MeshPhongMaterial)m.ambient.value=f.ambient,m.specular.value=f.specular,m.shininess.value=f.shininess;else if(f instanceof THREE.MeshDepthMaterial)m.mNear.value=b.near,m.mFar.value=b.far,m.opacity.value=
f.opacity;else if(f instanceof THREE.MeshNormalMaterial)m.opacity.value=f.opacity;if(j.receiveShadow&&!f._shadowPass&&m.shadowMatrix){for(c=0;c<ta.length;c++)m.shadowMatrix.value[c]=ta[c],m.shadowMap.texture[c]=T.shadowMap[c];m.shadowDarkness.value=T.shadowMapDarkness;m.shadowBias.value=T.shadowMapBias}for(var K in m)if(n=g.uniforms[K])if(o=m[K],u=o.type,c=o.value,u=="i")k.uniform1i(n,c);else if(u=="f")k.uniform1f(n,c);else if(u=="fv1")k.uniform1fv(n,c);else if(u=="fv")k.uniform3fv(n,c);else if(u==
"v2")k.uniform2f(n,c.x,c.y);else if(u=="v3")k.uniform3f(n,c.x,c.y,c.z);else if(u=="v4")k.uniform4f(n,c.x,c.y,c.z,c.w);else if(u=="m4"){if(!o._array)o._array=new Float32Array(16);c.flattenToArray(o._array);k.uniformMatrix4fv(n,!1,o._array)}else if(u=="m4v"){if(!o._array)o._array=new Float32Array(16*c.length);u=0;for(v=c.length;u<v;u++)c[u].flattenToArrayOffset(o._array,u*16);k.uniformMatrix4fv(n,!1,o._array)}else if(u=="c")k.uniform3f(n,c.r,c.g,c.b);else if(u=="t"){if(k.uniform1i(n,c),n=o.texture)if(n.image instanceof
Array&&n.image.length==6){if(o=n,o.image.length==6){if(o.needsUpdate){if(o.__webglInit){k.bindTexture(k.TEXTURE_CUBE_MAP,o.image.__webglTextureCube);for(n=0;n<6;++n)k.texSubImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,0,0,k.RGBA,k.UNSIGNED_BYTE,o.image[n])}else{o.image.__webglTextureCube=k.createTexture();k.bindTexture(k.TEXTURE_CUBE_MAP,o.image.__webglTextureCube);for(n=0;n<6;++n)k.texImage2D(k.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,k.RGBA,k.RGBA,k.UNSIGNED_BYTE,o.image[n]);o.__webglInit=!0}P(k.TEXTURE_CUBE_MAP,
o,o.image[0]);k.bindTexture(k.TEXTURE_CUBE_MAP,null);o.needsUpdate=!1}k.activeTexture(k.TEXTURE0+c);k.bindTexture(k.TEXTURE_CUBE_MAP,o.image.__webglTextureCube)}}else V(n,c)}else if(u=="tv"){if(!o._array){o._array=[];u=0;for(v=o.texture.length;u<v;u++)o._array[u]=c+u}k.uniform1iv(n,o._array);u=0;for(v=o.texture.length;u<v;u++)(n=o.texture[u])&&V(n,o._array[u])}k.uniformMatrix4fv(h.modelViewMatrix,!1,j._modelViewMatrixArray);k.uniformMatrix3fv(h.normalMatrix,!1,j._normalMatrixArray);(f instanceof THREE.MeshShaderMaterial||
f instanceof THREE.MeshPhongMaterial||f.envMap)&&h.cameraPosition!==null&&k.uniform3f(h.cameraPosition,b.position.x,b.position.y,b.position.z);(f instanceof THREE.MeshShaderMaterial||f.envMap||f.skinning||j.receiveShadow)&&h.objectMatrix!==null&&k.uniformMatrix4fv(h.objectMatrix,!1,j._objectMatrixArray);(f instanceof THREE.MeshPhongMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshShaderMaterial||f.skinning)&&h.viewMatrix!==null&&k.uniformMatrix4fv(h.viewMatrix,!1,wa);if(f instanceof
THREE.ShadowVolumeDynamicMaterial)b=m.directionalLightDirection.value,b[0]=-e[1].position.x,b[1]=-e[1].position.y,b[2]=-e[1].position.z,k.uniform3fv(h.directionalLightDirection,b),k.uniformMatrix4fv(h.objectMatrix,!1,j._objectMatrixArray),k.uniformMatrix4fv(h.viewMatrix,!1,wa);f.skinning&&(k.uniformMatrix4fv(h.cameraInverseMatrix,!1,wa),k.uniformMatrix4fv(h.boneGlobalMatrices,!1,j.boneMatrices));return g}function f(b,c,f,j,g,h){if(j.opacity!=0){var m,b=e(b,c,f,j,h).attributes;if(!j.morphTargets&&
b.position>=0)k.bindBuffer(k.ARRAY_BUFFER,g.__webglVertexBuffer),k.vertexAttribPointer(b.position,3,k.FLOAT,!1,0,0);else if(h.morphTargetBase){c=j.program.attributes;h.morphTargetBase!==-1?(k.bindBuffer(k.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[h.morphTargetBase]),k.vertexAttribPointer(c.position,3,k.FLOAT,!1,0,0)):c.position>=0&&(k.bindBuffer(k.ARRAY_BUFFER,g.__webglVertexBuffer),k.vertexAttribPointer(c.position,3,k.FLOAT,!1,0,0));if(h.morphTargetForcedOrder.length)for(var f=0,o=h.morphTargetForcedOrder,
p=h.morphTargetInfluences;f<j.numSupportedMorphTargets&&f<o.length;)k.bindBuffer(k.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[o[f]]),k.vertexAttribPointer(c["morphTarget"+f],3,k.FLOAT,!1,0,0),h.__webglMorphTargetInfluences[f]=p[o[f]],f++;else{var o=[],t=-1,n=0,p=h.morphTargetInfluences,u,v=p.length,f=0;for(h.morphTargetBase!==-1&&(o[h.morphTargetBase]=!0);f<j.numSupportedMorphTargets;){for(u=0;u<v;u++)!o[u]&&p[u]>t&&(n=u,t=p[n]);k.bindBuffer(k.ARRAY_BUFFER,g.__webglMorphTargetsBuffers[n]);k.vertexAttribPointer(c["morphTarget"+
f],3,k.FLOAT,!1,0,0);h.__webglMorphTargetInfluences[f]=t;o[n]=1;t=-1;f++}}j.program.uniforms.morphTargetInfluences!==null&&k.uniform1fv(j.program.uniforms.morphTargetInfluences,h.__webglMorphTargetInfluences)}if(g.__webglCustomAttributes)for(m in g.__webglCustomAttributes)b[m]>=0&&(c=g.__webglCustomAttributes[m],k.bindBuffer(k.ARRAY_BUFFER,c.buffer),k.vertexAttribPointer(b[m],c.size,k.FLOAT,!1,0,0));b.color>=0&&(k.bindBuffer(k.ARRAY_BUFFER,g.__webglColorBuffer),k.vertexAttribPointer(b.color,3,k.FLOAT,
!1,0,0));b.normal>=0&&(k.bindBuffer(k.ARRAY_BUFFER,g.__webglNormalBuffer),k.vertexAttribPointer(b.normal,3,k.FLOAT,!1,0,0));b.tangent>=0&&(k.bindBuffer(k.ARRAY_BUFFER,g.__webglTangentBuffer),k.vertexAttribPointer(b.tangent,4,k.FLOAT,!1,0,0));b.uv>=0&&(g.__webglUVBuffer?(k.bindBuffer(k.ARRAY_BUFFER,g.__webglUVBuffer),k.vertexAttribPointer(b.uv,2,k.FLOAT,!1,0,0),k.enableVertexAttribArray(b.uv)):k.disableVertexAttribArray(b.uv));b.uv2>=0&&(g.__webglUV2Buffer?(k.bindBuffer(k.ARRAY_BUFFER,g.__webglUV2Buffer),
k.vertexAttribPointer(b.uv2,2,k.FLOAT,!1,0,0),k.enableVertexAttribArray(b.uv2)):k.disableVertexAttribArray(b.uv2));j.skinning&&b.skinVertexA>=0&&b.skinVertexB>=0&&b.skinIndex>=0&&b.skinWeight>=0&&(k.bindBuffer(k.ARRAY_BUFFER,g.__webglSkinVertexABuffer),k.vertexAttribPointer(b.skinVertexA,4,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,g.__webglSkinVertexBBuffer),k.vertexAttribPointer(b.skinVertexB,4,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,g.__webglSkinIndicesBuffer),k.vertexAttribPointer(b.skinIndex,
4,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,g.__webglSkinWeightsBuffer),k.vertexAttribPointer(b.skinWeight,4,k.FLOAT,!1,0,0));h instanceof THREE.Mesh?(j.wireframe?(k.lineWidth(j.wireframeLinewidth),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,g.__webglLineBuffer),k.drawElements(k.LINES,g.__webglLineCount,k.UNSIGNED_SHORT,0)):(k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,g.__webglFaceBuffer),k.drawElements(k.TRIANGLES,g.__webglFaceCount,k.UNSIGNED_SHORT,0)),T.data.vertices+=g.__webglFaceCount,T.data.faces+=g.__webglFaceCount/
3,T.data.drawCalls++):h instanceof THREE.Line?(h=h.type==THREE.LineStrip?k.LINE_STRIP:k.LINES,k.lineWidth(j.linewidth),k.drawArrays(h,0,g.__webglLineCount),T.data.drawCalls++):h instanceof THREE.ParticleSystem?(k.drawArrays(k.POINTS,0,g.__webglParticleCount),T.data.drawCalls++):h instanceof THREE.Ribbon&&(k.drawArrays(k.TRIANGLE_STRIP,0,g.__webglVertexCount),T.data.drawCalls++)}}function h(b,e,c){if(!b.__webglVertexBuffer)b.__webglVertexBuffer=k.createBuffer();if(!b.__webglNormalBuffer)b.__webglNormalBuffer=
k.createBuffer();b.hasPos&&(k.bindBuffer(k.ARRAY_BUFFER,b.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,b.positionArray,k.DYNAMIC_DRAW),k.enableVertexAttribArray(e.attributes.position),k.vertexAttribPointer(e.attributes.position,3,k.FLOAT,!1,0,0));if(b.hasNormal){k.bindBuffer(k.ARRAY_BUFFER,b.__webglNormalBuffer);if(c==THREE.FlatShading){var f,g,j,h,m,o,p,t,n,u,v=b.count*3;for(u=0;u<v;u+=9)c=b.normalArray,f=c[u],g=c[u+1],j=c[u+2],h=c[u+3],o=c[u+4],t=c[u+5],m=c[u+6],p=c[u+7],n=c[u+8],f=(f+h+m)/
3,g=(g+o+p)/3,j=(j+t+n)/3,c[u]=f,c[u+1]=g,c[u+2]=j,c[u+3]=f,c[u+4]=g,c[u+5]=j,c[u+6]=f,c[u+7]=g,c[u+8]=j}k.bufferData(k.ARRAY_BUFFER,b.normalArray,k.DYNAMIC_DRAW);k.enableVertexAttribArray(e.attributes.normal);k.vertexAttribPointer(e.attributes.normal,3,k.FLOAT,!1,0,0)}k.drawArrays(k.TRIANGLES,0,b.count);b.count=0}function g(b){if($!=b.doubleSided)b.doubleSided?k.disable(k.CULL_FACE):k.enable(k.CULL_FACE),$=b.doubleSided;if(da!=b.flipSided)b.flipSided?k.frontFace(k.CW):k.frontFace(k.CCW),da=b.flipSided}
function j(b){fa!=b&&(b?k.enable(k.DEPTH_TEST):k.disable(k.DEPTH_TEST),fa=b)}function m(b,e,c){J!=b&&(b?k.enable(k.POLYGON_OFFSET_FILL):k.disable(k.POLYGON_OFFSET_FILL),J=b);if(b&&(ia!=e||la!=c))k.polygonOffset(e,c),ia=e,la=c}function p(b){ga[0].set(b.n41-b.n11,b.n42-b.n12,b.n43-b.n13,b.n44-b.n14);ga[1].set(b.n41+b.n11,b.n42+b.n12,b.n43+b.n13,b.n44+b.n14);ga[2].set(b.n41+b.n21,b.n42+b.n22,b.n43+b.n23,b.n44+b.n24);ga[3].set(b.n41-b.n21,b.n42-b.n22,b.n43-b.n23,b.n44-b.n24);ga[4].set(b.n41-b.n31,b.n42-
b.n32,b.n43-b.n33,b.n44-b.n34);ga[5].set(b.n41+b.n31,b.n42+b.n32,b.n43+b.n33,b.n44+b.n34);for(var e,b=0;b<6;b++)e=ga[b],e.divideScalar(Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z))}function t(b){for(var e=b.matrixWorld,c=-b.geometry.boundingSphere.radius*Math.max(b.scale.x,Math.max(b.scale.y,b.scale.z)),f=0;f<6;f++)if(b=ga[f].x*e.n14+ga[f].y*e.n24+ga[f].z*e.n34+ga[f].w,b<=c)return!1;return!0}function n(b,e){b.list[b.count]=e;b.count+=1}function o(b){var e,c,f=b.object,g=b.opaque,j=b.transparent;j.count=0;b=
g.count=0;for(e=f.materials.length;b<e;b++)c=f.materials[b],c.transparent?n(j,c):n(g,c)}function v(b){var e,c,f,g,j=b.object,h=b.buffer,k=b.opaque,m=b.transparent;m.count=0;b=k.count=0;for(f=j.materials.length;b<f;b++)if(e=j.materials[b],e instanceof THREE.MeshFaceMaterial){e=0;for(c=h.materials.length;e<c;e++)(g=h.materials[e])&&(g.transparent?n(m,g):n(k,g))}else(g=e)&&(g.transparent?n(m,g):n(k,g))}function u(b,e){return e.z-b.z}function x(b,c){var m,o,n,u=0,v,x,w,y,z=b.lights;sa||(sa=new THREE.Camera(T.shadowCameraFov,
c.aspect,T.shadowCameraNear,T.shadowCameraFar));m=0;for(o=z.length;m<o;m++)if(n=z[m],n instanceof THREE.SpotLight&&n.castShadow){T.shadowMap[u]||(T.shadowMap[u]=new THREE.WebGLRenderTarget(T.shadowMapWidth,T.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}));ta[u]||(ta[u]=new THREE.Matrix4);v=T.shadowMap[u];x=ta[u];sa.position.copy(n.position);sa.target.position.copy(n.target.position);sa.update(void 0,!0);b.update(void 0,!1,sa);x.set(0.5,0,0,0.5,
0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);x.multiplySelf(sa.projectionMatrix);x.multiplySelf(sa.matrixWorldInverse);sa.matrixWorldInverse.flattenToArray(wa);sa.projectionMatrix.flattenToArray(za);na.multiply(sa.projectionMatrix,sa.matrixWorldInverse);p(na);T.initWebGLObjects(b);G(v);k.clearColor(1,1,1,1);T.clear();k.clearColor(ka.r,ka.g,ka.b,qa);x=b.__webglObjects.length;n=b.__webglObjectsImmediate.length;for(v=0;v<x;v++)w=b.__webglObjects[v],y=w.object,y.visible&&y.castShadow?!(y instanceof THREE.Mesh)||
t(y)?(y.matrixWorld.flattenToArray(y._objectMatrixArray),I(y,sa,!1),w.render=!0):w.render=!1:w.render=!1;j(!0);H(THREE.NormalBlending);for(v=0;v<x;v++)if(w=b.__webglObjects[v],w.render)y=w.object,buffer=w.buffer,g(y),w=y.geometry.morphTargets.length?xa:Da,f(sa,z,null,w,buffer,y);for(v=0;v<n;v++)w=b.__webglObjectsImmediate[v],y=w.object,y.visible&&y.castShadow&&(y.matrixAutoUpdate&&y.matrixWorld.flattenToArray(y._objectMatrixArray),I(y,sa,!1),g(y),program=e(sa,z,null,Da,y),y.render(function(b){h(b,
program,Da.shading)}));u++}}function z(b){k.enable(k.POLYGON_OFFSET_FILL);k.polygonOffset(0.1,1);k.enable(k.STENCIL_TEST);k.enable(k.DEPTH_TEST);k.depthMask(!1);k.colorMask(!1,!1,!1,!1);k.stencilFunc(k.ALWAYS,1,255);k.stencilOpSeparate(k.BACK,k.KEEP,k.INCR,k.KEEP);k.stencilOpSeparate(k.FRONT,k.KEEP,k.DECR,k.KEEP);var e,c=b.lights.length,f,g=b.lights,j=[],h,m,o,p,t,n=b.__webglShadowVolumes.length;for(e=0;e<c;e++)if(f=b.lights[e],f instanceof THREE.DirectionalLight&&f.castShadow){j[0]=-f.position.x;
j[1]=-f.position.y;j[2]=-f.position.z;for(t=0;t<n;t++)f=b.__webglShadowVolumes[t].object,h=b.__webglShadowVolumes[t].buffer,m=f.materials[0],m.program||T.initMaterial(m,g,void 0,f),m=m.program,o=m.uniforms,p=m.attributes,ca!==m&&(k.useProgram(m),ca=m,k.uniformMatrix4fv(o.projectionMatrix,!1,za),k.uniformMatrix4fv(o.viewMatrix,!1,wa),k.uniform3fv(o.directionalLightDirection,j)),f.matrixWorld.flattenToArray(f._objectMatrixArray),k.uniformMatrix4fv(o.objectMatrix,!1,f._objectMatrixArray),k.bindBuffer(k.ARRAY_BUFFER,
h.__webglVertexBuffer),k.vertexAttribPointer(p.position,3,k.FLOAT,!1,0,0),k.bindBuffer(k.ARRAY_BUFFER,h.__webglNormalBuffer),k.vertexAttribPointer(p.normal,3,k.FLOAT,!1,0,0),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,h.__webglFaceBuffer),k.cullFace(k.FRONT),k.drawElements(k.TRIANGLES,h.__webglFaceCount,k.UNSIGNED_SHORT,0),k.cullFace(k.BACK),k.drawElements(k.TRIANGLES,h.__webglFaceCount,k.UNSIGNED_SHORT,0)}k.disable(k.POLYGON_OFFSET_FILL);k.colorMask(!0,!0,!0,!0);k.stencilFunc(k.NOTEQUAL,0,255);k.stencilOp(k.KEEP,
k.KEEP,k.KEEP);k.disable(k.DEPTH_TEST);fa=ea=-1;ca=Y.program;k.useProgram(Y.program);k.uniformMatrix4fv(Y.projectionLocation,!1,za);k.uniform1f(Y.darknessLocation,Y.darkness);k.bindBuffer(k.ARRAY_BUFFER,Y.vertexBuffer);k.vertexAttribPointer(Y.vertexLocation,3,k.FLOAT,!1,0,0);k.enableVertexAttribArray(Y.vertexLocation);k.blendFunc(k.ONE,k.ONE_MINUS_SRC_ALPHA);k.blendEquation(k.FUNC_ADD);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,Y.elementBuffer);k.drawElements(k.TRIANGLES,6,k.UNSIGNED_SHORT,0);k.disable(k.STENCIL_TEST);
k.enable(k.DEPTH_TEST);k.depthMask(X)}function y(b,e){var c,f,g;c=M.attributes;var j=M.uniforms,h=ha/U,m,o=[],p=U*0.5,t=ha*0.5,n=!0;k.useProgram(M.program);ca=M.program;fa=ea=-1;ya||(k.enableVertexAttribArray(M.attributes.position),k.enableVertexAttribArray(M.attributes.uv),ya=!0);k.disable(k.CULL_FACE);k.enable(k.BLEND);k.depthMask(!0);k.bindBuffer(k.ARRAY_BUFFER,M.vertexBuffer);k.vertexAttribPointer(c.position,2,k.FLOAT,!1,16,0);k.vertexAttribPointer(c.uv,2,k.FLOAT,!1,16,8);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,
M.elementBuffer);k.uniformMatrix4fv(j.projectionMatrix,!1,za);k.activeTexture(k.TEXTURE0);k.uniform1i(j.map,0);c=0;for(f=b.__webglSprites.length;c<f;c++)g=b.__webglSprites[c],g.useScreenCoordinates?g.z=-g.position.z:(g._modelViewMatrix.multiplyToArray(e.matrixWorldInverse,g.matrixWorld,g._modelViewMatrixArray),g.z=-g._modelViewMatrix.n34);b.__webglSprites.sort(u);c=0;for(f=b.__webglSprites.length;c<f;c++)g=b.__webglSprites[c],g.material===void 0&&g.map&&g.map.image&&g.map.image.width&&(g.useScreenCoordinates?
(k.uniform1i(j.useScreenCoordinates,1),k.uniform3f(j.screenPosition,(g.position.x-p)/p,(t-g.position.y)/t,Math.max(0,Math.min(1,g.position.z)))):(k.uniform1i(j.useScreenCoordinates,0),k.uniform1i(j.affectedByDistance,g.affectedByDistance?1:0),k.uniformMatrix4fv(j.modelViewMatrix,!1,g._modelViewMatrixArray)),m=g.map.image.width/(g.scaleByViewport?ha:1),o[0]=m*h*g.scale.x,o[1]=m*g.scale.y,k.uniform2f(j.uvScale,g.uvScale.x,g.uvScale.y),k.uniform2f(j.uvOffset,g.uvOffset.x,g.uvOffset.y),k.uniform2f(j.alignment,
g.alignment.x,g.alignment.y),k.uniform1f(j.opacity,g.opacity),k.uniform1f(j.rotation,g.rotation),k.uniform2fv(j.scale,o),g.mergeWith3D&&!n?(k.enable(k.DEPTH_TEST),n=!0):!g.mergeWith3D&&n&&(k.disable(k.DEPTH_TEST),n=!1),H(g.blending),V(g.map,0),k.drawElements(k.TRIANGLES,6,k.UNSIGNED_SHORT,0));k.enable(k.CULL_FACE);k.enable(k.DEPTH_TEST);k.depthMask(X)}function w(b,e){var c,f,g=b.__webglLensFlares.length,j,h,m,o=new THREE.Vector3,p=ha/U,t=U*0.5,n=ha*0.5,u=16/ha,v=[u*p,u],x=[1,1,0],w=[1,1],y=R.uniforms;
c=R.attributes;k.useProgram(R.program);ca=R.program;fa=ea=-1;ua||(k.enableVertexAttribArray(R.attributes.vertex),k.enableVertexAttribArray(R.attributes.uv),ua=!0);k.uniform1i(y.occlusionMap,0);k.uniform1i(y.map,1);k.bindBuffer(k.ARRAY_BUFFER,R.vertexBuffer);k.vertexAttribPointer(c.vertex,2,k.FLOAT,!1,16,0);k.vertexAttribPointer(c.uv,2,k.FLOAT,!1,16,8);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,R.elementBuffer);k.disable(k.CULL_FACE);k.depthMask(!1);k.activeTexture(k.TEXTURE0);k.bindTexture(k.TEXTURE_2D,
R.occlusionTexture);k.activeTexture(k.TEXTURE1);for(f=0;f<g;f++)if(c=b.__webglLensFlares[f].object,o.set(c.matrixWorld.n14,c.matrixWorld.n24,c.matrixWorld.n34),e.matrixWorldInverse.multiplyVector3(o),e.projectionMatrix.multiplyVector3(o),x[0]=o.x,x[1]=o.y,x[2]=o.z,w[0]=x[0]*t+t,w[1]=x[1]*n+n,R.hasVertexTexture||w[0]>0&&w[0]<U&&w[1]>0&&w[1]<ha){k.bindTexture(k.TEXTURE_2D,R.tempTexture);k.copyTexImage2D(k.TEXTURE_2D,0,k.RGB,w[0]-8,w[1]-8,16,16,0);k.uniform1i(y.renderType,0);k.uniform2fv(y.scale,v);
k.uniform3fv(y.screenPosition,x);k.disable(k.BLEND);k.enable(k.DEPTH_TEST);k.drawElements(k.TRIANGLES,6,k.UNSIGNED_SHORT,0);k.bindTexture(k.TEXTURE_2D,R.occlusionTexture);k.copyTexImage2D(k.TEXTURE_2D,0,k.RGBA,w[0]-8,w[1]-8,16,16,0);k.uniform1i(y.renderType,1);k.disable(k.DEPTH_TEST);k.bindTexture(k.TEXTURE_2D,R.tempTexture);k.drawElements(k.TRIANGLES,6,k.UNSIGNED_SHORT,0);c.positionScreen.x=x[0];c.positionScreen.y=x[1];c.positionScreen.z=x[2];c.customUpdateCallback?c.customUpdateCallback(c):c.updateLensFlares();
k.uniform1i(y.renderType,2);k.enable(k.BLEND);j=0;for(h=c.lensFlares.length;j<h;j++)if(m=c.lensFlares[j],m.opacity>0.0010&&m.scale>0.0010)x[0]=m.x,x[1]=m.y,x[2]=m.z,u=m.size*m.scale/ha,v[0]=u*p,v[1]=u,k.uniform3fv(y.screenPosition,x),k.uniform2fv(y.scale,v),k.uniform1f(y.rotation,m.rotation),k.uniform1f(y.opacity,m.opacity),H(m.blending),V(m.texture,1),k.drawElements(k.TRIANGLES,6,k.UNSIGNED_SHORT,0)}k.enable(k.CULL_FACE);k.enable(k.DEPTH_TEST);k.depthMask(X)}function I(b,e,c){b._modelViewMatrix.multiplyToArray(e.matrixWorldInverse,
b.matrixWorld,b._modelViewMatrixArray);c&&THREE.Matrix4.makeInvert3x3(b._modelViewMatrix).transposeIntoArray(b._normalMatrixArray)}function C(b){var e,c,f,g;g=b.__materials;b=0;for(c=g.length;b<c;b++)if(f=g[b],f.attributes)for(e in f.attributes)if(f.attributes[e].needsUpdate)return!0;return!1}function K(b){var e,c,f,g;g=b.__materials;b=0;for(c=g.length;b<c;b++)if(f=g[b],f.attributes)for(e in f.attributes)f.attributes[e].needsUpdate=!1}function F(b){var e,f,g,j;if(b instanceof THREE.Mesh){f=b.geometry;
for(e in f.geometryGroups)if(g=f.geometryGroups[e],j=C(g),f.__dirtyVertices||f.__dirtyMorphTargets||f.__dirtyElements||f.__dirtyUvs||f.__dirtyNormals||f.__dirtyColors||f.__dirtyTangents||j){j=g;var h=b,m=k.DYNAMIC_DRAW;if(j.__inittedArrays){var o=void 0,p=void 0,t=void 0,n=void 0,u=t=void 0,v=void 0,x=void 0,w=void 0,y=void 0,z=void 0,E=void 0,F=void 0,I=void 0,B=void 0,U=void 0,H=void 0,ha=void 0,D=n=w=n=x=v=void 0,G=void 0,A=G=D=v=void 0,L=void 0,P=A=G=D=t=t=u=w=n=A=G=D=L=A=G=D=L=A=G=D=void 0,J=
0,ga=0,Q=0,X=0,O=0,R=0,M=0,S=0,na=0,N=0,V=0,G=D=0,T=j.__vertexArray,aa=j.__uvArray,ca=j.__uv2Array,Z=j.__normalArray,W=j.__tangentArray,Y=j.__colorArray,da=j.__skinVertexAArray,ea=j.__skinVertexBArray,$=j.__skinIndexArray,fa=j.__skinWeightArray,za=j.__morphTargetsArrays,la=j.__webglCustomAttributes,A=void 0,ia=j.__faceArray,ja=j.__lineArray,oa=j.__needsSmoothNormals,z=j.__vertexColorType,y=j.__uvType,E=j.__normalType,ka=h.geometry,qa=ka.__dirtyVertices,ra=ka.__dirtyElements,wa=ka.__dirtyUvs,sa=ka.__dirtyNormals,
ta=ka.__dirtyTangents,va=ka.__dirtyColors,Aa=ka.__dirtyMorphTargets,ua=ka.vertices,Ba=j.faces,Da=ka.faces,Ia=ka.faceVertexUvs[0],Ea=ka.faceVertexUvs[1],xa=ka.skinVerticesA,ya=ka.skinVerticesB,Oa=ka.skinIndices,Ha=ka.skinWeights,Ma=h instanceof THREE.ShadowVolume?ka.edgeFaces:void 0,Fa=ka.morphTargets;if(la)for(P in la)la[P].offset=0,la[P].offsetSrc=0;o=0;for(p=Ba.length;o<p;o++)if(t=Ba[o],n=Da[t],Ia&&(F=Ia[t]),Ea&&(I=Ea[t]),t=n.vertexNormals,u=n.normal,v=n.vertexColors,x=n.color,w=n.vertexTangents,
n instanceof THREE.Face3){if(qa)B=ua[n.a].position,U=ua[n.b].position,H=ua[n.c].position,T[ga]=B.x,T[ga+1]=B.y,T[ga+2]=B.z,T[ga+3]=U.x,T[ga+4]=U.y,T[ga+5]=U.z,T[ga+6]=H.x,T[ga+7]=H.y,T[ga+8]=H.z,ga+=9;if(la)for(P in la)if(A=la[P],A.__original.needsUpdate)D=A.offset,G=A.offsetSrc,A.size===1?(A.boundTo===void 0||A.boundTo==="vertices"?(A.array[D+0]=A.value[n.a],A.array[D+1]=A.value[n.b],A.array[D+2]=A.value[n.c]):A.boundTo==="faces"?(A.array[D+0]=A.value[G],A.array[D+1]=A.value[G],A.array[D+2]=A.value[G],
A.offsetSrc++):A.boundTo==="faceVertices"&&(A.array[D+0]=A.value[G+0],A.array[D+1]=A.value[G+1],A.array[D+2]=A.value[G+2],A.offsetSrc+=3),A.offset+=3):(A.boundTo===void 0||A.boundTo==="vertices"?(B=A.value[n.a],U=A.value[n.b],H=A.value[n.c]):A.boundTo==="faces"?(B=A.value[G],U=A.value[G],H=A.value[G],A.offsetSrc++):A.boundTo==="faceVertices"&&(B=A.value[G+0],U=A.value[G+1],H=A.value[G+2],A.offsetSrc+=3),A.size===2?(A.array[D+0]=B.x,A.array[D+1]=B.y,A.array[D+2]=U.x,A.array[D+3]=U.y,A.array[D+4]=H.x,
A.array[D+5]=H.y,A.offset+=6):A.size===3?(A.type==="c"?(A.array[D+0]=B.r,A.array[D+1]=B.g,A.array[D+2]=B.b,A.array[D+3]=U.r,A.array[D+4]=U.g,A.array[D+5]=U.b,A.array[D+6]=H.r,A.array[D+7]=H.g,A.array[D+8]=H.b):(A.array[D+0]=B.x,A.array[D+1]=B.y,A.array[D+2]=B.z,A.array[D+3]=U.x,A.array[D+4]=U.y,A.array[D+5]=U.z,A.array[D+6]=H.x,A.array[D+7]=H.y,A.array[D+8]=H.z),A.offset+=9):(A.array[D+0]=B.x,A.array[D+1]=B.y,A.array[D+2]=B.z,A.array[D+3]=B.w,A.array[D+4]=U.x,A.array[D+5]=U.y,A.array[D+6]=U.z,A.array[D+
7]=U.w,A.array[D+8]=H.x,A.array[D+9]=H.y,A.array[D+10]=H.z,A.array[D+11]=H.w,A.offset+=12));if(Aa){D=0;for(G=Fa.length;D<G;D++)B=Fa[D].vertices[n.a].position,U=Fa[D].vertices[n.b].position,H=Fa[D].vertices[n.c].position,A=za[D],A[V+0]=B.x,A[V+1]=B.y,A[V+2]=B.z,A[V+3]=U.x,A[V+4]=U.y,A[V+5]=U.z,A[V+6]=H.x,A[V+7]=H.y,A[V+8]=H.z;V+=9}if(Ha.length)D=Ha[n.a],G=Ha[n.b],A=Ha[n.c],fa[N]=D.x,fa[N+1]=D.y,fa[N+2]=D.z,fa[N+3]=D.w,fa[N+4]=G.x,fa[N+5]=G.y,fa[N+6]=G.z,fa[N+7]=G.w,fa[N+8]=A.x,fa[N+9]=A.y,fa[N+10]=
A.z,fa[N+11]=A.w,D=Oa[n.a],G=Oa[n.b],A=Oa[n.c],$[N]=D.x,$[N+1]=D.y,$[N+2]=D.z,$[N+3]=D.w,$[N+4]=G.x,$[N+5]=G.y,$[N+6]=G.z,$[N+7]=G.w,$[N+8]=A.x,$[N+9]=A.y,$[N+10]=A.z,$[N+11]=A.w,D=xa[n.a],G=xa[n.b],A=xa[n.c],da[N]=D.x,da[N+1]=D.y,da[N+2]=D.z,da[N+3]=1,da[N+4]=G.x,da[N+5]=G.y,da[N+6]=G.z,da[N+7]=1,da[N+8]=A.x,da[N+9]=A.y,da[N+10]=A.z,da[N+11]=1,D=ya[n.a],G=ya[n.b],A=ya[n.c],ea[N]=D.x,ea[N+1]=D.y,ea[N+2]=D.z,ea[N+3]=1,ea[N+4]=G.x,ea[N+5]=G.y,ea[N+6]=G.z,ea[N+7]=1,ea[N+8]=A.x,ea[N+9]=A.y,ea[N+10]=A.z,
ea[N+11]=1,N+=12;if(va&&z)v.length==3&&z==THREE.VertexColors?(n=v[0],D=v[1],G=v[2]):G=D=n=x,Y[na]=n.r,Y[na+1]=n.g,Y[na+2]=n.b,Y[na+3]=D.r,Y[na+4]=D.g,Y[na+5]=D.b,Y[na+6]=G.r,Y[na+7]=G.g,Y[na+8]=G.b,na+=9;if(ta&&ka.hasTangents)v=w[0],x=w[1],n=w[2],W[M]=v.x,W[M+1]=v.y,W[M+2]=v.z,W[M+3]=v.w,W[M+4]=x.x,W[M+5]=x.y,W[M+6]=x.z,W[M+7]=x.w,W[M+8]=n.x,W[M+9]=n.y,W[M+10]=n.z,W[M+11]=n.w,M+=12;if(sa&&E)if(t.length==3&&oa)for(w=0;w<3;w++)u=t[w],Z[R]=u.x,Z[R+1]=u.y,Z[R+2]=u.z,R+=3;else for(w=0;w<3;w++)Z[R]=u.x,
Z[R+1]=u.y,Z[R+2]=u.z,R+=3;if(wa&&F!==void 0&&y)for(w=0;w<3;w++)t=F[w],aa[Q]=t.u,aa[Q+1]=t.v,Q+=2;if(wa&&I!==void 0&&y)for(w=0;w<3;w++)t=I[w],ca[X]=t.u,ca[X+1]=t.v,X+=2;ra&&(ia[O]=J,ia[O+1]=J+1,ia[O+2]=J+2,O+=3,ja[S]=J,ja[S+1]=J+1,ja[S+2]=J,ja[S+3]=J+2,ja[S+4]=J+1,ja[S+5]=J+2,S+=6,J+=3)}else if(n instanceof THREE.Face4){if(qa)B=ua[n.a].position,U=ua[n.b].position,H=ua[n.c].position,ha=ua[n.d].position,T[ga]=B.x,T[ga+1]=B.y,T[ga+2]=B.z,T[ga+3]=U.x,T[ga+4]=U.y,T[ga+5]=U.z,T[ga+6]=H.x,T[ga+7]=H.y,T[ga+
8]=H.z,T[ga+9]=ha.x,T[ga+10]=ha.y,T[ga+11]=ha.z,ga+=12;if(la)for(P in la)if(A=la[P],A.__original.needsUpdate)D=A.offset,G=A.offsetSrc,A.size===1?(A.boundTo===void 0||A.boundTo==="vertices"?(A.array[D+0]=A.value[n.a],A.array[D+1]=A.value[n.b],A.array[D+2]=A.value[n.c],A.array[D+3]=A.value[n.d]):A.boundTo==="faces"?(A.array[D+0]=A.value[G],A.array[D+1]=A.value[G],A.array[D+2]=A.value[G],A.array[D+3]=A.value[G],A.offsetSrc++):A.boundTo==="faceVertices"&&(A.array[D+0]=A.value[G+0],A.array[D+1]=A.value[G+
1],A.array[D+2]=A.value[G+2],A.array[D+3]=A.value[G+3],A.offsetSrc+=4),A.offset+=4):(A.boundTo===void 0||A.boundTo==="vertices"?(B=A.value[n.a],U=A.value[n.b],H=A.value[n.c],ha=A.value[n.d]):A.boundTo==="faces"?(B=A.value[G],U=A.value[G],H=A.value[G],ha=A.value[G],A.offsetSrc++):A.boundTo==="faceVertices"&&(B=A.value[G+0],U=A.value[G+1],H=A.value[G+2],ha=A.value[G+3],A.offsetSrc+=4),A.size===2?(A.array[D+0]=B.x,A.array[D+1]=B.y,A.array[D+2]=U.x,A.array[D+3]=U.y,A.array[D+4]=H.x,A.array[D+5]=H.y,A.array[D+
6]=ha.x,A.array[D+7]=ha.y,A.offset+=8):A.size===3?(A.type==="c"?(A.array[D+0]=B.r,A.array[D+1]=B.g,A.array[D+2]=B.b,A.array[D+3]=U.r,A.array[D+4]=U.g,A.array[D+5]=U.b,A.array[D+6]=H.r,A.array[D+7]=H.g,A.array[D+8]=H.b,A.array[D+9]=ha.r,A.array[D+10]=ha.g,A.array[D+11]=ha.b):(A.array[D+0]=B.x,A.array[D+1]=B.y,A.array[D+2]=B.z,A.array[D+3]=U.x,A.array[D+4]=U.y,A.array[D+5]=U.z,A.array[D+6]=H.x,A.array[D+7]=H.y,A.array[D+8]=H.z,A.array[D+9]=ha.x,A.array[D+10]=ha.y,A.array[D+11]=ha.z),A.offset+=12):(A.array[D+
0]=B.x,A.array[D+1]=B.y,A.array[D+2]=B.z,A.array[D+3]=B.w,A.array[D+4]=U.x,A.array[D+5]=U.y,A.array[D+6]=U.z,A.array[D+7]=U.w,A.array[D+8]=H.x,A.array[D+9]=H.y,A.array[D+10]=H.z,A.array[D+11]=H.w,A.array[D+12]=ha.x,A.array[D+13]=ha.y,A.array[D+14]=ha.z,A.array[D+15]=ha.w,A.offset+=16));if(Aa){D=0;for(G=Fa.length;D<G;D++)B=Fa[D].vertices[n.a].position,U=Fa[D].vertices[n.b].position,H=Fa[D].vertices[n.c].position,ha=Fa[D].vertices[n.d].position,A=za[D],A[V+0]=B.x,A[V+1]=B.y,A[V+2]=B.z,A[V+3]=U.x,A[V+
4]=U.y,A[V+5]=U.z,A[V+6]=H.x,A[V+7]=H.y,A[V+8]=H.z,A[V+9]=ha.x,A[V+10]=ha.y,A[V+11]=ha.z;V+=12}if(Ha.length)D=Ha[n.a],G=Ha[n.b],A=Ha[n.c],L=Ha[n.d],fa[N]=D.x,fa[N+1]=D.y,fa[N+2]=D.z,fa[N+3]=D.w,fa[N+4]=G.x,fa[N+5]=G.y,fa[N+6]=G.z,fa[N+7]=G.w,fa[N+8]=A.x,fa[N+9]=A.y,fa[N+10]=A.z,fa[N+11]=A.w,fa[N+12]=L.x,fa[N+13]=L.y,fa[N+14]=L.z,fa[N+15]=L.w,D=Oa[n.a],G=Oa[n.b],A=Oa[n.c],L=Oa[n.d],$[N]=D.x,$[N+1]=D.y,$[N+2]=D.z,$[N+3]=D.w,$[N+4]=G.x,$[N+5]=G.y,$[N+6]=G.z,$[N+7]=G.w,$[N+8]=A.x,$[N+9]=A.y,$[N+10]=A.z,
$[N+11]=A.w,$[N+12]=L.x,$[N+13]=L.y,$[N+14]=L.z,$[N+15]=L.w,D=xa[n.a],G=xa[n.b],A=xa[n.c],L=xa[n.d],da[N]=D.x,da[N+1]=D.y,da[N+2]=D.z,da[N+3]=1,da[N+4]=G.x,da[N+5]=G.y,da[N+6]=G.z,da[N+7]=1,da[N+8]=A.x,da[N+9]=A.y,da[N+10]=A.z,da[N+11]=1,da[N+12]=L.x,da[N+13]=L.y,da[N+14]=L.z,da[N+15]=1,D=ya[n.a],G=ya[n.b],A=ya[n.c],n=ya[n.d],ea[N]=D.x,ea[N+1]=D.y,ea[N+2]=D.z,ea[N+3]=1,ea[N+4]=G.x,ea[N+5]=G.y,ea[N+6]=G.z,ea[N+7]=1,ea[N+8]=A.x,ea[N+9]=A.y,ea[N+10]=A.z,ea[N+11]=1,ea[N+12]=n.x,ea[N+13]=n.y,ea[N+14]=
n.z,ea[N+15]=1,N+=16;if(va&&z)v.length==4&&z==THREE.VertexColors?(n=v[0],D=v[1],G=v[2],v=v[3]):v=G=D=n=x,Y[na]=n.r,Y[na+1]=n.g,Y[na+2]=n.b,Y[na+3]=D.r,Y[na+4]=D.g,Y[na+5]=D.b,Y[na+6]=G.r,Y[na+7]=G.g,Y[na+8]=G.b,Y[na+9]=v.r,Y[na+10]=v.g,Y[na+11]=v.b,na+=12;if(ta&&ka.hasTangents)v=w[0],x=w[1],n=w[2],w=w[3],W[M]=v.x,W[M+1]=v.y,W[M+2]=v.z,W[M+3]=v.w,W[M+4]=x.x,W[M+5]=x.y,W[M+6]=x.z,W[M+7]=x.w,W[M+8]=n.x,W[M+9]=n.y,W[M+10]=n.z,W[M+11]=n.w,W[M+12]=w.x,W[M+13]=w.y,W[M+14]=w.z,W[M+15]=w.w,M+=16;if(sa&&E)if(t.length==
4&&oa)for(w=0;w<4;w++)u=t[w],Z[R]=u.x,Z[R+1]=u.y,Z[R+2]=u.z,R+=3;else for(w=0;w<4;w++)Z[R]=u.x,Z[R+1]=u.y,Z[R+2]=u.z,R+=3;if(wa&&F!==void 0&&y)for(w=0;w<4;w++)t=F[w],aa[Q]=t.u,aa[Q+1]=t.v,Q+=2;if(wa&&I!==void 0&&y)for(w=0;w<4;w++)t=I[w],ca[X]=t.u,ca[X+1]=t.v,X+=2;ra&&(ia[O]=J,ia[O+1]=J+1,ia[O+2]=J+3,ia[O+3]=J+1,ia[O+4]=J+2,ia[O+5]=J+3,O+=6,ja[S]=J,ja[S+1]=J+1,ja[S+2]=J,ja[S+3]=J+3,ja[S+4]=J+1,ja[S+5]=J+2,ja[S+6]=J+2,ja[S+7]=J+3,S+=8,J+=4)}if(Ma){o=0;for(p=Ma.length;o<p;o++)ia[O]=Ma[o].a,ia[O+1]=Ma[o].b,
ia[O+2]=Ma[o].c,ia[O+3]=Ma[o].a,ia[O+4]=Ma[o].c,ia[O+5]=Ma[o].d,O+=6}qa&&(k.bindBuffer(k.ARRAY_BUFFER,j.__webglVertexBuffer),k.bufferData(k.ARRAY_BUFFER,T,m));if(la)for(P in la)A=la[P],A.__original.needsUpdate&&(k.bindBuffer(k.ARRAY_BUFFER,A.buffer),k.bufferData(k.ARRAY_BUFFER,A.array,m));if(Aa){D=0;for(G=Fa.length;D<G;D++)k.bindBuffer(k.ARRAY_BUFFER,j.__webglMorphTargetsBuffers[D]),k.bufferData(k.ARRAY_BUFFER,za[D],m)}va&&na>0&&(k.bindBuffer(k.ARRAY_BUFFER,j.__webglColorBuffer),k.bufferData(k.ARRAY_BUFFER,
Y,m));sa&&(k.bindBuffer(k.ARRAY_BUFFER,j.__webglNormalBuffer),k.bufferData(k.ARRAY_BUFFER,Z,m));ta&&ka.hasTangents&&(k.bindBuffer(k.ARRAY_BUFFER,j.__webglTangentBuffer),k.bufferData(k.ARRAY_BUFFER,W,m));wa&&Q>0&&(k.bindBuffer(k.ARRAY_BUFFER,j.__webglUVBuffer),k.bufferData(k.ARRAY_BUFFER,aa,m));wa&&X>0&&(k.bindBuffer(k.ARRAY_BUFFER,j.__webglUV2Buffer),k.bufferData(k.ARRAY_BUFFER,ca,m));ra&&(k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,j.__webglFaceBuffer),k.bufferData(k.ELEMENT_ARRAY_BUFFER,ia,m),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,
j.__webglLineBuffer),k.bufferData(k.ELEMENT_ARRAY_BUFFER,ja,m));N>0&&(k.bindBuffer(k.ARRAY_BUFFER,j.__webglSkinVertexABuffer),k.bufferData(k.ARRAY_BUFFER,da,m),k.bindBuffer(k.ARRAY_BUFFER,j.__webglSkinVertexBBuffer),k.bufferData(k.ARRAY_BUFFER,ea,m),k.bindBuffer(k.ARRAY_BUFFER,j.__webglSkinIndicesBuffer),k.bufferData(k.ARRAY_BUFFER,$,m),k.bindBuffer(k.ARRAY_BUFFER,j.__webglSkinWeightsBuffer),k.bufferData(k.ARRAY_BUFFER,fa,m));h.dynamic||(delete j.__inittedArrays,delete j.__colorArray,delete j.__normalArray,
delete j.__tangentArray,delete j.__uvArray,delete j.__uv2Array,delete j.__faceArray,delete j.__vertexArray,delete j.__lineArray,delete j.__skinVertexAArray,delete j.__skinVertexBArray,delete j.__skinIndexArray,delete j.__skinWeightArray)}}f.__dirtyVertices=!1;f.__dirtyMorphTargets=!1;f.__dirtyElements=!1;f.__dirtyUvs=!1;f.__dirtyNormals=!1;f.__dirtyTangents=!1;f.__dirtyColors=!1;K(g)}else if(b instanceof THREE.Ribbon){f=b.geometry;if(f.__dirtyVertices||f.__dirtyColors){b=f;e=k.DYNAMIC_DRAW;y=b.vertices;
j=b.colors;z=y.length;h=j.length;E=b.__vertexArray;m=b.__colorArray;F=b.__dirtyColors;if(b.__dirtyVertices){for(o=0;o<z;o++)p=y[o].position,g=o*3,E[g]=p.x,E[g+1]=p.y,E[g+2]=p.z;k.bindBuffer(k.ARRAY_BUFFER,b.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,E,e)}if(F){for(o=0;o<h;o++)color=j[o],g=o*3,m[g]=color.r,m[g+1]=color.g,m[g+2]=color.b;k.bindBuffer(k.ARRAY_BUFFER,b.__webglColorBuffer);k.bufferData(k.ARRAY_BUFFER,m,e)}}f.__dirtyVertices=!1;f.__dirtyColors=!1}else if(b instanceof THREE.Line){f=
b.geometry;if(f.__dirtyVertices||f.__dirtyColors){b=f;e=k.DYNAMIC_DRAW;y=b.vertices;j=b.colors;z=y.length;h=j.length;E=b.__vertexArray;m=b.__colorArray;F=b.__dirtyColors;if(b.__dirtyVertices){for(o=0;o<z;o++)p=y[o].position,g=o*3,E[g]=p.x,E[g+1]=p.y,E[g+2]=p.z;k.bindBuffer(k.ARRAY_BUFFER,b.__webglVertexBuffer);k.bufferData(k.ARRAY_BUFFER,E,e)}if(F){for(o=0;o<h;o++)color=j[o],g=o*3,m[g]=color.r,m[g+1]=color.g,m[g+2]=color.b;k.bindBuffer(k.ARRAY_BUFFER,b.__webglColorBuffer);k.bufferData(k.ARRAY_BUFFER,
m,e)}}f.__dirtyVertices=!1;f.__dirtyColors=!1}else if(b instanceof THREE.ParticleSystem)f=b.geometry,j=C(f),(f.__dirtyVertices||f.__dirtyColors||b.sortParticles||j)&&c(f,k.DYNAMIC_DRAW,b),f.__dirtyVertices=!1,f.__dirtyColors=!1,K(f)}function B(b,e){var c;for(c=b.length-1;c>=0;c--)b[c].object==e&&b.splice(c,1)}function O(b){function e(b){var g=[];c=0;for(f=b.length;c<f;c++)b[c]==void 0?g.push("undefined"):g.push(b[c].id);return g.join("_")}var c,f,g,j,h,k,m,o,n={},p=b.morphTargets!==void 0?b.morphTargets.length:
0;b.geometryGroups={};g=0;for(j=b.faces.length;g<j;g++)h=b.faces[g],k=h.materials,m=e(k),n[m]==void 0&&(n[m]={hash:m,counter:0}),o=n[m].hash+"_"+n[m].counter,b.geometryGroups[o]==void 0&&(b.geometryGroups[o]={faces:[],materials:k,vertices:0,numMorphTargets:p}),h=h instanceof THREE.Face3?3:4,b.geometryGroups[o].vertices+h>65535&&(n[m].counter+=1,o=n[m].hash+"_"+n[m].counter,b.geometryGroups[o]==void 0&&(b.geometryGroups[o]={faces:[],materials:k,vertices:0,numMorphTargets:p})),b.geometryGroups[o].faces.push(g),
b.geometryGroups[o].vertices+=h}function E(b,e,c){b.push({buffer:e,object:c,opaque:{list:[],count:0},transparent:{list:[],count:0}})}function H(b){if(b!=ea){switch(b){case THREE.AdditiveBlending:k.blendEquation(k.FUNC_ADD);k.blendFunc(k.SRC_ALPHA,k.ONE);break;case THREE.SubtractiveBlending:k.blendEquation(k.FUNC_ADD);k.blendFunc(k.ZERO,k.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:k.blendEquation(k.FUNC_ADD);k.blendFunc(k.ZERO,k.SRC_COLOR);break;default:k.blendEquationSeparate(k.FUNC_ADD,
k.FUNC_ADD),k.blendFuncSeparate(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA,k.ONE,k.ONE_MINUS_SRC_ALPHA)}ea=b}}function P(b,e,c){(c.width&c.width-1)==0&&(c.height&c.height-1)==0?(k.texParameteri(b,k.TEXTURE_WRAP_S,S(e.wrapS)),k.texParameteri(b,k.TEXTURE_WRAP_T,S(e.wrapT)),k.texParameteri(b,k.TEXTURE_MAG_FILTER,S(e.magFilter)),k.texParameteri(b,k.TEXTURE_MIN_FILTER,S(e.minFilter)),k.generateMipmap(b)):(k.texParameteri(b,k.TEXTURE_WRAP_S,k.CLAMP_TO_EDGE),k.texParameteri(b,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE),k.texParameteri(b,
k.TEXTURE_MAG_FILTER,Q(e.magFilter)),k.texParameteri(b,k.TEXTURE_MIN_FILTER,Q(e.minFilter)))}function V(b,e){if(b.needsUpdate)b.__webglInit?(k.bindTexture(k.TEXTURE_2D,b.__webglTexture),k.texImage2D(k.TEXTURE_2D,0,k.RGBA,k.RGBA,k.UNSIGNED_BYTE,b.image)):(b.__webglTexture=k.createTexture(),k.bindTexture(k.TEXTURE_2D,b.__webglTexture),k.texImage2D(k.TEXTURE_2D,0,k.RGBA,k.RGBA,k.UNSIGNED_BYTE,b.image),b.__webglInit=!0),P(k.TEXTURE_2D,b,b.image),k.bindTexture(k.TEXTURE_2D,null),b.needsUpdate=!1;k.activeTexture(k.TEXTURE0+
e);k.bindTexture(k.TEXTURE_2D,b.__webglTexture)}function G(b){if(b&&!b.__webglFramebuffer){if(b.depthBuffer===void 0)b.depthBuffer=!0;if(b.stencilBuffer===void 0)b.stencilBuffer=!0;b.__webglFramebuffer=k.createFramebuffer();b.__webglRenderbuffer=k.createRenderbuffer();b.__webglTexture=k.createTexture();k.bindTexture(k.TEXTURE_2D,b.__webglTexture);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_WRAP_S,S(b.wrapS));k.texParameteri(k.TEXTURE_2D,k.TEXTURE_WRAP_T,S(b.wrapT));k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MAG_FILTER,
S(b.magFilter));k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MIN_FILTER,S(b.minFilter));k.texImage2D(k.TEXTURE_2D,0,S(b.format),b.width,b.height,0,S(b.format),S(b.type),null);k.bindRenderbuffer(k.RENDERBUFFER,b.__webglRenderbuffer);k.bindFramebuffer(k.FRAMEBUFFER,b.__webglFramebuffer);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_2D,b.__webglTexture,0);b.depthBuffer&&!b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_COMPONENT16,b.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,
k.DEPTH_ATTACHMENT,k.RENDERBUFFER,b.__webglRenderbuffer)):b.depthBuffer&&b.stencilBuffer?(k.renderbufferStorage(k.RENDERBUFFER,k.DEPTH_STENCIL,b.width,b.height),k.framebufferRenderbuffer(k.FRAMEBUFFER,k.DEPTH_STENCIL_ATTACHMENT,k.RENDERBUFFER,b.__webglRenderbuffer)):k.renderbufferStorage(k.RENDERBUFFER,k.RGBA4,b.width,b.height);k.bindTexture(k.TEXTURE_2D,null);k.bindRenderbuffer(k.RENDERBUFFER,null);k.bindFramebuffer(k.FRAMEBUFFER,null)}var e,c;b?(e=b.__webglFramebuffer,c=b.width,b=b.height):(e=null,
c=U,b=ha);e!=W&&(k.bindFramebuffer(k.FRAMEBUFFER,e),k.viewport(ja,oa,c,b),W=e)}function aa(b,e){var c;b=="fragment"?c=k.createShader(k.FRAGMENT_SHADER):b=="vertex"&&(c=k.createShader(k.VERTEX_SHADER));k.shaderSource(c,e);k.compileShader(c);if(!k.getShaderParameter(c,k.COMPILE_STATUS))return console.error(k.getShaderInfoLog(c)),console.error(e),null;return c}function Q(b){switch(b){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return k.NEAREST;
default:return k.LINEAR}}function S(b){switch(b){case THREE.RepeatWrapping:return k.REPEAT;case THREE.ClampToEdgeWrapping:return k.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return k.MIRRORED_REPEAT;case THREE.NearestFilter:return k.NEAREST;case THREE.NearestMipMapNearestFilter:return k.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return k.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return k.LINEAR;case THREE.LinearMipMapNearestFilter:return k.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return k.LINEAR_MIPMAP_LINEAR;
case THREE.ByteType:return k.BYTE;case THREE.UnsignedByteType:return k.UNSIGNED_BYTE;case THREE.ShortType:return k.SHORT;case THREE.UnsignedShortType:return k.UNSIGNED_SHORT;case THREE.IntType:return k.INT;case THREE.UnsignedShortType:return k.UNSIGNED_INT;case THREE.FloatType:return k.FLOAT;case THREE.AlphaFormat:return k.ALPHA;case THREE.RGBFormat:return k.RGB;case THREE.RGBAFormat:return k.RGBA;case THREE.LuminanceFormat:return k.LUMINANCE;case THREE.LuminanceAlphaFormat:return k.LUMINANCE_ALPHA}return 0}
var T=this,k,L=[],ca=null,W=null,X=!0,$=null,da=null,ea=null,fa=null,J=null,ia=null,la=null,ja=0,oa=0,U=0,ha=0,ga=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],na=new THREE.Matrix4,za=new Float32Array(16),wa=new Float32Array(16),Aa=new THREE.Vector4,Ia={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},b=b||{},Ba=b.canvas!==void 0?b.canvas:document.createElement("canvas"),
Pa=b.stencil!==void 0?b.stencil:!0,Z=b.antialias!==void 0?b.antialias:!1,ka=b.clearColor!==void 0?new THREE.Color(b.clearColor):new THREE.Color(0),qa=b.clearAlpha!==void 0?b.clearAlpha:0;this.data={vertices:0,faces:0,drawCalls:0};this.maxMorphTargets=8;this.domElement=Ba;this.sortObjects=this.autoClear=!0;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowMap=[];this.shadowMapEnabled=
!1;this.shadowMapSoft=!0;var sa,ta=[],b=THREE.ShaderLib.depthRGBA,va=THREE.UniformsUtils.clone(b.uniforms),Da=new THREE.MeshShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:va}),xa=new THREE.MeshShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:va,morphTargets:!0});Da._shadowPass=!0;xa._shadowPass=!0;try{if(!(k=Ba.getContext("experimental-webgl",{antialias:Z,stencil:Pa})))throw"Error creating WebGL context.";console.log(navigator.userAgent+
" | "+k.getParameter(k.VERSION)+" | "+k.getParameter(k.VENDOR)+" | "+k.getParameter(k.RENDERER)+" | "+k.getParameter(k.SHADING_LANGUAGE_VERSION))}catch(ra){console.error(ra)}k.clearColor(0,0,0,1);k.clearDepth(1);k.enable(k.DEPTH_TEST);k.depthFunc(k.LEQUAL);k.frontFace(k.CCW);k.cullFace(k.BACK);k.enable(k.CULL_FACE);k.enable(k.BLEND);k.blendEquation(k.FUNC_ADD);k.blendFunc(k.SRC_ALPHA,k.ONE_MINUS_SRC_ALPHA);k.clearColor(ka.r,ka.g,ka.b,qa);this.context=k;var Ea=k.getParameter(k.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>
0;if(Pa){var Y={};Y.vertices=new Float32Array(12);Y.faces=new Uint16Array(6);Y.darkness=0.5;Y.vertices[0]=-20;Y.vertices[1]=-20;Y.vertices[2]=-1;Y.vertices[3]=20;Y.vertices[4]=-20;Y.vertices[5]=-1;Y.vertices[6]=20;Y.vertices[7]=20;Y.vertices[8]=-1;Y.vertices[9]=-20;Y.vertices[10]=20;Y.vertices[11]=-1;Y.faces[0]=0;Y.faces[1]=1;Y.faces[2]=2;Y.faces[3]=0;Y.faces[4]=2;Y.faces[5]=3;Y.vertexBuffer=k.createBuffer();Y.elementBuffer=k.createBuffer();k.bindBuffer(k.ARRAY_BUFFER,Y.vertexBuffer);k.bufferData(k.ARRAY_BUFFER,
Y.vertices,k.STATIC_DRAW);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,Y.elementBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,Y.faces,k.STATIC_DRAW);Y.program=k.createProgram();k.attachShader(Y.program,aa("fragment",THREE.ShaderLib.shadowPost.fragmentShader));k.attachShader(Y.program,aa("vertex",THREE.ShaderLib.shadowPost.vertexShader));k.linkProgram(Y.program);Y.vertexLocation=k.getAttribLocation(Y.program,"position");Y.projectionLocation=k.getUniformLocation(Y.program,"projectionMatrix");Y.darknessLocation=
k.getUniformLocation(Y.program,"darkness")}var R={};R.vertices=new Float32Array(16);R.faces=new Uint16Array(6);Z=0;R.vertices[Z++]=-1;R.vertices[Z++]=-1;R.vertices[Z++]=0;R.vertices[Z++]=0;R.vertices[Z++]=1;R.vertices[Z++]=-1;R.vertices[Z++]=1;R.vertices[Z++]=0;R.vertices[Z++]=1;R.vertices[Z++]=1;R.vertices[Z++]=1;R.vertices[Z++]=1;R.vertices[Z++]=-1;R.vertices[Z++]=1;R.vertices[Z++]=0;R.vertices[Z++]=1;Z=0;R.faces[Z++]=0;R.faces[Z++]=1;R.faces[Z++]=2;R.faces[Z++]=0;R.faces[Z++]=2;R.faces[Z++]=3;
R.vertexBuffer=k.createBuffer();R.elementBuffer=k.createBuffer();R.tempTexture=k.createTexture();R.occlusionTexture=k.createTexture();k.bindBuffer(k.ARRAY_BUFFER,R.vertexBuffer);k.bufferData(k.ARRAY_BUFFER,R.vertices,k.STATIC_DRAW);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,R.elementBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,R.faces,k.STATIC_DRAW);k.bindTexture(k.TEXTURE_2D,R.tempTexture);k.texImage2D(k.TEXTURE_2D,0,k.RGB,16,16,0,k.RGB,k.UNSIGNED_BYTE,null);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_WRAP_S,
k.CLAMP_TO_EDGE);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MAG_FILTER,k.NEAREST);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MIN_FILTER,k.NEAREST);k.bindTexture(k.TEXTURE_2D,R.occlusionTexture);k.texImage2D(k.TEXTURE_2D,0,k.RGBA,16,16,0,k.RGBA,k.UNSIGNED_BYTE,null);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_WRAP_S,k.CLAMP_TO_EDGE);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_WRAP_T,k.CLAMP_TO_EDGE);k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MAG_FILTER,k.NEAREST);
k.texParameteri(k.TEXTURE_2D,k.TEXTURE_MIN_FILTER,k.NEAREST);k.getParameter(k.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(R.hasVertexTexture=!1,R.program=k.createProgram(),k.attachShader(R.program,aa("fragment",THREE.ShaderLib.lensFlare.fragmentShader)),k.attachShader(R.program,aa("vertex",THREE.ShaderLib.lensFlare.vertexShader))):(R.hasVertexTexture=!0,R.program=k.createProgram(),k.attachShader(R.program,aa("fragment",THREE.ShaderLib.lensFlareVertexTexture.fragmentShader)),k.attachShader(R.program,aa("vertex",
THREE.ShaderLib.lensFlareVertexTexture.vertexShader)));k.linkProgram(R.program);R.attributes={};R.uniforms={};R.attributes.vertex=k.getAttribLocation(R.program,"position");R.attributes.uv=k.getAttribLocation(R.program,"UV");R.uniforms.renderType=k.getUniformLocation(R.program,"renderType");R.uniforms.map=k.getUniformLocation(R.program,"map");R.uniforms.occlusionMap=k.getUniformLocation(R.program,"occlusionMap");R.uniforms.opacity=k.getUniformLocation(R.program,"opacity");R.uniforms.scale=k.getUniformLocation(R.program,
"scale");R.uniforms.rotation=k.getUniformLocation(R.program,"rotation");R.uniforms.screenPosition=k.getUniformLocation(R.program,"screenPosition");var ua=!1,M={};M.vertices=new Float32Array(16);M.faces=new Uint16Array(6);Z=0;M.vertices[Z++]=-1;M.vertices[Z++]=-1;M.vertices[Z++]=0;M.vertices[Z++]=1;M.vertices[Z++]=1;M.vertices[Z++]=-1;M.vertices[Z++]=1;M.vertices[Z++]=1;M.vertices[Z++]=1;M.vertices[Z++]=1;M.vertices[Z++]=1;M.vertices[Z++]=0;M.vertices[Z++]=-1;M.vertices[Z++]=1;M.vertices[Z++]=0;Z=
M.vertices[Z++]=0;M.faces[Z++]=0;M.faces[Z++]=1;M.faces[Z++]=2;M.faces[Z++]=0;M.faces[Z++]=2;M.faces[Z++]=3;M.vertexBuffer=k.createBuffer();M.elementBuffer=k.createBuffer();k.bindBuffer(k.ARRAY_BUFFER,M.vertexBuffer);k.bufferData(k.ARRAY_BUFFER,M.vertices,k.STATIC_DRAW);k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,M.elementBuffer);k.bufferData(k.ELEMENT_ARRAY_BUFFER,M.faces,k.STATIC_DRAW);M.program=k.createProgram();k.attachShader(M.program,aa("fragment",THREE.ShaderLib.sprite.fragmentShader));k.attachShader(M.program,
aa("vertex",THREE.ShaderLib.sprite.vertexShader));k.linkProgram(M.program);M.attributes={};M.uniforms={};M.attributes.position=k.getAttribLocation(M.program,"position");M.attributes.uv=k.getAttribLocation(M.program,"uv");M.uniforms.uvOffset=k.getUniformLocation(M.program,"uvOffset");M.uniforms.uvScale=k.getUniformLocation(M.program,"uvScale");M.uniforms.rotation=k.getUniformLocation(M.program,"rotation");M.uniforms.scale=k.getUniformLocation(M.program,"scale");M.uniforms.alignment=k.getUniformLocation(M.program,
"alignment");M.uniforms.map=k.getUniformLocation(M.program,"map");M.uniforms.opacity=k.getUniformLocation(M.program,"opacity");M.uniforms.useScreenCoordinates=k.getUniformLocation(M.program,"useScreenCoordinates");M.uniforms.affectedByDistance=k.getUniformLocation(M.program,"affectedByDistance");M.uniforms.screenPosition=k.getUniformLocation(M.program,"screenPosition");M.uniforms.modelViewMatrix=k.getUniformLocation(M.program,"modelViewMatrix");M.uniforms.projectionMatrix=k.getUniformLocation(M.program,
"projectionMatrix");var ya=!1;this.setSize=function(b,e){Ba.width=b;Ba.height=e;this.setViewport(0,0,Ba.width,Ba.height)};this.setViewport=function(b,e,c,f){ja=b;oa=e;U=c;ha=f;k.viewport(ja,oa,U,ha)};this.setScissor=function(b,e,c,f){k.scissor(b,e,c,f)};this.enableScissorTest=function(b){b?k.enable(k.SCISSOR_TEST):k.disable(k.SCISSOR_TEST)};this.enableDepthBufferWrite=function(b){X=b;k.depthMask(b)};this.setClearColorHex=function(b,e){ka.setHex(b);qa=e;k.clearColor(ka.r,ka.g,ka.b,qa)};this.setClearColor=
function(b,e){ka.copy(b);qa=e;k.clearColor(ka.r,ka.g,ka.b,qa)};this.clear=function(){k.clear(k.COLOR_BUFFER_BIT|k.DEPTH_BUFFER_BIT|k.STENCIL_BUFFER_BIT)};this.setStencilShadowDarkness=function(b){Y.darkness=b};this.getContext=function(){return k};this.initMaterial=function(b,e,c,f){var g,j,h;b instanceof THREE.MeshDepthMaterial?h="depth":b instanceof THREE.ShadowVolumeDynamicMaterial?h="shadowVolumeDynamic":b instanceof THREE.MeshNormalMaterial?h="normal":b instanceof THREE.MeshBasicMaterial?h="basic":
b instanceof THREE.MeshLambertMaterial?h="lambert":b instanceof THREE.MeshPhongMaterial?h="phong":b instanceof THREE.LineBasicMaterial?h="basic":b instanceof THREE.ParticleBasicMaterial&&(h="particle_basic");if(h){var m=THREE.ShaderLib[h];b.uniforms=THREE.UniformsUtils.clone(m.uniforms);b.vertexShader=m.vertexShader;b.fragmentShader=m.fragmentShader}var o,n,p;o=p=m=0;for(n=e.length;o<n;o++)j=e[o],j instanceof THREE.SpotLight&&p++,j instanceof THREE.DirectionalLight&&p++,j instanceof THREE.PointLight&&
m++;m+p<=4?o=p:(o=Math.ceil(4*p/(m+p)),m=4-o);j={directional:o,point:m};m=p=0;for(o=e.length;m<o;m++)n=e[m],n instanceof THREE.SpotLight&&n.castShadow&&p++;var t=50;if(f!==void 0&&f instanceof THREE.SkinnedMesh)t=f.bones.length;var u;a:{o=b.fragmentShader;n=b.vertexShader;var m=b.uniforms,e=b.attributes,c={map:!!b.map,envMap:!!b.envMap,lightMap:!!b.lightMap,vertexColors:b.vertexColors,fog:c,sizeAttenuation:b.sizeAttenuation,skinning:b.skinning,morphTargets:b.morphTargets,maxMorphTargets:this.maxMorphTargets,
maxDirLights:j.directional,maxPointLights:j.point,maxBones:t,shadowMapEnabled:this.shadowMapEnabled&&f.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:p},v,f=[];h?f.push(h):(f.push(o),f.push(n));for(v in c)f.push(v),f.push(c[v]);h=f.join();v=0;for(f=L.length;v<f;v++)if(L[v].code==h){u=L[v].program;break a}v=k.createProgram();f=[Ea?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+
c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
j=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SHADOWS "+c.maxShadows,c.fog?"#define USE_FOG":"",c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.vertexColors?"#define USE_COLOR":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapSoft?"#define SHADOWMAP_WIDTH "+
c.shadowMapWidth.toFixed(1):"",c.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+c.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");k.attachShader(v,aa("fragment",j+o));k.attachShader(v,aa("vertex",f+n));k.linkProgram(v);k.getProgramParameter(v,k.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+k.getProgramParameter(v,k.VALIDATE_STATUS)+", gl error ["+k.getError()+"]");v.uniforms={};v.attributes={};var w,f=["viewMatrix","modelViewMatrix",
"projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(w in m)f.push(w);w=f;f=0;for(m=w.length;f<m;f++)o=w[f],v.uniforms[o]=k.getUniformLocation(v,o);f=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(w=0;w<c.maxMorphTargets;w++)f.push("morphTarget"+w);for(u in e)f.push(u);u=f;w=0;for(e=u.length;w<e;w++)c=u[w],v.attributes[c]=k.getAttribLocation(v,c);L.push({program:v,
code:h});u=v}b.program=u;u=b.program.attributes;u.position>=0&&k.enableVertexAttribArray(u.position);u.color>=0&&k.enableVertexAttribArray(u.color);u.normal>=0&&k.enableVertexAttribArray(u.normal);u.tangent>=0&&k.enableVertexAttribArray(u.tangent);b.skinning&&u.skinVertexA>=0&&u.skinVertexB>=0&&u.skinIndex>=0&&u.skinWeight>=0&&(k.enableVertexAttribArray(u.skinVertexA),k.enableVertexAttribArray(u.skinVertexB),k.enableVertexAttribArray(u.skinIndex),k.enableVertexAttribArray(u.skinWeight));if(b.attributes)for(g in b.attributes)u[g]!==
void 0&&u[g]>=0&&k.enableVertexAttribArray(u[g]);if(b.morphTargets)b.numSupportedMorphTargets=0,u.morphTarget0>=0&&(k.enableVertexAttribArray(u.morphTarget0),b.numSupportedMorphTargets++),u.morphTarget1>=0&&(k.enableVertexAttribArray(u.morphTarget1),b.numSupportedMorphTargets++),u.morphTarget2>=0&&(k.enableVertexAttribArray(u.morphTarget2),b.numSupportedMorphTargets++),u.morphTarget3>=0&&(k.enableVertexAttribArray(u.morphTarget3),b.numSupportedMorphTargets++),u.morphTarget4>=0&&(k.enableVertexAttribArray(u.morphTarget4),
b.numSupportedMorphTargets++),u.morphTarget5>=0&&(k.enableVertexAttribArray(u.morphTarget5),b.numSupportedMorphTargets++),u.morphTarget6>=0&&(k.enableVertexAttribArray(u.morphTarget6),b.numSupportedMorphTargets++),u.morphTarget7>=0&&(k.enableVertexAttribArray(u.morphTarget7),b.numSupportedMorphTargets++)};this.render=function(b,c,n,C){var B,U,E,F,K,ha,J,L,ga=b.lights,M=b.fog;this.shadowMapEnabled&&x(b,c);T.data.vertices=0;T.data.faces=0;T.data.drawCalls=0;c.matrixAutoUpdate&&c.update(void 0,!0);b.update(void 0,
!1,c);c.matrixWorldInverse.flattenToArray(wa);c.projectionMatrix.flattenToArray(za);na.multiply(c.projectionMatrix,c.matrixWorldInverse);p(na);this.initWebGLObjects(b);G(n);(this.autoClear||C)&&this.clear();K=b.__webglObjects.length;for(C=0;C<K;C++)if(B=b.__webglObjects[C],J=B.object,J.visible)if(!(J instanceof THREE.Mesh)||t(J)){if(J.matrixWorld.flattenToArray(J._objectMatrixArray),I(J,c,!0),v(B),B.render=!0,this.sortObjects)B.object.renderDepth?B.z=B.object.renderDepth:(Aa.copy(J.position),na.multiplyVector3(Aa),
B.z=Aa.z)}else B.render=!1;else B.render=!1;this.sortObjects&&b.__webglObjects.sort(u);ha=b.__webglObjectsImmediate.length;for(C=0;C<ha;C++)B=b.__webglObjectsImmediate[C],J=B.object,J.visible&&(J.matrixAutoUpdate&&J.matrixWorld.flattenToArray(J._objectMatrixArray),I(J,c,!0),o(B));if(b.overrideMaterial){j(b.overrideMaterial.depthTest);H(b.overrideMaterial.blending);for(C=0;C<K;C++)if(B=b.__webglObjects[C],B.render)J=B.object,L=B.buffer,g(J),f(c,ga,M,b.overrideMaterial,L,J);for(C=0;C<ha;C++)B=b.__webglObjectsImmediate[C],
J=B.object,J.visible&&(g(J),U=e(c,ga,M,b.overrideMaterial,J),J.render(function(e){h(e,U,b.overrideMaterial.shading)}))}else{H(THREE.NormalBlending);for(C=0;C<K;C++)if(B=b.__webglObjects[C],B.render){J=B.object;L=B.buffer;E=B.opaque;g(J);for(B=0;B<E.count;B++)F=E.list[B],j(F.depthTest),m(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),f(c,ga,M,F,L,J)}for(C=0;C<ha;C++)if(B=b.__webglObjectsImmediate[C],J=B.object,J.visible){E=B.opaque;g(J);for(B=0;B<E.count;B++)F=E.list[B],j(F.depthTest),
m(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),U=e(c,ga,M,F,J),J.render(function(b){h(b,U,F.shading)})}for(C=0;C<K;C++)if(B=b.__webglObjects[C],B.render){J=B.object;L=B.buffer;E=B.transparent;g(J);for(B=0;B<E.count;B++)F=E.list[B],H(F.blending),j(F.depthTest),m(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),f(c,ga,M,F,L,J)}for(C=0;C<ha;C++)if(B=b.__webglObjectsImmediate[C],J=B.object,J.visible){E=B.transparent;g(J);for(B=0;B<E.count;B++)F=E.list[B],H(F.blending),j(F.depthTest),
m(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),U=e(c,ga,M,F,J),J.render(function(b){h(b,U,F.shading)})}}b.__webglSprites.length&&y(b,c);Pa&&b.__webglShadowVolumes.length&&b.lights.length&&z(b);b.__webglLensFlares.length&&w(b,c);n&&n.minFilter!==THREE.NearestFilter&&n.minFilter!==THREE.LinearFilter&&(k.bindTexture(k.TEXTURE_2D,n.__webglTexture),k.generateMipmap(k.TEXTURE_2D),k.bindTexture(k.TEXTURE_2D,null))};this.initWebGLObjects=function(b){if(!b.__webglObjects)b.__webglObjects=[],
b.__webglObjectsImmediate=[],b.__webglShadowVolumes=[],b.__webglLensFlares=[],b.__webglSprites=[];for(;b.__objectsAdded.length;){var e=b.__objectsAdded[0],c=b,f=void 0,g=void 0,j=void 0;if(e._modelViewMatrix==void 0)e._modelViewMatrix=new THREE.Matrix4,e._normalMatrixArray=new Float32Array(9),e._modelViewMatrixArray=new Float32Array(16),e._objectMatrixArray=new Float32Array(16),e.matrixWorld.flattenToArray(e._objectMatrixArray);if(e instanceof THREE.Mesh)for(f in g=e.geometry,g.geometryGroups==void 0&&
O(g),g.geometryGroups){j=g.geometryGroups[f];if(!j.__webglVertexBuffer){var h=j;h.__webglVertexBuffer=k.createBuffer();h.__webglNormalBuffer=k.createBuffer();h.__webglTangentBuffer=k.createBuffer();h.__webglColorBuffer=k.createBuffer();h.__webglUVBuffer=k.createBuffer();h.__webglUV2Buffer=k.createBuffer();h.__webglSkinVertexABuffer=k.createBuffer();h.__webglSkinVertexBBuffer=k.createBuffer();h.__webglSkinIndicesBuffer=k.createBuffer();h.__webglSkinWeightsBuffer=k.createBuffer();h.__webglFaceBuffer=
k.createBuffer();h.__webglLineBuffer=k.createBuffer();if(h.numMorphTargets){var m=void 0,o=void 0;h.__webglMorphTargetsBuffers=[];m=0;for(o=h.numMorphTargets;m<o;m++)h.__webglMorphTargetsBuffers.push(k.createBuffer())}for(var h=j,m=e,n=void 0,p=void 0,t=void 0,u=t=void 0,v=void 0,w=void 0,x=w=o=0,y=t=p=void 0,z=y=p=n=void 0,t=void 0,u=m.geometry,v=u.faces,y=h.faces,n=0,p=y.length;n<p;n++)t=y[n],t=v[t],t instanceof THREE.Face3?(o+=3,w+=1,x+=3):t instanceof THREE.Face4&&(o+=4,w+=2,x+=4);for(var n=h,
p=m,C=y=v=void 0,U=void 0,C=void 0,t=[],v=0,y=p.materials.length;v<y;v++)if(C=p.materials[v],C instanceof THREE.MeshFaceMaterial){C=0;for(l=n.materials.length;C<l;C++)(U=n.materials[C])&&t.push(U)}else(U=C)&&t.push(U);n=t;h.__materials=n;a:{v=p=void 0;y=n.length;for(p=0;p<y;p++)if(v=n[p],v.map||v.lightMap||v instanceof THREE.MeshShaderMaterial){p=!0;break a}p=!1}a:{y=v=void 0;t=n.length;for(v=0;v<t;v++)if(y=n[v],!(y instanceof THREE.MeshBasicMaterial&&!y.envMap||y instanceof THREE.MeshDepthMaterial)){y=
y&&y.shading!=void 0&&y.shading==THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading;break a}y=!1}a:{t=v=void 0;C=n.length;for(v=0;v<C;v++)if(t=n[v],t.vertexColors){t=t.vertexColors;break a}t=!1}h.__vertexArray=new Float32Array(o*3);if(y)h.__normalArray=new Float32Array(o*3);if(u.hasTangents)h.__tangentArray=new Float32Array(o*4);if(t)h.__colorArray=new Float32Array(o*3);if(p){if(u.faceUvs.length>0||u.faceVertexUvs.length>0)h.__uvArray=new Float32Array(o*2);if(u.faceUvs.length>1||u.faceVertexUvs.length>
1)h.__uv2Array=new Float32Array(o*2)}if(m.geometry.skinWeights.length&&m.geometry.skinIndices.length)h.__skinVertexAArray=new Float32Array(o*4),h.__skinVertexBArray=new Float32Array(o*4),h.__skinIndexArray=new Float32Array(o*4),h.__skinWeightArray=new Float32Array(o*4);h.__faceArray=new Uint16Array(w*3+(m.geometry.edgeFaces?m.geometry.edgeFaces.length*6:0));h.__lineArray=new Uint16Array(x*2);if(h.numMorphTargets){h.__morphTargetsArrays=[];u=0;for(v=h.numMorphTargets;u<v;u++)h.__morphTargetsArrays.push(new Float32Array(o*
3))}h.__needsSmoothNormals=y==THREE.SmoothShading;h.__uvType=p;h.__vertexColorType=t;h.__normalType=y;h.__webglFaceCount=w*3+(m.geometry.edgeFaces?m.geometry.edgeFaces.length*6:0);h.__webglLineCount=x*2;u=0;for(v=n.length;u<v;u++)if(p=n[u],p.attributes){if(h.__webglCustomAttributes===void 0)h.__webglCustomAttributes={};for(a in p.attributes){t=p.attributes[a];y={};for(z in t)y[z]=t[z];if(!y.__webglInitialized||y.createUniqueBuffers)y.__webglInitialized=!0,w=1,y.type==="v2"?w=2:y.type==="v3"?w=3:y.type===
"v4"?w=4:y.type==="c"&&(w=3),y.size=w,y.array=new Float32Array(o*w),y.buffer=k.createBuffer(),y.buffer.belongsToAttribute=a,t.needsUpdate=!0,y.__original=t;h.__webglCustomAttributes[a]=y}}h.__inittedArrays=!0;g.__dirtyVertices=!0;g.__dirtyMorphTargets=!0;g.__dirtyElements=!0;g.__dirtyUvs=!0;g.__dirtyNormals=!0;g.__dirtyTangents=!0;g.__dirtyColors=!0}e instanceof THREE.ShadowVolume?E(c.__webglShadowVolumes,j,e):E(c.__webglObjects,j,e)}else if(e instanceof THREE.LensFlare)E(c.__webglLensFlares,void 0,
e);else if(e instanceof THREE.Ribbon){g=e.geometry;if(!g.__webglVertexBuffer)f=g,f.__webglVertexBuffer=k.createBuffer(),f.__webglColorBuffer=k.createBuffer(),f=g,j=f.vertices.length,f.__vertexArray=new Float32Array(j*3),f.__colorArray=new Float32Array(j*3),f.__webglVertexCount=j,g.__dirtyVertices=!0,g.__dirtyColors=!0;E(c.__webglObjects,g,e)}else if(e instanceof THREE.Line){g=e.geometry;if(!g.__webglVertexBuffer)f=g,f.__webglVertexBuffer=k.createBuffer(),f.__webglColorBuffer=k.createBuffer(),f=g,
j=f.vertices.length,f.__vertexArray=new Float32Array(j*3),f.__colorArray=new Float32Array(j*3),f.__webglLineCount=j,g.__dirtyVertices=!0,g.__dirtyColors=!0;E(c.__webglObjects,g,e)}else if(e instanceof THREE.ParticleSystem){g=e.geometry;if(!g.__webglVertexBuffer){f=g;f.__webglVertexBuffer=k.createBuffer();f.__webglColorBuffer=k.createBuffer();f=g;j=e;h=f.vertices.length;f.__vertexArray=new Float32Array(h*3);f.__colorArray=new Float32Array(h*3);f.__sortArray=[];f.__webglParticleCount=h;f.__materials=
j.materials;z=o=m=void 0;m=0;for(o=j.materials.length;m<o;m++)if(z=j.materials[m],z.attributes){if(f.__webglCustomAttributes===void 0)f.__webglCustomAttributes={};for(a in z.attributes){originalAttribute=z.attributes[a];attribute={};for(property in originalAttribute)attribute[property]=originalAttribute[property];if(!attribute.__webglInitialized||attribute.createUniqueBuffers)attribute.__webglInitialized=!0,size=1,attribute.type==="v2"?size=2:attribute.type==="v3"?size=3:attribute.type==="v4"?size=
4:attribute.type==="c"&&(size=3),attribute.size=size,attribute.array=new Float32Array(h*size),attribute.buffer=k.createBuffer(),attribute.buffer.belongsToAttribute=a,originalAttribute.needsUpdate=!0,attribute.__original=originalAttribute;f.__webglCustomAttributes[a]=attribute}}g.__dirtyVertices=!0;g.__dirtyColors=!0}E(c.__webglObjects,g,e)}else THREE.MarchingCubes!==void 0&&e instanceof THREE.MarchingCubes?c.__webglObjectsImmediate.push({object:e,opaque:{list:[],count:0},transparent:{list:[],count:0}}):
e instanceof THREE.Sprite&&c.__webglSprites.push(e);b.__objectsAdded.splice(0,1)}for(;b.__objectsRemoved.length;){c=b.__objectsRemoved[0];e=b;if(c instanceof THREE.ShadowVolume)B(e.__webglShadowVolumes,c);else if(c instanceof THREE.Mesh||c instanceof THREE.ParticleSystem||c instanceof THREE.Ribbon||c instanceof THREE.Line)B(e.__webglObjects,c);else if(c instanceof THREE.Sprite){e=e.__webglSprites;g=void 0;for(g=e.length-1;g>=0;g--)e[g]==c&&e.splice(g,1)}else c instanceof THREE.LensFlare?B(e.__webglLensFlares,
c):c instanceof THREE.MarchingCubes&&B(e.__webglObjectsImmediate,c);b.__objectsRemoved.splice(0,1)}e=0;for(c=b.__webglObjects.length;e<c;e++)F(b.__webglObjects[e].object,b);e=0;for(c=b.__webglShadowVolumes.length;e<c;e++)F(b.__webglShadowVolumes[e].object,b);e=0;for(c=b.__webglLensFlares.length;e<c;e++)F(b.__webglLensFlares[e].object,b)};this.setFaceCulling=function(b,e){b?(!e||e=="ccw"?k.frontFace(k.CCW):k.frontFace(k.CW),b=="back"?k.cullFace(k.BACK):b=="front"?k.cullFace(k.FRONT):k.cullFace(k.FRONT_AND_BACK),
k.enable(k.CULL_FACE)):k.disable(k.CULL_FACE)};this.supportsVertexTextures=function(){return Ea}};
THREE.WebGLRenderTarget=function(b,c,e){this.width=b;this.height=c;e=e||{};this.wrapS=e.wrapS!==void 0?e.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=e.wrapT!==void 0?e.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=e.magFilter!==void 0?e.magFilter:THREE.LinearFilter;this.minFilter=e.minFilter!==void 0?e.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=e.format!==void 0?e.format:THREE.RGBAFormat;this.type=e.type!==void 0?e.type:
THREE.UnsignedByteType;this.depthBuffer=e.depthBuffer!==void 0?e.depthBuffer:!0;this.stencilBuffer=e.stencilBuffer!==void 0?e.stencilBuffer:!0};THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(b){this.positionWorld.copy(b.positionWorld);this.positionScreen.copy(b.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterials=this.meshMaterials=null;this.overdraw=!1;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterials=this.meshMaterials=null;this.overdraw=!1;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.materials=null};
THREE.ColorUtils={adjustHSV:function(b,c,e,f){var h=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(b,h);h.h=THREE.ColorUtils.clamp(h.h+c,0,1);h.s=THREE.ColorUtils.clamp(h.s+e,0,1);h.v=THREE.ColorUtils.clamp(h.v+f,0,1);b.setHSV(h.h,h.s,h.v)},rgbToHsv:function(b,c){var e=b.r,f=b.g,h=b.b,g=Math.max(Math.max(e,f),h),j=Math.min(Math.min(e,f),h);if(j==g)j=e=0;else{var m=g-j,j=m/g,e=e==g?(f-h)/m:f==g?2+(h-e)/m:4+(e-f)/m;e/=6;e<0&&(e+=1);e>1&&(e-=1)}c===void 0&&(c={h:0,s:0,v:0});c.h=e;c.s=j;c.v=g;return c},
clamp:function(b,c,e){return b<c?c:b>e?e:b}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(b,c){var e=c instanceof THREE.Mesh,f=b.vertices.length,h=e?c.geometry:c,g=b.vertices,j=h.vertices,m=b.faces,p=h.faces,t=b.faceVertexUvs[0],h=h.faceVertexUvs[0];e&&c.matrixAutoUpdate&&c.updateMatrix();for(var n=0,o=j.length;n<o;n++){var v=new THREE.Vertex(j[n].position.clone());e&&c.matrix.multiplyVector3(v.position);g.push(v)}n=0;for(o=p.length;n<o;n++){var j=p[n],u,x,z=j.vertexNormals,v=j.vertexColors;j instanceof THREE.Face3?u=new THREE.Face3(j.a+f,j.b+f,j.c+
f):j instanceof THREE.Face4&&(u=new THREE.Face4(j.a+f,j.b+f,j.c+f,j.d+f));u.normal.copy(j.normal);e=0;for(g=z.length;e<g;e++)x=z[e],u.vertexNormals.push(x.clone());u.color.copy(j.color);e=0;for(g=v.length;e<g;e++)x=v[e],u.vertexColors.push(x.clone());u.materials=j.materials.slice();u.centroid.copy(j.centroid);m.push(u)}n=0;for(o=h.length;n<o;n++){f=h[n];m=[];e=0;for(g=f.length;e<g;e++)m.push(new THREE.UV(f[e].u,f[e].v));t.push(m)}},clone:function(b){var c=new THREE.Geometry,e,f=b.vertices,h=b.faces,
g=b.faceVertexUvs[0],b=0;for(e=f.length;b<e;b++){var j=new THREE.Vertex(f[b].position.clone());c.vertices.push(j)}b=0;for(e=h.length;b<e;b++){var m=h[b],p,t,n=m.vertexNormals,o=m.vertexColors;m instanceof THREE.Face3?p=new THREE.Face3(m.a,m.b,m.c):m instanceof THREE.Face4&&(p=new THREE.Face4(m.a,m.b,m.c,m.d));p.normal.copy(m.normal);f=0;for(j=n.length;f<j;f++)t=n[f],p.vertexNormals.push(t.clone());p.color.copy(m.color);f=0;for(j=o.length;f<j;f++)t=o[f],p.vertexColors.push(t.clone());p.materials=m.materials.slice();
p.centroid.copy(m.centroid);c.faces.push(p)}b=0;for(e=g.length;b<e;b++){h=g[b];p=[];f=0;for(j=h.length;f<j;f++)p.push(new THREE.UV(h[f].u,h[f].v));c.faceVertexUvs[0].push(p)}return c}};
THREE.ImageUtils={loadTexture:function(b,c,e){var f=new Image,h=new THREE.Texture(f,c);f.onload=function(){h.needsUpdate=!0;e&&e(this)};f.crossOrigin="";f.src=b;return h},loadTextureCube:function(b,c,e){var f,h=[],g=new THREE.Texture(h,c),c=h.loadCount=0;for(f=b.length;c<f;++c)h[c]=new Image,h[c].onload=function(){h.loadCount+=1;if(h.loadCount==6)g.needsUpdate=!0;e&&e(this)},h[c].crossOrigin="",h[c].src=b[c];return g}};
THREE.SceneUtils={showHierarchy:function(b,c){THREE.SceneUtils.traverseHierarchy(b,function(b){b.visible=c})},traverseHierarchy:function(b,c){var e,f,h=b.children.length;for(f=0;f<h;f++)e=b.children[f],c(e),THREE.SceneUtils.traverseHierarchy(e,c)}};
if(THREE.WebGLRenderer)THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:5,texture:null},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",
value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( 1.0 );\nvec4 mColor = vec4( uDiffuseColor, uOpacity );\nvec4 mSpecular = vec4( uSpecularColor, uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\nif( enableAO )\ngl_FragColor = gl_FragColor * texture2D( tAO, vUv );\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointTotal  = vec4( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nvec3 pointHalfVector = normalize( vPointLight[ i ].xyz + viewPosition );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = specularTex.r * pow( pointDotNormalHalf, uShininess );\npointTotal  += pointDistance * vec4( pointLightColor[ i ], 1.0 ) * ( mColor * pointDiffuseWeight + mSpecular * pointSpecularWeight * pointDiffuseWeight );\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirTotal  = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = specularTex.r * pow( dirDotNormalHalf, uShininess );\ndirTotal  += vec4( directionalLightColor[ i ], 1.0 ) * ( mColor * dirDiffuseWeight + mSpecular * dirSpecularWeight * dirDiffuseWeight );\n}\n#endif\nvec4 totalLight = vec4( ambientLightColor * uAmbientColor, uOpacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\ngl_FragColor = gl_FragColor * totalLight;",
THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},convolution:{uniforms:{tDiffuse:{type:"t",
value:0,texture:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"varying vec2 vUv;\nuniform vec2 uImageIncrement;\nvoid main(void) {\nvUv = uv - ((KERNEL_SIZE - 1.0) / 2.0) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nuniform float cKernel[KERNEL_SIZE];\nvoid main(void) {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i=0; i<KERNEL_SIZE; ++i ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[i];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}"},
film:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},time:{type:"f",value:0},nIntensity:{type:"f",value:0.5},sIntensity:{type:"f",value:0.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"},
screen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tDiffuse;\nuniform float opacity;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"},basic:{uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"}},buildKernel:function(b){var c,e,f,h,g=2*Math.ceil(b*3)+1;g>25&&(g=25);h=(g-1)*0.5;e=Array(g);for(c=f=0;c<g;++c)e[c]=Math.exp(-((c-h)*(c-h))/(2*b*b)),f+=e[c];for(c=0;c<g;++c)e[c]/=f;return e}};
THREE.AnimationHandler=function(){var b=[],c={},e={update:function(e){for(var c=0;c<b.length;c++)b[c].update(e)},addToUpdate:function(e){b.indexOf(e)===-1&&b.push(e)},removeFromUpdate:function(e){e=b.indexOf(e);e!==-1&&b.splice(e,1)},add:function(b){c[b.name]!==void 0&&console.log("THREE.AnimationHandler.add: Warning! "+b.name+" already exists in library. Overwriting.");c[b.name]=b;if(b.initialized!==!0){for(var e=0;e<b.hierarchy.length;e++){for(var f=0;f<b.hierarchy[e].keys.length;f++){if(b.hierarchy[e].keys[f].time<
0)b.hierarchy[e].keys[f].time=0;if(b.hierarchy[e].keys[f].rot!==void 0&&!(b.hierarchy[e].keys[f].rot instanceof THREE.Quaternion)){var m=b.hierarchy[e].keys[f].rot;b.hierarchy[e].keys[f].rot=new THREE.Quaternion(m[0],m[1],m[2],m[3])}}if(b.hierarchy[e].keys[0].morphTargets!==void 0){m={};for(f=0;f<b.hierarchy[e].keys.length;f++)for(var p=0;p<b.hierarchy[e].keys[f].morphTargets.length;p++){var t=b.hierarchy[e].keys[f].morphTargets[p];m[t]=-1}b.hierarchy[e].usedMorphTargets=m;for(f=0;f<b.hierarchy[e].keys.length;f++){var n=
{};for(t in m){for(p=0;p<b.hierarchy[e].keys[f].morphTargets.length;p++)if(b.hierarchy[e].keys[f].morphTargets[p]===t){n[t]=b.hierarchy[e].keys[f].morphTargetsInfluences[p];break}p===b.hierarchy[e].keys[f].morphTargets.length&&(n[t]=0)}b.hierarchy[e].keys[f].morphTargetsInfluences=n}}for(f=1;f<b.hierarchy[e].keys.length;f++)b.hierarchy[e].keys[f].time===b.hierarchy[e].keys[f-1].time&&(b.hierarchy[e].keys.splice(f,1),f--);for(f=1;f<b.hierarchy[e].keys.length;f++)b.hierarchy[e].keys[f].index=f}f=parseInt(b.length*
b.fps,10);b.JIT={};b.JIT.hierarchy=[];for(e=0;e<b.hierarchy.length;e++)b.JIT.hierarchy.push(Array(f));b.initialized=!0}},get:function(b){if(typeof b==="string")return c[b]?c[b]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+b),null)},parse:function(b){var e=[];if(b instanceof THREE.SkinnedMesh)for(var c=0;c<b.bones.length;c++)e.push(b.bones[c]);else f(b,e);return e}},f=function(b,e){e.push(b);for(var c=0;c<b.children.length;c++)f(b.children[c],e)};e.LINEAR=0;e.CATMULLROM=1;e.CATMULLROM_FORWARD=
2;return e}();THREE.Animation=function(b,c,e,f){this.root=b;this.data=THREE.AnimationHandler.get(c);this.hierarchy=THREE.AnimationHandler.parse(b);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=e!==void 0?e:THREE.AnimationHandler.LINEAR;this.JITCompile=f!==void 0?f:!0;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(b,c){if(!this.isPlaying){this.isPlaying=!0;this.loop=b!==void 0?b:!0;this.currentTime=c!==void 0?c:0;var e,f=this.hierarchy.length,h;for(e=0;e<f;e++){h=this.hierarchy[e];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)h.useQuaternion=!0;h.matrixAutoUpdate=!0;if(h.animationCache===void 0)h.animationCache={},h.animationCache.prevKey={pos:0,rot:0,scl:0},h.animationCache.nextKey={pos:0,rot:0,scl:0},h.animationCache.originalMatrix=h instanceof
THREE.Bone?h.skinMatrix:h.matrix;var g=h.animationCache.prevKey;h=h.animationCache.nextKey;g.pos=this.data.hierarchy[e].keys[0];g.rot=this.data.hierarchy[e].keys[0];g.scl=this.data.hierarchy[e].keys[0];h.pos=this.getNextKeyWith("pos",e,1);h.rot=this.getNextKeyWith("rot",e,1);h.scl=this.getNextKeyWith("scl",e,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var b=0;b<this.hierarchy.length;b++)if(this.hierarchy[b].animationCache!==void 0)this.hierarchy[b]instanceof THREE.Bone?this.hierarchy[b].skinMatrix=this.hierarchy[b].animationCache.originalMatrix:this.hierarchy[b].matrix=this.hierarchy[b].animationCache.originalMatrix,delete this.hierarchy[b].animationCache};
THREE.Animation.prototype.update=function(b){if(this.isPlaying){var c=["pos","rot","scl"],e,f,h,g,j,m,p,t,n=this.data.JIT.hierarchy,o,v;this.currentTime+=b*this.timeScale;v=this.currentTime;o=this.currentTime%=this.data.length;t=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10);for(var u=0,x=this.hierarchy.length;u<x;u++)if(b=this.hierarchy[u],p=b.animationCache,this.JITCompile&&n[u][t]!==void 0)b instanceof THREE.Bone?(b.skinMatrix=n[u][t],b.matrixAutoUpdate=!1,b.matrixWorldNeedsUpdate=
!1):(b.matrix=n[u][t],b.matrixAutoUpdate=!1,b.matrixWorldNeedsUpdate=!0);else{if(this.JITCompile)b instanceof THREE.Bone?b.skinMatrix=b.animationCache.originalMatrix:b.matrix=b.animationCache.originalMatrix;for(var z=0;z<3;z++){e=c[z];j=p.prevKey[e];m=p.nextKey[e];if(m.time<=v){if(o<v)if(this.loop){j=this.data.hierarchy[u].keys[0];for(m=this.getNextKeyWith(e,u,1);m.time<o;)j=m,m=this.getNextKeyWith(e,u,m.index+1)}else{this.stop();return}else{do j=m,m=this.getNextKeyWith(e,u,m.index+1);while(m.time<
o)}p.prevKey[e]=j;p.nextKey[e]=m}b.matrixAutoUpdate=!0;b.matrixWorldNeedsUpdate=!0;f=(o-j.time)/(m.time-j.time);h=j[e];g=m[e];if(f<0||f>1)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+f+" on bone "+u),f=f<0?0:1;if(e==="pos")if(e=b.position,this.interpolationType===THREE.AnimationHandler.LINEAR)e.x=h[0]+(g[0]-h[0])*f,e.y=h[1]+(g[1]-h[1])*f,e.z=h[2]+(g[2]-h[2])*f;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)if(this.points[0]=
this.getPrevKeyWith("pos",u,j.index-1).pos,this.points[1]=h,this.points[2]=g,this.points[3]=this.getNextKeyWith("pos",u,m.index+1).pos,f=f*0.33+0.33,h=this.interpolateCatmullRom(this.points,f),e.x=h[0],e.y=h[1],e.z=h[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)f=this.interpolateCatmullRom(this.points,f*1.01),this.target.set(f[0],f[1],f[2]),this.target.subSelf(e),this.target.y=0,this.target.normalize(),f=Math.atan2(this.target.x,this.target.z),b.rotation.set(0,f,0)}else if(e===
"rot")THREE.Quaternion.slerp(h,g,b.quaternion,f);else if(e==="scl")e=b.scale,e.x=h[0]+(g[0]-h[0])*f,e.y=h[1]+(g[1]-h[1])*f,e.z=h[2]+(g[2]-h[2])*f}}if(this.JITCompile&&n[0][t]===void 0){this.hierarchy[0].update(void 0,!0);for(u=0;u<this.hierarchy.length;u++)n[u][t]=this.hierarchy[u]instanceof THREE.Bone?this.hierarchy[u].skinMatrix.clone():this.hierarchy[u].matrix.clone()}}};
THREE.Animation.prototype.interpolateCatmullRom=function(b,c){var e=[],f=[],h,g,j,m,p,t;h=(b.length-1)*c;g=Math.floor(h);h-=g;e[0]=g==0?g:g-1;e[1]=g;e[2]=g>b.length-2?g:g+1;e[3]=g>b.length-3?g:g+2;g=b[e[0]];m=b[e[1]];p=b[e[2]];t=b[e[3]];e=h*h;j=h*e;f[0]=this.interpolate(g[0],m[0],p[0],t[0],h,e,j);f[1]=this.interpolate(g[1],m[1],p[1],t[1],h,e,j);f[2]=this.interpolate(g[2],m[2],p[2],t[2],h,e,j);return f};
THREE.Animation.prototype.interpolate=function(b,c,e,f,h,g,j){b=(e-b)*0.5;f=(f-c)*0.5;return(2*(c-e)+b+f)*j+(-3*(c-e)-2*b-f)*g+b*h+c};THREE.Animation.prototype.getNextKeyWith=function(b,c,e){var f=this.data.hierarchy[c].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?e=e<f.length-1?e:f.length-1:e%=f.length;e<f.length;e++)if(f[e][b]!==void 0)return f[e];return this.data.hierarchy[c].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(b,c,e){for(var f=this.data.hierarchy[c].keys,e=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?e>0?e:0:e>=0?e:e+f.length;e>=0;e--)if(f[e][b]!==void 0)return f[e];return this.data.hierarchy[c].keys[f.length-1]};
THREE.FirstPersonCamera=function(b){function c(b,c){return function(){c.apply(b,arguments)}}THREE.Camera.call(this,b.fov,b.aspect,b.near,b.far,b.target);this.movementSpeed=1;this.lookSpeed=0.0050;this.noFly=!1;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=3.14;this.domElement=document;this.lastUpdate=(new Date).getTime();this.tdiff=0;if(b){if(b.movementSpeed!==void 0)this.movementSpeed=
b.movementSpeed;if(b.lookSpeed!==void 0)this.lookSpeed=b.lookSpeed;if(b.noFly!==void 0)this.noFly=b.noFly;if(b.lookVertical!==void 0)this.lookVertical=b.lookVertical;if(b.autoForward!==void 0)this.autoForward=b.autoForward;if(b.activeLook!==void 0)this.activeLook=b.activeLook;if(b.heightSpeed!==void 0)this.heightSpeed=b.heightSpeed;if(b.heightCoef!==void 0)this.heightCoef=b.heightCoef;if(b.heightMin!==void 0)this.heightMin=b.heightMin;if(b.heightMax!==void 0)this.heightMax=b.heightMax;if(b.constrainVertical!==
void 0)this.constrainVertical=b.constrainVertical;if(b.verticalMin!==void 0)this.verticalMin=b.verticalMin;if(b.verticalMax!==void 0)this.verticalMax=b.verticalMax;if(b.domElement!==void 0)this.domElement=b.domElement}this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.windowHalfX=window.innerWidth/2;this.windowHalfY=window.innerHeight/2;this.onMouseDown=function(b){b.preventDefault();
b.stopPropagation();if(this.activeLook)switch(b.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(b){b.preventDefault();b.stopPropagation();if(this.activeLook)switch(b.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(b){this.mouseX=b.clientX-this.windowHalfX;this.mouseY=b.clientY-this.windowHalfY};this.onKeyDown=function(b){switch(b.keyCode){case 38:case 87:this.moveForward=
!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(b){switch(b.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=
function(){var b=(new Date).getTime();this.tdiff=(b-this.lastUpdate)/1E3;this.lastUpdate=b;if(!this.freeze){this.autoSpeedFactor=this.heightSpeed?this.tdiff*((this.position.y<this.heightMin?this.heightMin:this.position.y>this.heightMax?this.heightMax:this.position.y)-this.heightMin)*this.heightCoef:0;var c=this.tdiff*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.translateZ(-(c+this.autoSpeedFactor));this.moveBackward&&this.translateZ(c);this.moveLeft&&this.translateX(-c);
this.moveRight&&this.translateX(c);this.moveUp&&this.translateY(c);this.moveDown&&this.translateY(-c);c=this.tdiff*this.lookSpeed;this.activeLook||(c=0);this.lon+=this.mouseX*c;this.lookVertical&&(this.lat-=this.mouseY*c);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target.position,h=this.position;b.x=h.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=h.y+100*Math.cos(this.phi);b.z=h.z+100*Math.sin(this.phi)*Math.sin(this.theta)}b=
1;this.constrainVertical&&(b=3.14/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*c;this.lookVertical&&(this.lat-=this.mouseY*c*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;if(this.constrainVertical)this.phi=(this.phi-0)*(this.verticalMax-this.verticalMin)/3.14+this.verticalMin;b=this.target.position;h=this.position;b.x=h.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=h.y+100*Math.cos(this.phi);b.z=h.z+100*Math.sin(this.phi)*
Math.sin(this.theta);this.supr.update.call(this)};this.domElement.addEventListener("contextmenu",function(b){b.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1)};
THREE.FirstPersonCamera.prototype=new THREE.Camera;THREE.FirstPersonCamera.prototype.constructor=THREE.FirstPersonCamera;THREE.FirstPersonCamera.prototype.supr=THREE.Camera.prototype;THREE.FirstPersonCamera.prototype.translate=function(b,c){this.matrix.rotateAxis(c);if(this.noFly)c.y=0;this.position.addSelf(c.multiplyScalar(b));this.target.position.addSelf(c.multiplyScalar(b))};
THREE.PathCamera=function(b){function c(b,e,c,f){var g={name:c,fps:0.6,length:f,hierarchy:[]},j,h=e.getControlPointsArray(),m=e.getLength(),p=h.length,I=0;j=p-1;e={parent:-1,keys:[]};e.keys[0]={time:0,pos:h[0],rot:[0,0,0,1],scl:[1,1,1]};e.keys[j]={time:f,pos:h[j],rot:[0,0,0,1],scl:[1,1,1]};for(j=1;j<p-1;j++)I=f*m.chunks[j]/m.total,e.keys[j]={time:I,pos:h[j]};g.hierarchy[0]=e;THREE.AnimationHandler.add(g);return new THREE.Animation(b,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function e(b,e){var c,
f,g=new THREE.Geometry;for(c=0;c<b.points.length*e;c++)f=c/(b.points.length*e),f=b.getPoint(f),g.vertices[c]=new THREE.Vertex(new THREE.Vector3(f.x,f.y,f.z));return g}function f(b,c){var f=e(c,10),g=e(c,10),j=new THREE.LineBasicMaterial({color:16711680,linewidth:3});lineObj=new THREE.Line(f,j);particleObj=new THREE.ParticleSystem(g,new THREE.ParticleBasicMaterial({color:16755200,size:3}));lineObj.scale.set(1,1,1);b.addChild(lineObj);particleObj.scale.set(1,1,1);b.addChild(particleObj);g=new THREE.SphereGeometry(1,
16,8);j=new THREE.MeshBasicMaterial({color:65280});for(i=0;i<c.points.length;i++)f=new THREE.Mesh(g,j),f.position.copy(c.points[i]),f.updateMatrix(),b.addChild(f)}THREE.Camera.call(this,b.fov,b.aspect,b.near,b.far,b.target);this.id="PathCamera"+THREE.PathCameraIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;this.animationParent=new THREE.Object3D;this.lookSpeed=0.0050;this.lookHorizontal=
this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,6.28],dstRange:[0,6.28]};this.horizontalAngleMap={srcRange:[0,6.28],dstRange:[0,6.28]};this.domElement=document;if(b){if(b.duration!==void 0)this.duration=b.duration*1E3;if(b.waypoints!==void 0)this.waypoints=b.waypoints;if(b.useConstantSpeed!==void 0)this.useConstantSpeed=b.useConstantSpeed;if(b.resamplingCoef!==void 0)this.resamplingCoef=b.resamplingCoef;if(b.createDebugPath!==void 0)this.createDebugPath=b.createDebugPath;if(b.createDebugDummy!==
void 0)this.createDebugDummy=b.createDebugDummy;if(b.lookSpeed!==void 0)this.lookSpeed=b.lookSpeed;if(b.lookVertical!==void 0)this.lookVertical=b.lookVertical;if(b.lookHorizontal!==void 0)this.lookHorizontal=b.lookHorizontal;if(b.verticalAngleMap!==void 0)this.verticalAngleMap=b.verticalAngleMap;if(b.horizontalAngleMap!==void 0)this.horizontalAngleMap=b.horizontalAngleMap;if(b.domElement!==void 0)this.domElement=b.domElement}this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;this.windowHalfX=
window.innerWidth/2;this.windowHalfY=window.innerHeight/2;var h=Math.PI*2,g=Math.PI/180;this.update=function(b,e,c){var f,j;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*g;this.theta=this.lon*g;f=this.phi%h;this.phi=f>=0?f:f+h;f=this.verticalAngleMap.srcRange;j=this.verticalAngleMap.dstRange;var m=j[1]-j[0];this.phi=
TWEEN.Easing.Quadratic.EaseInOut(((this.phi-f[0])*(j[1]-j[0])/(f[1]-f[0])+j[0]-j[0])/m)*m+j[0];f=this.horizontalAngleMap.srcRange;j=this.horizontalAngleMap.dstRange;m=j[1]-j[0];this.theta=TWEEN.Easing.Quadratic.EaseInOut(((this.theta-f[0])*(j[1]-j[0])/(f[1]-f[0])+j[0]-j[0])/m)*m+j[0];f=this.target.position;f.x=100*Math.sin(this.phi)*Math.cos(this.theta);f.y=100*Math.cos(this.phi);f.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.supr.update.call(this,b,e,c)};this.onMouseMove=function(b){this.mouseX=
b.clientX-this.windowHalfX;this.mouseY=b.clientY-this.windowHalfY};this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var b=new THREE.MeshLambertMaterial({color:30719}),j=new THREE.MeshLambertMaterial({color:65280}),m=new THREE.CubeGeometry(10,10,20),p=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(m,b);b=new THREE.Mesh(p,j);b.position.set(0,10,0);this.animation=
c(this.animationParent,this.spline,this.id,this.duration);this.animationParent.addChild(this);this.animationParent.addChild(this.target);this.animationParent.addChild(b)}else this.animation=c(this.animationParent,this.spline,this.id,this.duration),this.animationParent.addChild(this.target),this.animationParent.addChild(this);this.createDebugPath&&f(this.debugPath,this.spline);this.domElement.addEventListener("mousemove",function(b,e){return function(){e.apply(b,arguments)}}(this,this.onMouseMove),
!1)};THREE.PathCamera.prototype=new THREE.Camera;THREE.PathCamera.prototype.constructor=THREE.PathCamera;THREE.PathCamera.prototype.supr=THREE.Camera.prototype;THREE.PathCameraIdCounter=0;
THREE.FlyCamera=function(b){function c(b,c){return function(){c.apply(b,arguments)}}THREE.Camera.call(this,b.fov,b.aspect,b.near,b.far,b.target);this.tmpQuaternion=new THREE.Quaternion;this.movementSpeed=1;this.rollSpeed=0.0050;this.autoForward=this.dragToLook=!1;this.domElement=document;if(b){if(b.movementSpeed!==void 0)this.movementSpeed=b.movementSpeed;if(b.rollSpeed!==void 0)this.rollSpeed=b.rollSpeed;if(b.dragToLook!==void 0)this.dragToLook=b.dragToLook;if(b.autoForward!==void 0)this.autoForward=
b.autoForward;if(b.domElement!==void 0)this.domElement=b.domElement}this.useTarget=!1;this.useQuaternion=!0;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.lastUpdate=-1;this.tdiff=0;this.handleEvent=function(b){if(typeof this[b.type]=="function")this[b.type](b)};this.keydown=function(b){if(!b.altKey){switch(b.keyCode){case 16:this.movementSpeedMultiplier=
0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};
this.keyup=function(b){switch(b.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;
case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(b){b.preventDefault();b.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(b.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}};this.mousemove=function(b){if(!this.dragToLook||this.mouseStatus>0){var c=this.getContainerDimensions(),h=c.size[0]/2,g=c.size[1]/2;this.moveState.yawLeft=-(b.clientX-c.offset[0]-h)/h;this.moveState.pitchDown=(b.clientY-
c.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(b){b.preventDefault();b.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(b.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(){var b=(new Date).getTime();if(this.lastUpdate==-1)this.lastUpdate=b;this.tdiff=(b-this.lastUpdate)/1E3;this.lastUpdate=b;var b=this.tdiff*this.movementSpeed,c=this.tdiff*
this.rollSpeed;this.translateX(this.moveVector.x*b);this.translateY(this.moveVector.y*b);this.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*c,this.rotationVector.y*c,this.rotationVector.z*c,1).normalize();this.quaternion.multiplySelf(this.tmpQuaternion);this.matrix.setPosition(this.position);this.matrix.setRotationFromQuaternion(this.quaternion);this.matrixWorldNeedsUpdate=!0;this.supr.update.call(this)};this.updateMovementVector=function(){var b=this.moveState.forward||
this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-b+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=
document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,this.mouseup),!1);window.addEventListener("keydown",c(this,this.keydown),!1);window.addEventListener("keyup",c(this,
this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};THREE.FlyCamera.prototype=new THREE.Camera;THREE.FlyCamera.prototype.constructor=THREE.FlyCamera;THREE.FlyCamera.prototype.supr=THREE.Camera.prototype;
THREE.RollCamera=function(b,c,e,f){THREE.Camera.call(this,b,c,e,f);this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.domElement=document;this.matrixAutoUpdate=this.useTarget=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;this.lastUpdate=-1;this.delta=0;var h=new THREE.Vector3,g=new THREE.Vector3,j=new THREE.Vector3,m=new THREE.Matrix4,p=!1,t=1,n=0,o=0,v=0,u=0,x=0,z=window.innerWidth/2,y=window.innerHeight/2;this.update=
function(){var b=(new Date).getTime();if(this.lastUpdate==-1)this.lastUpdate=b;this.delta=(b-this.lastUpdate)/1E3;this.lastUpdate=b;this.mouseLook&&(b=this.delta*this.lookSpeed,this.rotateHorizontally(b*u),this.rotateVertically(b*x));b=this.delta*this.movementSpeed;this.translateZ(b*(n>0||this.autoForward&&!(n<0)?1:n));this.translateX(b*o);this.translateY(b*v);p&&(this.roll+=this.rollSpeed*this.delta*t);if(this.forward.y>this.constrainVertical[1])this.forward.y=this.constrainVertical[1],this.forward.normalize();
else if(this.forward.y<this.constrainVertical[0])this.forward.y=this.constrainVertical[0],this.forward.normalize();j.copy(this.forward);g.set(0,1,0);h.cross(g,j).normalize();g.cross(j,h).normalize();this.matrix.n11=h.x;this.matrix.n12=g.x;this.matrix.n13=j.x;this.matrix.n21=h.y;this.matrix.n22=g.y;this.matrix.n23=j.y;this.matrix.n31=h.z;this.matrix.n32=g.z;this.matrix.n33=j.z;m.identity();m.n11=Math.cos(this.roll);m.n12=-Math.sin(this.roll);m.n21=Math.sin(this.roll);m.n22=Math.cos(this.roll);this.matrix.multiplySelf(m);
this.matrixWorldNeedsUpdate=!0;this.matrix.n14=this.position.x;this.matrix.n24=this.position.y;this.matrix.n34=this.position.z;this.supr.update.call(this)};this.translateX=function(b){this.position.x+=this.matrix.n11*b;this.position.y+=this.matrix.n21*b;this.position.z+=this.matrix.n31*b};this.translateY=function(b){this.position.x+=this.matrix.n12*b;this.position.y+=this.matrix.n22*b;this.position.z+=this.matrix.n32*b};this.translateZ=function(b){this.position.x-=this.matrix.n13*b;this.position.y-=
this.matrix.n23*b;this.position.z-=this.matrix.n33*b};this.rotateHorizontally=function(b){h.set(this.matrix.n11,this.matrix.n21,this.matrix.n31);h.multiplyScalar(b);this.forward.subSelf(h);this.forward.normalize()};this.rotateVertically=function(b){g.set(this.matrix.n12,this.matrix.n22,this.matrix.n32);g.multiplyScalar(b);this.forward.addSelf(g);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(b){b.preventDefault()},!1);this.domElement.addEventListener("mousemove",
function(b){u=(b.clientX-z)/window.innerWidth;x=(b.clientY-y)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(b){b.preventDefault();b.stopPropagation();switch(b.button){case 0:n=1;break;case 2:n=-1}},!1);this.domElement.addEventListener("mouseup",function(b){b.preventDefault();b.stopPropagation();switch(b.button){case 0:n=0;break;case 2:n=0}},!1);this.domElement.addEventListener("keydown",function(b){switch(b.keyCode){case 38:case 87:n=1;break;case 37:case 65:o=-1;break;
case 40:case 83:n=-1;break;case 39:case 68:o=1;break;case 81:p=!0;t=1;break;case 69:p=!0;t=-1;break;case 82:v=1;break;case 70:v=-1}},!1);this.domElement.addEventListener("keyup",function(b){switch(b.keyCode){case 38:case 87:n=0;break;case 37:case 65:o=0;break;case 40:case 83:n=0;break;case 39:case 68:o=0;break;case 81:p=!1;break;case 69:p=!1;break;case 82:v=0;break;case 70:v=0}},!1)};THREE.RollCamera.prototype=new THREE.Camera;THREE.RollCamera.prototype.constructor=THREE.RollCamera;
THREE.RollCamera.prototype.supr=THREE.Camera.prototype;
THREE.TrackballCamera=function(b){function c(b,c){return function(){c.apply(b,arguments)}}b=b||{};THREE.Camera.call(this,b.fov,b.aspect,b.near,b.far,b.target);this.domElement=b.domElement||document;this.screen=b.screen||{width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=b.radius||(this.screen.width+this.screen.height)/4;this.rotateSpeed=b.rotateSpeed||1;this.zoomSpeed=b.zoomSpeed||1.2;this.panSpeed=b.panSpeed||0.3;this.noZoom=b.noZoom||!1;this.noPan=b.noPan||
!1;this.staticMoving=b.staticMoving||!1;this.dynamicDampingFactor=b.dynamicDampingFactor||0.2;this.minDistance=b.minDistance||0;this.maxDistance=b.maxDistance||Infinity;this.keys=b.keys||[65,83,68];this.useTarget=!0;var e=!1,f=this.STATE.NONE,h=new THREE.Vector3,g=new THREE.Vector3,j=new THREE.Vector3,m=new THREE.Vector2,p=new THREE.Vector2,t=new THREE.Vector2,n=new THREE.Vector2;this.handleEvent=function(b){if(typeof this[b.type]=="function")this[b.type](b)};this.getMouseOnScreen=function(b,c){return new THREE.Vector2((b-
this.screen.offsetLeft)/this.radius*0.5,(c-this.screen.offsetTop)/this.radius*0.5)};this.getMouseProjectionOnBall=function(b,c){var e=new THREE.Vector3((b-this.screen.width*0.5-this.screen.offsetLeft)/this.radius,(this.screen.height*0.5+this.screen.offsetTop-c)/this.radius,0),f=e.length();f>1?e.normalize():e.z=Math.sqrt(1-f*f);h=this.position.clone().subSelf(this.target.position);f=this.up.clone().setLength(e.y);f.addSelf(this.up.clone().crossSelf(h).setLength(e.x));f.addSelf(h.setLength(e.z));return f};
this.rotateCamera=function(){var b=Math.acos(g.dot(j)/g.length()/j.length());if(b){var c=(new THREE.Vector3).cross(g,j).normalize(),e=new THREE.Quaternion;b*=this.rotateSpeed;e.setFromAxisAngle(c,-b);e.multiplyVector3(h);e.multiplyVector3(this.up);e.multiplyVector3(j);this.staticMoving?g=j:(e.setFromAxisAngle(c,b*(this.dynamicDampingFactor-1)),e.multiplyVector3(g))}};this.zoomCamera=function(){var b=1+(p.y-m.y)*this.zoomSpeed;b!==1&&b>0&&(h.multiplyScalar(b),this.staticMoving?m=p:m.y+=(p.y-m.y)*this.dynamicDampingFactor)};
this.panCamera=function(){var b=n.clone().subSelf(t);if(b.lengthSq()){b.multiplyScalar(h.length()*this.panSpeed);var c=h.clone().crossSelf(this.up).setLength(b.x);c.addSelf(this.up.clone().setLength(b.y));this.position.addSelf(c);this.target.position.addSelf(c);this.staticMoving?t=n:t.addSelf(b.sub(n,t).multiplyScalar(this.dynamicDampingFactor))}};this.checkDistances=function(){if(!this.noZoom||!this.noPan)this.position.lengthSq()>this.maxDistance*this.maxDistance&&this.position.setLength(this.maxDistance),
h.lengthSq()<this.minDistance*this.minDistance&&this.position.add(this.target.position,h.setLength(this.minDistance))};this.update=function(b,c,e){h=this.position.clone().subSelf(this.target.position);this.rotateCamera();this.noZoom||this.zoomCamera();this.noPan||this.panCamera();this.position.add(this.target.position,h);this.checkDistances();this.supr.update.call(this,b,c,e)};this.domElement.addEventListener("contextmenu",function(b){b.preventDefault()},!1);this.domElement.addEventListener("mousemove",
c(this,function(b){e&&(g=j=this.getMouseProjectionOnBall(b.clientX,b.clientY),m=p=this.getMouseOnScreen(b.clientX,b.clientY),t=n=this.getMouseOnScreen(b.clientX,b.clientY),e=!1);f!==this.STATE.NONE&&(f===this.STATE.ROTATE?j=this.getMouseProjectionOnBall(b.clientX,b.clientY):f===this.STATE.ZOOM&&!this.noZoom?p=this.getMouseOnScreen(b.clientX,b.clientY):f===this.STATE.PAN&&!this.noPan&&(n=this.getMouseOnScreen(b.clientX,b.clientY)))}),!1);this.domElement.addEventListener("mousedown",c(this,function(b){b.preventDefault();
b.stopPropagation();if(f===this.STATE.NONE)f=b.button,f===this.STATE.ROTATE?g=j=this.getMouseProjectionOnBall(b.clientX,b.clientY):f===this.STATE.ZOOM&&!this.noZoom?m=p=this.getMouseOnScreen(b.clientX,b.clientY):this.noPan||(t=n=this.getMouseOnScreen(b.clientX,b.clientY))}),!1);this.domElement.addEventListener("mouseup",c(this,function(b){b.preventDefault();b.stopPropagation();f=this.STATE.NONE}),!1);window.addEventListener("keydown",c(this,function(b){if(f===this.STATE.NONE){if(b.keyCode===this.keys[this.STATE.ROTATE])f=
this.STATE.ROTATE;else if(b.keyCode===this.keys[this.STATE.ZOOM]&&!this.noZoom)f=this.STATE.ZOOM;else if(b.keyCode===this.keys[this.STATE.PAN]&&!this.noPan)f=this.STATE.PAN;f!==this.STATE.NONE&&(e=!0)}}),!1);window.addEventListener("keyup",c(this,function(){if(f!==this.STATE.NONE)f=this.STATE.NONE}),!1)};THREE.TrackballCamera.prototype=new THREE.Camera;THREE.TrackballCamera.prototype.constructor=THREE.TrackballCamera;THREE.TrackballCamera.prototype.supr=THREE.Camera.prototype;
THREE.TrackballCamera.prototype.STATE={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};THREE.QuakeCamera=THREE.FirstPersonCamera;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(b){return this.getPoint(this.getUtoTmapping(b))};THREE.Curve.prototype.getPoints=function(b){b||(b=5);var c,e=[];for(c=0;c<=b;c++)e.push(this.getPoint(c/b));return e};
THREE.Curve.prototype.getSpacedPoints=function(b){b||(b=5);var c,e=[];for(c=0;c<=b;c++)e.push(this.getPointAt(c/b));return e};THREE.Curve.prototype.getLength=function(){var b=this.getLengths();return b[b.length-1]};THREE.Curve.prototype.getLengths=function(b){b||(b=200);if(this.cacheLengths&&this.cacheLengths.length==b)return this.cacheLengths;var c=[],e,f=this.getPoint(0),h,g=0;for(h=1;h<=b;h++)e=this.getPoint(h/b),g+=e.distanceTo(f),c.push(g),f=e;return this.cacheLengths=c};
THREE.Curve.prototype.getUtoTmapping=function(b,c){var e=this.getLengths(),f=0,h=e.length,g;for(g=c?c:b*e[h-1];f<h;){if(e[f]>g)break;f++}return f/h};THREE.LineCurve=function(b,c,e,f){this.x1=b;this.y1=c;this.x2=e;this.y2=f};THREE.LineCurve.prototype=new THREE.Curve;THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(b){return new THREE.Vector2(this.x1+(this.x2-this.x1)*b,this.y1+(this.y2-this.y1)*b)};
THREE.QuadraticBezierCurve=function(b,c,e,f,h,g){this.x0=b;this.y0=c;this.x1=e;this.y1=f;this.x2=h;this.y2=g};THREE.QuadraticBezierCurve.prototype=new THREE.Curve;THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(b){var c;c=THREE.Shape.Utils.b2(b,this.x0,this.x1,this.x2);b=THREE.Shape.Utils.b2(b,this.y0,this.y1,this.y2);return new THREE.Vector2(c,b)};
THREE.QuadraticBezierCurve.prototype.getNormalVector=function(b){var c;c=THREE.Curve.Utils.tangentQuadraticBezier(b,this.x0,this.x1,this.x2);b=THREE.Curve.Utils.tangentQuadraticBezier(b,this.y0,this.y1,this.y2);return(new THREE.Vector2(-b,c)).unit()};THREE.CubicBezierCurve=function(b,c,e,f,h,g,j,m){this.x0=b;this.y0=c;this.x1=e;this.y1=f;this.x2=h;this.y2=g;this.x3=j;this.y3=m};THREE.CubicBezierCurve.prototype=new THREE.Curve;THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;
THREE.CubicBezierCurve.prototype.getPoint=function(b){var c;c=THREE.Shape.Utils.b3(b,this.x0,this.x1,this.x2,this.x3);b=THREE.Shape.Utils.b3(b,this.y0,this.y1,this.y2,this.y3);return new THREE.Vector2(c,b)};THREE.SplineCurve=function(b){this.points=b};THREE.SplineCurve.prototype=new THREE.Curve;THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;
THREE.SplineCurve.prototype.getPoint=function(b){var c=new THREE.Vector2,e=[],f=this.points,h;h=(f.length-1)*b;b=Math.floor(h);h-=b;e[0]=b==0?b:b-1;e[1]=b;e[2]=b>f.length-2?b:b+1;e[3]=b>f.length-3?b:b+2;c.x=THREE.Curve.Utils.interpolate(f[e[0]].x,f[e[1]].x,f[e[2]].x,f[e[3]].x,h);c.y=THREE.Curve.Utils.interpolate(f[e[0]].y,f[e[1]].y,f[e[2]].y,f[e[3]].y,h);return c};THREE.ArcCurve=function(b,c,e,f,h,g){this.aX=b;this.aY=c;this.aRadius=e;this.aStartAngle=f;this.aEndAngle=h;this.aClockwise=g};
THREE.ArcCurve.prototype=new THREE.Curve;THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.ArcCurve.prototype.getPoint=function(b){var c=this.aEndAngle-this.aStartAngle;this.aClockwise||(b=1-b);b=this.aStartAngle+b*c;return new THREE.Vector2(this.aX+this.aRadius*Math.cos(b),this.aY+this.aRadius*Math.sin(b))};
THREE.Curve.Utils={tangentQuadraticBezier:function(b,c,e,f){return 2*(1-b)*(e-c)+2*b*(f-e)},tangentSpline:function(){},interpolate:function(b,c,e,f,h){var b=(e-b)*0.5,f=(f-c)*0.5,g=h*h;return(2*c-2*e+b+f)*h*g+(-3*c+3*e-2*b-f)*g+b*h+c}};THREE.Curve.create=function(b,c){b.prototype=new THREE.Curve;b.prototype.constructor=b;b.prototype.getPoint=c;return b};
THREE.LineCurve3=THREE.Curve.create(function(b,c,e,f,h,g){this.x1=b;this.y1=c;this.z1=e;this.x2=f;this.y2=h;this.z2=g},function(b){return new THREE.Vector3(this.x1+(this.x2-this.x1)*b,this.y1+(this.y2-this.y1)*b,this.z1+(this.z2-this.z1)*b)});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(b,c,e,f,h,g,j,m,p){this.x0=b;this.y0=c;this.z0=e;this.x1=f;this.y1=h;this.z1=g;this.x2=j;this.y2=m;this.z2=p},function(b){var c,e;c=THREE.Shape.Utils.b2(b,this.x0,this.x1,this.x2);e=THREE.Shape.Utils.b2(b,this.y0,this.y1,this.y2);b=THREE.Shape.Utils.b2(b,this.z0,this.z1,this.z2);return new THREE.Vector2(c,e,b)});THREE.Path=function(b){this.actions=[];this.curves=[];b&&this.fromPoints(b)};
THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"};THREE.Path.prototype.fromPoints=function(b){this.moveTo(b[0].x,b[0].y);var c,e=b.length;for(c=1;c<e;c++)this.lineTo(b[c].x,b[c].y)};THREE.Path.prototype.moveTo=function(){var b=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:b})};
THREE.Path.prototype.lineTo=function(b,c){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.LineCurve(f[f.length-2],f[f.length-1],b,c);this.curves.push(f);this.actions.push({action:THREE.PathActions.LINE_TO,args:e,curve:f})};
THREE.Path.prototype.quadraticCurveTo=function(b,c,e,f){var h=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.QuadraticBezierCurve(g[g.length-2],g[g.length-1],b,c,e,f);this.curves.push(g);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:h,curve:g})};
THREE.Path.prototype.bezierCurveTo=function(b,c,e,f,h,g){var j=Array.prototype.slice.call(arguments),m=this.actions[this.actions.length-1].args,m=new THREE.CubicBezierCurve(m[m.length-2],m[m.length-1],b,c,e,f,h,g);this.curves.push(m);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:j,curve:m})};
THREE.Path.prototype.splineThru=function(b){var c=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,e=[new THREE.Vector2(e[e.length-2],e[e.length-1])],e=e.concat(b),e=new THREE.SplineCurve(e);this.curves.push(e);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:c,curve:e})};
THREE.Path.prototype.arc=function(b,c,e,f,h,g){var j=Array.prototype.slice.call(arguments);this.curves.push(new THREE.ArcCurve(b,c,e,f,h,g));this.actions.push({action:THREE.PathActions.ARC,args:j})};THREE.Path.prototype.getSpacedPoints=function(b,c){b||(b=40);for(var e=[],f=0;f<b;f++)e.push(this.getPoint(f/b));c&&e.push(e[0]);return e};
THREE.Path.prototype.getPoints=function(b,c){var b=b||12,e=[],f,h,g,j,m,p,t,n,o,v,u,x,z;f=0;for(h=this.actions.length;f<h;f++)switch(g=this.actions[f],j=g.action,g=g.args,j){case THREE.PathActions.LINE_TO:e.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:m=g[2];p=g[3];o=g[0];v=g[1];e.length>0?(j=e[e.length-1],u=j.x,x=j.y):(j=this.actions[f-1].args,u=j[j.length-2],x=j[j.length-1]);for(j=1;j<=b;j++)z=j/b,g=THREE.Shape.Utils.b2(z,u,o,m),z=THREE.Shape.Utils.b2(z,x,v,
p),e.push(new THREE.Vector2(g,z));break;case THREE.PathActions.BEZIER_CURVE_TO:m=g[4];p=g[5];o=g[0];v=g[1];t=g[2];n=g[3];e.length>0?(j=e[e.length-1],u=j.x,x=j.y):(j=this.actions[f-1].args,u=j[j.length-2],x=j[j.length-1]);for(j=1;j<=b;j++)z=j/b,g=THREE.Shape.Utils.b3(z,u,o,t,m),z=THREE.Shape.Utils.b3(z,x,v,n,p),e.push(new THREE.Vector2(g,z));break;case THREE.PathActions.CSPLINE_THRU:j=this.actions[f-1].args;j=[new THREE.Vector2(j[j.length-2],j[j.length-1])];z=b*g[0].length;j=j.concat(g[0]);g=new THREE.SplineCurve(j);
for(j=1;j<=z;j++)e.push(g.getPointAt(j/z));break;case THREE.PathActions.ARC:j=this.actions[f-1].args;m=g[0];p=g[1];t=g[2];o=g[3];z=g[4];v=!!g[5];n=j[j.length-2];u=j[j.length-1];j.length==0&&(n=u=0);x=z-o;var y=b*2;for(j=1;j<=y;j++)z=j/y,v||(z=1-z),z=o+z*x,g=n+m+t*Math.cos(z),z=u+p+t*Math.sin(z),e.push(new THREE.Vector2(g,z))}c&&e.push(e[0]);return e};
THREE.Path.prototype.getMinAndMax=function(){var b=this.getPoints(),c,e,f,h;c=e=Number.NEGATIVE_INFINITY;f=h=Number.POSITIVE_INFINITY;var g,j,m;j=0;for(m=b.length;j<m;j++){g=b[j];if(g.x>c)c=g.x;else if(g.x<f)f=g.x;if(g.y>e)e=g.y;else if(g.y<e)h=g.y}return{minX:f,minY:h,maxX:c,maxY:e}};THREE.Path.prototype.getPoint=function(b){for(var c=b*this.getLength(),e=this.sums,b=0;b<e.length;){if(e[b]>=c)return c=e[b]-c,b=this.curves[b],c=1-c/b.getLength(),b.getPointAt(c);b++}return null};
THREE.Path.prototype.getLength=function(){var b=[],c=0,e,f=this.curves.length;for(e=0;e<f;e++)c+=this.curves[e].getLength(),b.push(c);this.sums=b;return c};THREE.Path.prototype.createPointsGeometry=function(b){return this.createGeometry(this.getPoints(b,!0))};THREE.Path.prototype.createSpacedPointsGeometry=function(b){return this.createGeometry(this.getSpacedPoints(b,!0))};
THREE.Path.prototype.createGeometry=function(b){for(var c=new THREE.Geometry,e=0;e<b.length;e++)c.vertices.push(new THREE.Vertex(new THREE.Vector3(b[e].x,b[e].y,0)));return c};
THREE.Path.prototype.transform=function(b){b=new THREE.Path;b.moveTo(0,0);b.quadraticCurveTo(100,20,140,80);console.log(b.cacheArcLengths());var c=this.getMinAndMax(),e=this.getPoints(),f,h,g,j,m,p;f=0;for(h=e.length;f<h;f++)g=e[f],j=g.x,m=g.y,p=j/c.maxX,j=b.getPoint(p),m=b.getNormalVector(p).multiplyScalar(m),g.x=j.x+m.x,g.y=j.y+m.y;return e};
THREE.Path.prototype.nltransform=function(b,c,e,f,h,g){var j=this.getPoints(),m,p,t,n,o;m=0;for(p=j.length;m<p;m++)t=j[m],n=t.x,o=t.y,t.x=b*n+c*o+e,t.y=f*o+h*n+g;return j};
THREE.Path.prototype.debug=function(b){var c=this.getMinAndMax();b||(b=document.createElement("canvas"),b.setAttribute("width",c.maxX+100),b.setAttribute("height",c.maxY+100),document.body.appendChild(b));c=b.getContext("2d");c.fillStyle="white";c.fillRect(0,0,b.width,b.height);c.strokeStyle="black";c.beginPath();var e,f,h,b=0;for(e=this.actions.length;b<e;b++)f=this.actions[b],h=f.args,f=f.action,f!=THREE.PathActions.CSPLINE_THRU&&c[f].apply(c,h);c.stroke();c.closePath();c.strokeStyle="red";f=this.getPoints();
b=0;for(e=f.length;b<e;b++)h=f[b],c.beginPath(),c.arc(h.x,h.y,1.5,0,Math.PI*2,!1),c.stroke(),c.closePath()};
THREE.Path.prototype.toShapes=function(){var b,c,e,f,h=[],g=new THREE.Path;b=0;for(c=this.actions.length;b<c;b++)e=this.actions[b],f=e.args,e=e.action,e==THREE.PathActions.MOVE_TO&&g.actions.length!=0&&(h.push(g),g=new THREE.Path),g[e].apply(g,f);g.actions.length!=0&&h.push(g);if(h.length==0)return[];var j,g=[];if(THREE.Shape.Utils.isClockWise(h[0].getPoints())){b=0;for(c=h.length;b<c;b++)f=h[b],THREE.Shape.Utils.isClockWise(f.getPoints())?(j&&g.push(j),j=new THREE.Shape,j.actions=f.actions,j.curves=
f.curves):j.holes.push(f);g.push(j)}else{j=new THREE.Shape;b=0;for(c=h.length;b<c;b++)f=h[b],THREE.Shape.Utils.isClockWise(f.getPoints())?(j.actions=f.actions,j.curves=f.curves,g.push(j),j=new THREE.Shape):j.holes.push(f)}return g};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=new THREE.Path;THREE.Shape.prototype.constructor=THREE.Path;THREE.Shape.prototype.extrude=function(b){return new THREE.ExtrudeGeometry(this,b)};
THREE.Shape.prototype.getPointsHoles=function(){var b,c=this.holes.length,e=[];for(b=0;b<c;b++)e[b]=this.holes[b].getPoints();return e};THREE.Shape.prototype.getSpacedPointsHoles=function(){var b,c=this.holes.length,e=[];for(b=0;b<c;b++)e[b]=this.holes[b].getSpacedPoints();return e};THREE.Shape.prototype.extractAllPoints=function(){return{shape:this.getPoints(),holes:this.getPointsHoles()}};THREE.Shape.prototype.extractAllSpacedPoints=function(){return{shape:this.getSpacedPoints(),holes:this.getSpacedPointsHoles()}};
THREE.Shape.Utils={removeHoles:function(b,c){var e=b.concat(),f=e.concat(),h,g,j,m,p,t,n,o,v,u,x=[];for(p=0;p<c.length;p++){t=c[p];f=f.concat(t);g=Number.POSITIVE_INFINITY;for(h=0;h<t.length;h++){v=t[h];u=[];for(o=0;o<e.length;o++)n=e[o],n=v.distanceTo(n),u.push(n),n<g&&(g=n,j=h,m=o)}h=m-1>=0?m-1:e.length-1;g=j-1>=0?j-1:t.length-1;var z=[t[j],e[m],e[h]];o=THREE.FontUtils.Triangulate.area(z);var y=[t[j],t[g],e[m]];v=THREE.FontUtils.Triangulate.area(y);u=m;n=j;m+=1;j+=-1;m<0&&(m+=e.length);m%=e.length;
j<0&&(j+=t.length);j%=t.length;h=m-1>=0?m-1:e.length-1;g=j-1>=0?j-1:t.length-1;z=[t[j],e[m],e[h]];z=THREE.FontUtils.Triangulate.area(z);y=[t[j],t[g],e[m]];y=THREE.FontUtils.Triangulate.area(y);o+v>z+y&&(m=u,j=n,m<0&&(m+=e.length),m%=e.length,j<0&&(j+=t.length),j%=t.length,h=m-1>=0?m-1:e.length-1,g=j-1>=0?j-1:t.length-1);o=e.slice(0,m);v=e.slice(m);u=t.slice(j);n=t.slice(0,j);g=[t[j],t[g],e[m]];x.push([t[j],e[m],e[h]]);x.push(g);e=o.concat(u).concat(n).concat(v)}return{shape:e,isolatedPts:x,allpoints:f}},
triangulateShape:function(b,c){var e=THREE.Shape.Utils.removeHoles(b,c),f=e.allpoints,h=e.isolatedPts,e=THREE.FontUtils.Triangulate(e.shape,!1),g,j,m,p;for(g=0;g<e.length;g++){p=e[g];for(j=0;j<3;j++)for(m=0;m<f.length;m++)f[m].equals(p[j])&&(p[j]=m)}for(g=0;g<h.length;g++){p=h[g];for(j=0;j<3;j++)for(m=0;m<f.length;m++)f[m].equals(p[j])&&(p[j]=m)}return e.concat(h)},isClockWise:function(b){return THREE.FontUtils.Triangulate.area(b)<0},b2p0:function(b,c){var e=1-b;return e*e*c},b2p1:function(b,c){return 2*
(1-b)*b*c},b2p2:function(b,c){return b*b*c},b2:function(b,c,e,f){return this.b2p0(b,c)+this.b2p1(b,e)+this.b2p2(b,f)},b3p0:function(b,c){var e=1-b;return e*e*e*c},b3p1:function(b,c){var e=1-b;return 3*e*e*b*c},b3p2:function(b,c){return 3*(1-b)*b*b*c},b3p3:function(b,c){return b*b*b*c},b3:function(b,c,e,f,h){return this.b3p0(b,c)+this.b3p1(b,e)+this.b3p2(b,f)+this.b3p3(b,h)}};THREE.TextPath=function(b,c){THREE.Path.call(this);this.parameters=c||{};this.set(b)};
THREE.TextPath.prototype.set=function(b,c){this.text=b;var c=c||this.parameters,e=c.curveSegments!==void 0?c.curveSegments:4,f=c.font!==void 0?c.font:"helvetiker",h=c.weight!==void 0?c.weight:"normal",g=c.style!==void 0?c.style:"normal";THREE.FontUtils.size=c.size!==void 0?c.size:100;THREE.FontUtils.divisions=e;THREE.FontUtils.face=f;THREE.FontUtils.weight=h;THREE.FontUtils.style=g};
THREE.TextPath.prototype.toShapes=function(){for(var b=THREE.FontUtils.drawText(this.text).paths,c=[],e=0,f=b.length;e<f;e++)c=c.concat(b[e].toShapes());return c};
THREE.CubeGeometry=function(b,c,e,f,h,g,j,m,p){function t(b,c,e,j,m,o,p,t){var u,v,x=f||1,z=h||1,G=m/2,aa=o/2,Q=n.vertices.length;if(b=="x"&&c=="y"||b=="y"&&c=="x")u="z";else if(b=="x"&&c=="z"||b=="z"&&c=="x")u="y",z=g||1;else if(b=="z"&&c=="y"||b=="y"&&c=="z")u="x",x=g||1;var S=x+1,T=z+1;m/=x;var k=o/z;for(v=0;v<T;v++)for(o=0;o<S;o++){var L=new THREE.Vector3;L[b]=(o*m-G)*e;L[c]=(v*k-aa)*j;L[u]=p;n.vertices.push(new THREE.Vertex(L))}for(v=0;v<z;v++)for(o=0;o<x;o++)n.faces.push(new THREE.Face4(o+S*
v+Q,o+S*(v+1)+Q,o+1+S*(v+1)+Q,o+1+S*v+Q,null,null,t)),n.faceVertexUvs[0].push([new THREE.UV(o/x,v/z),new THREE.UV(o/x,(v+1)/z),new THREE.UV((o+1)/x,(v+1)/z),new THREE.UV((o+1)/x,v/z)])}THREE.Geometry.call(this);var n=this,o=b/2,v=c/2,u=e/2,m=m?-1:1;if(j!==void 0)if(j instanceof Array)this.materials=j;else{this.materials=[];for(var x=0;x<6;x++)this.materials.push([j])}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(p!=void 0)for(var z in p)this.sides[z]!=void 0&&(this.sides[z]=
p[z]);this.sides.px&&t("z","y",1*m,-1,e,c,-o,this.materials[0]);this.sides.nx&&t("z","y",-1*m,-1,e,c,o,this.materials[1]);this.sides.py&&t("x","z",1*m,1,b,e,v,this.materials[2]);this.sides.ny&&t("x","z",1*m,-1,b,e,-v,this.materials[3]);this.sides.pz&&t("x","y",1*m,-1,b,c,u,this.materials[4]);this.sides.nz&&t("x","y",-1*m,-1,b,c,-u,this.materials[5]);(function(){for(var b=[],c=[],e=0,f=n.vertices.length;e<f;e++){for(var g=n.vertices[e],j=!1,h=0,m=b.length;h<m;h++){var o=b[h];if(g.position.x==o.position.x&&
g.position.y==o.position.y&&g.position.z==o.position.z){c[e]=h;j=!0;break}}if(!j)c[e]=b.length,b.push(new THREE.Vertex(g.position.clone()))}e=0;for(f=n.faces.length;e<f;e++)g=n.faces[e],g.a=c[g.a],g.b=c[g.b],g.c=c[g.c],g.d=c[g.d];n.vertices=b})();this.computeCentroids();this.computeFaceNormals()};THREE.CubeGeometry.prototype=new THREE.Geometry;THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry;
THREE.CylinderGeometry=function(b,c,e,f,h,g){function j(b,c,e){m.vertices.push(new THREE.Vertex(new THREE.Vector3(b,c,e)))}THREE.Geometry.call(this);var m=this,p,t=Math.PI*2,n=f/2;for(p=0;p<b;p++)j(Math.sin(t*p/b)*c,Math.cos(t*p/b)*c,-n);for(p=0;p<b;p++)j(Math.sin(t*p/b)*e,Math.cos(t*p/b)*e,n);for(p=0;p<b;p++)m.faces.push(new THREE.Face4(p,p+b,b+(p+1)%b,(p+1)%b));if(e>0){j(0,0,-n-(g||0));for(p=b;p<b+b/2;p++)m.faces.push(new THREE.Face4(2*b,(2*p-2*b)%b,(2*p-2*b+1)%b,(2*p-2*b+2)%b))}if(c>0){j(0,0,n+
(h||0));for(p=b+b/2;p<2*b;p++)m.faces.push(new THREE.Face4(2*b+1,(2*p-2*b+2)%b+b,(2*p-2*b+1)%b+b,(2*p-2*b)%b+b))}p=0;for(b=this.faces.length;p<b;p++){var c=[],e=this.faces[p],h=this.vertices[e.a],g=this.vertices[e.b],n=this.vertices[e.c],o=this.vertices[e.d];c.push(new THREE.UV(0.5+Math.atan2(h.position.x,h.position.y)/t,0.5+h.position.z/f));c.push(new THREE.UV(0.5+Math.atan2(g.position.x,g.position.y)/t,0.5+g.position.z/f));c.push(new THREE.UV(0.5+Math.atan2(n.position.x,n.position.y)/t,0.5+n.position.z/
f));e instanceof THREE.Face4&&c.push(new THREE.UV(0.5+Math.atan2(o.position.x,o.position.y)/t,0.5+o.position.z/f));this.faceVertexUvs[0].push(c)}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=new THREE.Geometry;THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.ExtrudeGeometry=function(b,c){if(typeof b!="undefined"){THREE.Geometry.call(this);var b=b instanceof Array?b:[b],e,f=b.length,h;for(e=0;e<f;e++)h=b[e],this.addShape(h,c)}};
THREE.ExtrudeGeometry.prototype=new THREE.Geometry;THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;
THREE.ExtrudeGeometry.prototype.addShape=function(b,c){function e(b,c,e){return b.clone().addSelf(c.clone().multiplyScalar(e))}function f(b,c,e){c=Math.atan2(c.y-b.y,c.x-b.x);b=Math.atan2(e.y-b.y,e.x-b.x);c>b&&(b+=Math.PI*2);anglec=(c+b)/2;return(new THREE.Vector2(-Math.cos(anglec),-Math.sin(anglec))).normalize()}function h(b){for(E=b.length;--E>=0;){W=E;X=E-1;X<0&&(X=b.length-1);for(var c=0,c=0;c<v+n*2;c++){var e=S*c,f=S*(c+1),g=$+W+e,e=$+X+e,j=$+X+f,f=$+W+f;g+=K;e+=K;j+=K;f+=K;C.faces.push(new THREE.Face4(g,
e,j,f))}}}function g(b,c,e){C.vertices.push(new THREE.Vertex(new THREE.Vector3(b,c,e)))}function j(b,c,e){b+=K;c+=K;e+=K;C.faces.push(new THREE.Face3(b,c,e))}var m=c.amount!==void 0?c.amount:100,p=c.bevelThickness!==void 0?c.bevelThickness:6,t=c.bevelSize!==void 0?c.bevelSize:p-2,n=c.bevelSegments!==void 0?c.bevelSegments:3,o=c.bevelEnabled!==void 0?c.bevelEnabled:!0;o||(t=p=n=0);var v=c.steps!==void 0?c.steps:1,u=c.path!==void 0?c.path:null,x,z=!1;if(u)x=u.getPoints(),v=x.length,z=!0;var y,w,I,C=
this,K=this.vertices.length,u=b.extractAllPoints(),F=u.shape,u=u.holes,B=!THREE.Shape.Utils.isClockWise(F);if(B){F=F.reverse();w=0;for(I=u.length;w<I;w++)y=u[w],THREE.Shape.Utils.isClockWise(y)&&(u[w]=y.reverse());B=!1}var B=THREE.Shape.Utils.triangulateShape(F,u),O=F;w=0;for(I=u.length;w<I;w++)y=u[w],F=F.concat(y);var E,H,P=new THREE.Vector2;E=0;for(H=O.length;E<H;E++)P.addSelf(O[E]);P.divideScalar(O.length);w=0;for(I=u.length;w<I;w++){P=new THREE.Vector2;y=u[w];E=0;for(H=y.length;E<H;E++)P.addSelf(y[E]);
P.divideScalar(y.length)}var V,G,aa,Q,S=F.length,P=B.length,T=[];E=0;H=O.length;W=H-1;for(X=E+1;E<H;E++,W++,X++)W==H&&(W=0),X==H&&(X=0),T[E]=f(O[E],O[W],O[X]);var k=[],L,ca=T.concat();w=0;for(I=u.length;w<I;w++){y=u[w];L=[];E=0;H=y.length;W=H-1;for(X=E+1;E<H;E++,W++,X++)W==H&&(W=0),X==H&&(X=0),L[E]=f(y[E],y[W],y[X]);k.push(L);ca=ca.concat(L)}for(V=0;V<n;V++){y=V/n;aa=p*(1-y);G=t*Math.sin(y*Math.PI/2);E=0;for(H=O.length;E<H;E++)Q=e(O[E],T[E],G),g(Q.x,Q.y,-aa);w=0;for(I=u.length;w<I;w++){y=u[w];L=k[w];
E=0;for(H=y.length;E<H;E++)Q=e(y[E],L[E],G),g(Q.x,Q.y,-aa)}}G=t;for(E=0;E<S;E++)Q=e(F[E],ca[E],G),z?g(Q.x,Q.y+x[0].y,x[0].x):g(Q.x,Q.y,0);for(y=1;y<=v;y++)for(E=0;E<S;E++)Q=e(F[E],ca[E],G),z?g(Q.x,Q.y+x[y-1].y,x[y-1].x):g(Q.x,Q.y,m/v*y);for(V=n-1;V>=0;V--){y=V/n;aa=p*(1-y);G=t*Math.sin(y*Math.PI/2);E=0;for(H=O.length;E<H;E++)Q=e(O[E],T[E],G),g(Q.x,Q.y,m+aa);w=0;for(I=u.length;w<I;w++){y=u[w];L=k[w];E=0;for(H=y.length;E<H;E++)Q=e(y[E],L[E],G),z?g(Q.x,Q.y+x[v-1].y,x[v-1].x+aa):g(Q.x,Q.y,m+aa)}}if(o){p=
S*0;for(E=0;E<P;E++)m=B[E],j(m[2]+p,m[1]+p,m[0]+p);p=S*(v+n*2);for(E=0;E<P;E++)m=B[E],j(m[0]+p,m[1]+p,m[2]+p)}else{for(E=0;E<P;E++)m=B[E],j(m[2],m[1],m[0]);for(E=0;E<P;E++)m=B[E],j(m[0]+S*v,m[1]+S*v,m[2]+S*v)}var W,X,$=0;h(O);$+=O.length;w=0;for(I=u.length;w<I;w++)y=u[w],h(y),$+=y.length;this.computeCentroids();this.computeFaceNormals()};
THREE.IcosahedronGeometry=function(b){function c(b,c,e){var f=Math.sqrt(b*b+c*c+e*e);return h.vertices.push(new THREE.Vertex(new THREE.Vector3(b/f,c/f,e/f)))-1}function e(b,c,e,f){f.faces.push(new THREE.Face3(b,c,e))}function f(b,e){var f=h.vertices[b].position,g=h.vertices[e].position;return c((f.x+g.x)/2,(f.y+g.y)/2,(f.z+g.z)/2)}var h=this,g=new THREE.Geometry,j;this.subdivisions=b||0;THREE.Geometry.call(this);b=(1+Math.sqrt(5))/2;c(-1,b,0);c(1,b,0);c(-1,-b,0);c(1,-b,0);c(0,-1,b);c(0,1,b);c(0,-1,
-b);c(0,1,-b);c(b,0,-1);c(b,0,1);c(-b,0,-1);c(-b,0,1);e(0,11,5,g);e(0,5,1,g);e(0,1,7,g);e(0,7,10,g);e(0,10,11,g);e(1,5,9,g);e(5,11,4,g);e(11,10,2,g);e(10,7,6,g);e(7,1,8,g);e(3,9,4,g);e(3,4,2,g);e(3,2,6,g);e(3,6,8,g);e(3,8,9,g);e(4,9,5,g);e(2,4,11,g);e(6,2,10,g);e(8,6,7,g);e(9,8,1,g);for(b=0;b<this.subdivisions;b++){j=new THREE.Geometry;for(var m in g.faces){var p=f(g.faces[m].a,g.faces[m].b),t=f(g.faces[m].b,g.faces[m].c),n=f(g.faces[m].c,g.faces[m].a);e(g.faces[m].a,p,n,j);e(g.faces[m].b,t,p,j);
e(g.faces[m].c,n,t,j);e(p,t,n,j)}g.faces=j.faces}h.faces=g.faces;delete g;delete j;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.IcosahedronGeometry.prototype=new THREE.Geometry;THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;
THREE.LatheGeometry=function(b,c,e){THREE.Geometry.call(this);this.steps=c||12;this.angle=e||2*Math.PI;for(var c=this.angle/this.steps,e=[],f=[],h=[],g=[],j=(new THREE.Matrix4).setRotationZ(c),m=0;m<b.length;m++)this.vertices.push(new THREE.Vertex(b[m])),e[m]=b[m].clone(),f[m]=this.vertices.length-1;for(var p=0;p<=this.angle+0.0010;p+=c){for(m=0;m<e.length;m++)p<this.angle?(e[m]=j.multiplyVector3(e[m].clone()),this.vertices.push(new THREE.Vertex(e[m])),h[m]=this.vertices.length-1):h=g;p==0&&(g=f);
for(m=0;m<f.length-1;m++)this.faces.push(new THREE.Face4(h[m],h[m+1],f[m+1],f[m])),this.faceVertexUvs[0].push([new THREE.UV(1-p/this.angle,m/b.length),new THREE.UV(1-p/this.angle,(m+1)/b.length),new THREE.UV(1-(p-c)/this.angle,(m+1)/b.length),new THREE.UV(1-(p-c)/this.angle,m/b.length)]);f=h;h=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=new THREE.Geometry;THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;
THREE.PlaneGeometry=function(b,c,e,f){THREE.Geometry.call(this);var h,g=b/2,j=c/2,e=e||1,f=f||1,m=e+1,p=f+1;b/=e;var t=c/f;for(h=0;h<p;h++)for(c=0;c<m;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*b-g,-(h*t-j),0)));for(h=0;h<f;h++)for(c=0;c<e;c++)this.faces.push(new THREE.Face4(c+m*h,c+m*(h+1),c+1+m*(h+1),c+1+m*h)),this.faceVertexUvs[0].push([new THREE.UV(c/e,h/f),new THREE.UV(c/e,(h+1)/f),new THREE.UV((c+1)/e,(h+1)/f),new THREE.UV((c+1)/e,h/f)]);this.computeCentroids();this.computeFaceNormals()};
THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;
THREE.SphereGeometry=function(b,c,e){THREE.Geometry.call(this);for(var b=b||50,f,h=Math.PI,g=Math.max(3,c||8),j=Math.max(2,e||6),c=[],e=0;e<j+1;e++){f=e/j;var m=b*Math.cos(f*h),p=b*Math.sin(f*h),t=[],n=0;for(f=0;f<g;f++){var o=2*f/g,v=p*Math.sin(o*h),o=p*Math.cos(o*h);(e==0||e==j)&&f>0||(n=this.vertices.push(new THREE.Vertex(new THREE.Vector3(o,m,v)))-1);t.push(n)}c.push(t)}for(var u,x,z,h=c.length,e=0;e<h;e++)if(g=c[e].length,e>0)for(f=0;f<g;f++){t=f==g-1;j=c[e][t?0:f+1];m=c[e][t?g-1:f];p=c[e-1][t?
g-1:f];t=c[e-1][t?0:f+1];v=e/(h-1);u=(e-1)/(h-1);x=(f+1)/g;var o=f/g,n=new THREE.UV(1-x,v),v=new THREE.UV(1-o,v),o=new THREE.UV(1-o,u),y=new THREE.UV(1-x,u);e<c.length-1&&(u=this.vertices[j].position.clone(),x=this.vertices[m].position.clone(),z=this.vertices[p].position.clone(),u.normalize(),x.normalize(),z.normalize(),this.faces.push(new THREE.Face3(j,m,p,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z)])),this.faceVertexUvs[0].push([n,v,o]));e>1&&(u=
this.vertices[j].position.clone(),x=this.vertices[p].position.clone(),z=this.vertices[t].position.clone(),u.normalize(),x.normalize(),z.normalize(),this.faces.push(new THREE.Face3(j,p,t,[new THREE.Vector3(u.x,u.y,u.z),new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z)])),this.faceVertexUvs[0].push([n,o,y]))}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.boundingSphere={radius:b}};THREE.SphereGeometry.prototype=new THREE.Geometry;
THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.TextGeometry=function(b,c){var e=(new THREE.TextPath(b,c)).toShapes();c.amount=c.height!==void 0?c.height:50;if(c.bevelThickness===void 0)c.bevelThickness=10;if(c.bevelSize===void 0)c.bevelSize=8;if(c.bevelEnabled===void 0)c.bevelEnabled=!1;THREE.ExtrudeGeometry.call(this,e,c)};THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry;THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},getTextShapes:function(b,c){return(new TextPath(b,c)).toShapes()},loadFace:function(b){var c=b.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][b.cssFontWeight]=this.faces[c][b.cssFontWeight]||{};this.faces[c][b.cssFontWeight][b.cssFontStyle]=b;return this.faces[c][b.cssFontWeight][b.cssFontStyle]=b},drawText:function(b){for(var c=
this.getFace(),e=this.size/c.resolution,f=0,h=String(b).split(""),g=h.length,j=[],b=0;b<g;b++){var m=new THREE.Path,m=this.extractGlyphPoints(h[b],c,e,f,m);f+=m.offset;j.push(m.path)}return{paths:j,offset:f/2}},extractGlyphPoints:function(b,c,e,f,h){var g=[],j,m,p,t,n,o,v,u,x,z,y=c.glyphs[b]||c.glyphs[ctxt.options.fallbackCharacter];if(y){if(y.o){c=y._cachedOutline||(y._cachedOutline=y.o.split(" "));p=c.length;for(b=0;b<p;)switch(m=c[b++],m){case "m":m=c[b++]*e+f;t=c[b++]*e;g.push(new THREE.Vector2(m,
t));h.moveTo(m,t);break;case "l":m=c[b++]*e+f;t=c[b++]*e;g.push(new THREE.Vector2(m,t));h.lineTo(m,t);break;case "q":m=c[b++]*e+f;t=c[b++]*e;v=c[b++]*e+f;u=c[b++]*e;h.quadraticCurveTo(v,u,m,t);if(j=g[g.length-1]){n=j.x;o=j.y;j=1;for(divisions=this.divisions;j<=divisions;j++){var w=j/divisions,I=THREE.Shape.Utils.b2(w,n,v,m),w=THREE.Shape.Utils.b2(w,o,u,t);g.push(new THREE.Vector2(I,w))}}break;case "b":if(m=c[b++]*e+f,t=c[b++]*e,v=c[b++]*e+f,u=c[b++]*-e,x=c[b++]*e+f,z=c[b++]*-e,h.bezierCurveTo(m,t,
v,u,x,z),j=g[g.length-1]){n=j.x;o=j.y;j=1;for(divisions=this.divisions;j<=divisions;j++)w=j/divisions,I=THREE.Shape.Utils.b3(w,n,v,x,m),w=THREE.Shape.Utils.b3(w,o,u,z,t),g.push(new THREE.Vector2(I,w))}}}return{offset:y.ha*e,points:g,path:h}}}};
(function(b){var c=function(b){for(var c=b.length,h=0,g=c-1,j=0;j<c;g=j++)h+=b[g].x*b[j].y-b[j].x*b[g].y;return h*0.5};b.Triangulate=function(b,f){var h=b.length;if(h<3)return null;var g=[],j=[],m=[],p,t,n;if(c(b)>0)for(t=0;t<h;t++)j[t]=t;else for(t=0;t<h;t++)j[t]=h-1-t;var o=2*h;for(t=h-1;h>2;){if(o--<=0){console.log("Warning, unable to triangulate polygon!");if(f)return m;return g}p=t;h<=p&&(p=0);t=p+1;h<=t&&(t=0);n=t+1;h<=n&&(n=0);var v;a:{v=b;var u=p,x=t,z=n,y=h,w=j,I=void 0,C=void 0,K=void 0,
F=void 0,B=void 0,O=void 0,E=void 0,H=void 0,P=void 0,C=v[w[u]].x,K=v[w[u]].y,F=v[w[x]].x,B=v[w[x]].y,O=v[w[z]].x,E=v[w[z]].y;if(1.0E-10>(F-C)*(E-K)-(B-K)*(O-C))v=!1;else{for(I=0;I<y;I++)if(!(I==u||I==x||I==z)){var H=v[w[I]].x,P=v[w[I]].y,V=void 0,G=void 0,aa=void 0,Q=void 0,S=void 0,T=void 0,k=void 0,L=void 0,ca=void 0,W=void 0,X=void 0,$=void 0,V=aa=S=void 0,V=O-F,G=E-B,aa=C-O,Q=K-E,S=F-C,T=B-K,k=H-C,L=P-K,ca=H-F,W=P-B,X=H-O,$=P-E,V=V*W-G*ca,S=S*L-T*k,aa=aa*$-Q*X;if(V>=0&&aa>=0&&S>=0){v=!1;break a}}v=
!0}}if(v){g.push([b[j[p]],b[j[t]],b[j[n]]]);m.push([j[p],j[t],j[n]]);p=t;for(n=t+1;n<h;p++,n++)j[p]=j[n];h--;o=2*h}}if(f)return m;return g};b.Triangulate.area=c;return b})(THREE.FontUtils);window._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};
THREE.TorusGeometry=function(b,c,e,f){THREE.Geometry.call(this);this.radius=b||100;this.tube=c||40;this.segmentsR=e||8;this.segmentsT=f||6;b=[];for(c=0;c<=this.segmentsR;++c)for(e=0;e<=this.segmentsT;++e){var f=e/this.segmentsT*2*Math.PI,h=c/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(h))*Math.cos(f),(this.radius+this.tube*Math.cos(h))*Math.sin(f),this.tube*Math.sin(h))));b.push([e/this.segmentsT,1-c/this.segmentsR])}for(c=1;c<=this.segmentsR;++c)for(e=
1;e<=this.segmentsT;++e){var f=(this.segmentsT+1)*c+e,h=(this.segmentsT+1)*c+e-1,g=(this.segmentsT+1)*(c-1)+e-1,j=(this.segmentsT+1)*(c-1)+e;this.faces.push(new THREE.Face4(f,h,g,j));this.faceVertexUvs[0].push([new THREE.UV(b[f][0],b[f][1]),new THREE.UV(b[h][0],b[h][1]),new THREE.UV(b[g][0],b[g][1]),new THREE.UV(b[j][0],b[j][1])])}delete b;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusGeometry.prototype=new THREE.Geometry;
THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;
THREE.TorusKnotGeometry=function(b,c,e,f,h,g,j){function m(b,c,e,f,g,j){c=e/f*b;e=Math.cos(c);return new THREE.Vector3(g*(2+e)*0.5*Math.cos(b),g*(2+e)*Math.sin(b)*0.5,j*g*Math.sin(c)*0.5)}THREE.Geometry.call(this);this.radius=b||200;this.tube=c||40;this.segmentsR=e||64;this.segmentsT=f||8;this.p=h||2;this.q=g||3;this.heightScale=j||1;this.grid=Array(this.segmentsR);e=new THREE.Vector3;f=new THREE.Vector3;g=new THREE.Vector3;for(b=0;b<this.segmentsR;++b){this.grid[b]=Array(this.segmentsT);for(c=0;c<
this.segmentsT;++c){var p=b/this.segmentsR*2*this.p*Math.PI,j=c/this.segmentsT*2*Math.PI,h=m(p,j,this.q,this.p,this.radius,this.heightScale),p=m(p+0.01,j,this.q,this.p,this.radius,this.heightScale);e.x=p.x-h.x;e.y=p.y-h.y;e.z=p.z-h.z;f.x=p.x+h.x;f.y=p.y+h.y;f.z=p.z+h.z;g.cross(e,f);f.cross(g,e);g.normalize();f.normalize();p=-this.tube*Math.cos(j);j=this.tube*Math.sin(j);h.x+=p*f.x+j*g.x;h.y+=p*f.y+j*g.y;h.z+=p*f.z+j*g.z;this.grid[b][c]=this.vertices.push(new THREE.Vertex(new THREE.Vector3(h.x,h.y,
h.z)))-1}}for(b=0;b<this.segmentsR;++b)for(c=0;c<this.segmentsT;++c){var f=(b+1)%this.segmentsR,g=(c+1)%this.segmentsT,h=this.grid[b][c],e=this.grid[f][c],f=this.grid[f][g],g=this.grid[b][g],j=new THREE.UV(b/this.segmentsR,c/this.segmentsT),p=new THREE.UV((b+1)/this.segmentsR,c/this.segmentsT),t=new THREE.UV((b+1)/this.segmentsR,(c+1)/this.segmentsT),n=new THREE.UV(b/this.segmentsR,(c+1)/this.segmentsT);this.faces.push(new THREE.Face4(h,e,f,g));this.faceVertexUvs[0].push([j,p,t,n])}this.computeCentroids();
this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=new THREE.Geometry;THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.Loader=function(b){this.statusDomElement=(this.showStatus=b)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={addStatusElement:function(){var b=document.createElement("div");b.style.position="absolute";b.style.right="0px";b.style.top="0px";b.style.fontSize="0.8em";b.style.textAlign="left";b.style.background="rgba(0,0,0,0.25)";b.style.color="#fff";b.style.width="120px";b.style.padding="0.5em 0.5em 0.5em 0.5em";b.style.zIndex=1E3;b.innerHTML="Loading ...";return b},updateProgress:function(b){var c="Loaded ";c+=b.total?(100*b.loaded/b.total).toFixed(0)+"%":(b.loaded/1E3).toFixed(2)+" KB";
this.statusDomElement.innerHTML=c},extractUrlbase:function(b){b=b.split("/");b.pop();return b.join("/")},init_materials:function(b,c,e){b.materials=[];for(var f=0;f<c.length;++f)b.materials[f]=[THREE.Loader.prototype.createMaterial(c[f],e)]},hasNormals:function(b){var c,e,f=b.materials.length;for(e=0;e<f;e++)if(c=b.materials[e][0],c instanceof THREE.MeshShaderMaterial)return!0;return!1},createMaterial:function(b,c){function e(b){b=Math.log(b)/Math.LN2;return Math.floor(b)==b}function f(b,c){var f=
new Image;f.onload=function(){if(!e(this.width)||!e(this.height)){var c=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),f=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));b.image.width=c;b.image.height=f;b.image.getContext("2d").drawImage(this,0,0,c,f)}else b.image=this;b.needsUpdate=!0};f.src=c}function h(b,e,g,j,h,m){var n=document.createElement("canvas");b[e]=new THREE.Texture(n);b[e].sourceFile=g;if(j){b[e].repeat.set(j[0],j[1]);if(j[0]!=1)b[e].wrapS=THREE.RepeatWrapping;if(j[1]!=
1)b[e].wrapT=THREE.RepeatWrapping}h&&b[e].offset.set(h[0],h[1]);if(m){j={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(j[m[0]]!==void 0)b[e].wrapS=j[m[0]];if(j[m[1]]!==void 0)b[e].wrapT=j[m[1]]}f(b[e],c+"/"+g)}function g(b){return(b[0]*255<<16)+(b[1]*255<<8)+b[2]*255}var j,m,p;m="MeshLambertMaterial";j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:b.wireframe};b.shading&&(b.shading=="Phong"?m="MeshPhongMaterial":b.shading=="Basic"&&(m="MeshBasicMaterial"));
if(b.blending)if(b.blending=="Additive")j.blending=THREE.AdditiveBlending;else if(b.blending=="Subtractive")j.blending=THREE.SubtractiveBlending;else if(b.blending=="Multiply")j.blending=THREE.MultiplyBlending;if(b.transparent!==void 0||b.opacity<1)j.transparent=b.transparent;if(b.depthTest!==void 0)j.depthTest=b.depthTest;if(b.vertexColors!==void 0)if(b.vertexColors=="face")j.vertexColors=THREE.FaceColors;else if(b.vertexColors)j.vertexColors=THREE.VertexColors;if(b.colorDiffuse)j.color=g(b.colorDiffuse);
else if(b.DbgColor)j.color=b.DbgColor;if(b.colorSpecular)j.specular=g(b.colorSpecular);if(b.colorAmbient)j.ambient=g(b.colorAmbient);if(b.transparency)j.opacity=b.transparency;if(b.specularCoef)j.shininess=b.specularCoef;b.mapDiffuse&&c&&h(j,"map",b.mapDiffuse,b.mapDiffuseRepeat,b.mapDiffuseOffset,b.mapDiffuseWrap);b.mapLight&&c&&h(j,"lightMap",b.mapLight,b.mapLightRepeat,b.mapLightOffset,b.mapLightWrap);b.mapNormal&&c&&h(j,"normalMap",b.mapNormal,b.mapNormalRepeat,b.mapNormalOffset,b.mapNormalWrap);
b.mapSpecular&&c&&h(j,"specularMap",b.mapSpecular,b.mapSpecularRepeat,b.mapSpecularOffset,b.mapSpecularWrap);if(b.mapNormal){var t=THREE.ShaderUtils.lib.normal,n=THREE.UniformsUtils.clone(t.uniforms),o=j.color;m=j.specular;p=j.ambient;var v=j.shininess;n.tNormal.texture=j.normalMap;if(b.mapNormalFactor)n.uNormalScale.value=b.mapNormalFactor;if(j.map)n.tDiffuse.texture=j.map,n.enableDiffuse.value=!0;if(j.specularMap)n.tSpecular.texture=j.specularMap,n.enableSpecular.value=!0;if(j.lightMap)n.tAO.texture=
j.lightMap,n.enableAO.value=!0;n.uDiffuseColor.value.setHex(o);n.uSpecularColor.value.setHex(m);n.uAmbientColor.value.setHex(p);n.uShininess.value=v;if(j.opacity)n.uOpacity.value=j.opacity;j=new THREE.MeshShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:n,lights:!0,fog:!0})}else j=new THREE[m](j);return j}};THREE.JSONLoader=function(b){THREE.Loader.call(this,b)};THREE.JSONLoader.prototype=new THREE.Loader;THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;
THREE.JSONLoader.prototype.supr=THREE.Loader.prototype;THREE.JSONLoader.prototype.load=function(b){var c=this,e=b.model,f=b.callback,h=b.texture_path?b.texture_path:this.extractUrlbase(e),b=new Worker(e);b.onmessage=function(b){c.createModel(b.data,f,h);c.onLoadComplete()};this.onLoadStart();b.postMessage((new Date).getTime())};
THREE.JSONLoader.prototype.createModel=function(b,c,e){var f=new THREE.Geometry,h=b.scale!==void 0?1/b.scale:1;this.init_materials(f,b.materials,e);(function(c){if(b.version===void 0||b.version!=2)console.error("Deprecated file format.");else{var e,h,p,t,n,o,v,u,x,z,y,w,I,C,K=b.faces;o=b.vertices;var F=b.normals,B=b.colors,O=0;for(e=0;e<b.uvs.length;e++)b.uvs[e].length&&O++;for(e=0;e<O;e++)f.faceUvs[e]=[],f.faceVertexUvs[e]=[];t=0;for(n=o.length;t<n;)v=new THREE.Vertex,v.position.x=o[t++]*c,v.position.y=
o[t++]*c,v.position.z=o[t++]*c,f.vertices.push(v);t=0;for(n=K.length;t<n;){c=K[t++];o=c&1;p=c&2;e=c&4;h=c&8;u=c&16;v=c&32;z=c&64;c&=128;o?(y=new THREE.Face4,y.a=K[t++],y.b=K[t++],y.c=K[t++],y.d=K[t++],o=4):(y=new THREE.Face3,y.a=K[t++],y.b=K[t++],y.c=K[t++],o=3);if(p)p=K[t++],y.materials=f.materials[p];p=f.faces.length;if(e)for(e=0;e<O;e++)w=b.uvs[e],x=K[t++],C=w[x*2],x=w[x*2+1],f.faceUvs[e][p]=new THREE.UV(C,x);if(h)for(e=0;e<O;e++){w=b.uvs[e];I=[];for(h=0;h<o;h++)x=K[t++],C=w[x*2],x=w[x*2+1],I[h]=
new THREE.UV(C,x);f.faceVertexUvs[e][p]=I}if(u)u=K[t++]*3,h=new THREE.Vector3,h.x=F[u++],h.y=F[u++],h.z=F[u],y.normal=h;if(v)for(e=0;e<o;e++)u=K[t++]*3,h=new THREE.Vector3,h.x=F[u++],h.y=F[u++],h.z=F[u],y.vertexNormals.push(h);if(z)v=K[t++],v=new THREE.Color(B[v]),y.color=v;if(c)for(e=0;e<o;e++)v=K[t++],v=new THREE.Color(B[v]),y.vertexColors.push(v);f.faces.push(y)}}})(h);(function(){var c,e,h,p;if(b.skinWeights){c=0;for(e=b.skinWeights.length;c<e;c+=2)h=b.skinWeights[c],p=b.skinWeights[c+1],f.skinWeights.push(new THREE.Vector4(h,
p,0,0))}if(b.skinIndices){c=0;for(e=b.skinIndices.length;c<e;c+=2)h=b.skinIndices[c],p=b.skinIndices[c+1],f.skinIndices.push(new THREE.Vector4(h,p,0,0))}f.bones=b.bones;f.animation=b.animation})();(function(c){if(b.morphTargets!==void 0){var e,h,p,t,n,o,v,u,x;e=0;for(h=b.morphTargets.length;e<h;e++){f.morphTargets[e]={};f.morphTargets[e].name=b.morphTargets[e].name;f.morphTargets[e].vertices=[];u=f.morphTargets[e].vertices;x=b.morphTargets[e].vertices;p=0;for(t=x.length;p<t;p+=3)n=x[p]*c,o=x[p+1]*
c,v=x[p+2]*c,u.push(new THREE.Vertex(new THREE.Vector3(n,o,v)))}}if(b.morphColors!==void 0){e=0;for(h=b.morphColors.length;e<h;e++){f.morphColors[e]={};f.morphColors[e].name=b.morphColors[e].name;f.morphColors[e].colors=[];t=f.morphColors[e].colors;n=b.morphColors[e].colors;c=0;for(p=n.length;c<p;c+=3)o=new THREE.Color(16755200),o.setRGB(n[c],n[c+1],n[c+2]),t.push(o)}}})(h);(function(){if(b.edges!==void 0){var c,e,h;for(c=0;c<b.edges.length;c+=2)e=b.edges[c],h=b.edges[c+1],f.edges.push(new THREE.Edge(f.vertices[e],
f.vertices[h],e,h))}})();f.computeCentroids();f.computeFaceNormals();this.hasNormals(f)&&f.computeTangents();c(f)};THREE.BinaryLoader=function(b){THREE.Loader.call(this,b)};THREE.BinaryLoader.prototype=new THREE.Loader;THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader;THREE.BinaryLoader.prototype.supr=THREE.Loader.prototype;
THREE.BinaryLoader.prototype={load:function(b){var c=b.model,e=b.callback,f=b.texture_path?b.texture_path:THREE.Loader.prototype.extractUrlbase(c),h=b.bin_path?b.bin_path:THREE.Loader.prototype.extractUrlbase(c),b=(new Date).getTime(),c=new Worker(c),g=this.showProgress?THREE.Loader.prototype.updateProgress:null;c.onmessage=function(b){THREE.BinaryLoader.prototype.loadAjaxBuffers(b.data.buffers,b.data.materials,e,h,f,g)};c.onerror=function(b){alert("worker.onerror: "+b.message+"\n"+b.data);b.preventDefault()};
c.postMessage(b)},loadAjaxBuffers:function(b,c,e,f,h,g){var j=new XMLHttpRequest,m=f+"/"+b,p=0;j.onreadystatechange=function(){j.readyState==4?j.status==200||j.status==0?THREE.BinaryLoader.prototype.createBinModel(j.responseText,e,h,c):alert("Couldn't load ["+m+"] ["+j.status+"]"):j.readyState==3?g&&(p==0&&(p=j.getResponseHeader("Content-Length")),g({total:p,loaded:j.responseText.length})):j.readyState==2&&(p=j.getResponseHeader("Content-Length"))};j.open("GET",m,!0);j.overrideMimeType("text/plain; charset=x-user-defined");
j.setRequestHeader("Content-Type","text/plain");j.send(null)},createBinModel:function(b,c,e,f){var h=function(c){function e(b,c){var f=n(b,c),g=n(b,c+1),h=n(b,c+2),j=n(b,c+3),k=(j<<1&255|h>>7)-127;f|=(h&127)<<16|g<<8;if(f==0&&k==-127)return 0;return(1-2*(j>>7))*(1+f*Math.pow(2,-23))*Math.pow(2,k)}function h(b,c){var e=n(b,c),f=n(b,c+1),g=n(b,c+2);return(n(b,c+3)<<24)+(g<<16)+(f<<8)+e}function p(b,c){var e=n(b,c);return(n(b,c+1)<<8)+e}function t(b,c){var e=n(b,c);return e>127?e-256:e}function n(b,
c){return b.charCodeAt(c)&255}function o(c){var e,f,g;e=h(b,c);f=h(b,c+B);g=h(b,c+O);c=p(b,c+E);THREE.BinaryLoader.prototype.f3(w,e,f,g,c)}function v(c){var e,f,g,j,k,n;e=h(b,c);f=h(b,c+B);g=h(b,c+O);j=p(b,c+E);k=h(b,c+H);n=h(b,c+P);c=h(b,c+V);THREE.BinaryLoader.prototype.f3n(w,K,e,f,g,j,k,n,c)}function u(c){var e,f,g,j;e=h(b,c);f=h(b,c+G);g=h(b,c+aa);j=h(b,c+Q);c=p(b,c+S);THREE.BinaryLoader.prototype.f4(w,e,f,g,j,c)}function x(c){var e,f,g,j,n,o,t,u;e=h(b,c);f=h(b,c+G);g=h(b,c+aa);j=h(b,c+Q);n=p(b,
c+S);o=h(b,c+T);t=h(b,c+k);u=h(b,c+L);c=h(b,c+ca);THREE.BinaryLoader.prototype.f4n(w,K,e,f,g,j,n,o,t,u,c)}function z(c){var e,f;e=h(b,c);f=h(b,c+W);c=h(b,c+X);THREE.BinaryLoader.prototype.uv3(w.faceVertexUvs[0],F[e*2],F[e*2+1],F[f*2],F[f*2+1],F[c*2],F[c*2+1])}function y(c){var e,f,g;e=h(b,c);f=h(b,c+$);g=h(b,c+da);c=h(b,c+ea);THREE.BinaryLoader.prototype.uv4(w.faceVertexUvs[0],F[e*2],F[e*2+1],F[f*2],F[f*2+1],F[g*2],F[g*2+1],F[c*2],F[c*2+1])}var w=this,I=0,C,K=[],F=[],B,O,E,H,P,V,G,aa,Q,S,T,k,L,ca,
W,X,$,da,ea,fa,J,ia,la,ja,oa;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(w,f,c);C={signature:b.substr(I,8),header_bytes:n(b,I+8),vertex_coordinate_bytes:n(b,I+9),normal_coordinate_bytes:n(b,I+10),uv_coordinate_bytes:n(b,I+11),vertex_index_bytes:n(b,I+12),normal_index_bytes:n(b,I+13),uv_index_bytes:n(b,I+14),material_index_bytes:n(b,I+15),nvertices:h(b,I+16),nnormals:h(b,I+16+4),nuvs:h(b,I+16+8),ntri_flat:h(b,I+16+12),ntri_smooth:h(b,I+16+16),ntri_flat_uv:h(b,I+16+20),ntri_smooth_uv:h(b,
I+16+24),nquad_flat:h(b,I+16+28),nquad_smooth:h(b,I+16+32),nquad_flat_uv:h(b,I+16+36),nquad_smooth_uv:h(b,I+16+40)};I+=C.header_bytes;B=C.vertex_index_bytes;O=C.vertex_index_bytes*2;E=C.vertex_index_bytes*3;H=C.vertex_index_bytes*3+C.material_index_bytes;P=C.vertex_index_bytes*3+C.material_index_bytes+C.normal_index_bytes;V=C.vertex_index_bytes*3+C.material_index_bytes+C.normal_index_bytes*2;G=C.vertex_index_bytes;aa=C.vertex_index_bytes*2;Q=C.vertex_index_bytes*3;S=C.vertex_index_bytes*4;T=C.vertex_index_bytes*
4+C.material_index_bytes;k=C.vertex_index_bytes*4+C.material_index_bytes+C.normal_index_bytes;L=C.vertex_index_bytes*4+C.material_index_bytes+C.normal_index_bytes*2;ca=C.vertex_index_bytes*4+C.material_index_bytes+C.normal_index_bytes*3;W=C.uv_index_bytes;X=C.uv_index_bytes*2;$=C.uv_index_bytes;da=C.uv_index_bytes*2;ea=C.uv_index_bytes*3;c=C.vertex_index_bytes*3+C.material_index_bytes;oa=C.vertex_index_bytes*4+C.material_index_bytes;fa=C.ntri_flat*c;J=C.ntri_smooth*(c+C.normal_index_bytes*3);ia=C.ntri_flat_uv*
(c+C.uv_index_bytes*3);la=C.ntri_smooth_uv*(c+C.normal_index_bytes*3+C.uv_index_bytes*3);ja=C.nquad_flat*oa;c=C.nquad_smooth*(oa+C.normal_index_bytes*4);oa=C.nquad_flat_uv*(oa+C.uv_index_bytes*4);I+=function(c){for(var f,g,h,k=C.vertex_coordinate_bytes*3,m=c+C.nvertices*k;c<m;c+=k)f=e(b,c),g=e(b,c+C.vertex_coordinate_bytes),h=e(b,c+C.vertex_coordinate_bytes*2),THREE.BinaryLoader.prototype.v(w,f,g,h);return C.nvertices*k}(I);I+=function(c){for(var e,f,g,h=C.normal_coordinate_bytes*3,j=c+C.nnormals*
h;c<j;c+=h)e=t(b,c),f=t(b,c+C.normal_coordinate_bytes),g=t(b,c+C.normal_coordinate_bytes*2),K.push(e/127,f/127,g/127);return C.nnormals*h}(I);I+=function(c){for(var f,g,h=C.uv_coordinate_bytes*2,k=c+C.nuvs*h;c<k;c+=h)f=e(b,c),g=e(b,c+C.uv_coordinate_bytes),F.push(f,g);return C.nuvs*h}(I);fa=I+fa;J=fa+J;ia=J+ia;la=ia+la;ja=la+ja;c=ja+c;oa=c+oa;(function(b){var c,e=C.vertex_index_bytes*3+C.material_index_bytes,f=e+C.uv_index_bytes*3,g=b+C.ntri_flat_uv*f;for(c=b;c<g;c+=f)o(c),z(c+e);return g-b})(J);
(function(b){var c,e=C.vertex_index_bytes*3+C.material_index_bytes+C.normal_index_bytes*3,f=e+C.uv_index_bytes*3,g=b+C.ntri_smooth_uv*f;for(c=b;c<g;c+=f)v(c),z(c+e);return g-b})(ia);(function(b){var c,e=C.vertex_index_bytes*4+C.material_index_bytes,f=e+C.uv_index_bytes*4,g=b+C.nquad_flat_uv*f;for(c=b;c<g;c+=f)u(c),y(c+e);return g-b})(c);(function(b){var c,e=C.vertex_index_bytes*4+C.material_index_bytes+C.normal_index_bytes*4,f=e+C.uv_index_bytes*4,g=b+C.nquad_smooth_uv*f;for(c=b;c<g;c+=f)x(c),y(c+
e);return g-b})(oa);(function(b){var c,e=C.vertex_index_bytes*3+C.material_index_bytes,f=b+C.ntri_flat*e;for(c=b;c<f;c+=e)o(c);return f-b})(I);(function(b){var c,e=C.vertex_index_bytes*3+C.material_index_bytes+C.normal_index_bytes*3,f=b+C.ntri_smooth*e;for(c=b;c<f;c+=e)v(c);return f-b})(fa);(function(b){var c,e=C.vertex_index_bytes*4+C.material_index_bytes,f=b+C.nquad_flat*e;for(c=b;c<f;c+=e)u(c);return f-b})(la);(function(b){var c,e=C.vertex_index_bytes*4+C.material_index_bytes+C.normal_index_bytes*
4,f=b+C.nquad_smooth*e;for(c=b;c<f;c+=e)x(c);return f-b})(ja);this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};h.prototype=new THREE.Geometry;h.prototype.constructor=h;c(new h(e))},v:function(b,c,e,f){b.vertices.push(new THREE.Vertex(new THREE.Vector3(c,e,f)))},f3:function(b,c,e,f,h){b.faces.push(new THREE.Face3(c,e,f,null,null,b.materials[h]))},f4:function(b,c,e,f,h,g){b.faces.push(new THREE.Face4(c,e,f,h,null,null,b.materials[g]))},
f3n:function(b,c,e,f,h,g,j,m,p){var g=b.materials[g],t=c[m*3],n=c[m*3+1],m=c[m*3+2],o=c[p*3],v=c[p*3+1],p=c[p*3+2];b.faces.push(new THREE.Face3(e,f,h,[new THREE.Vector3(c[j*3],c[j*3+1],c[j*3+2]),new THREE.Vector3(t,n,m),new THREE.Vector3(o,v,p)],null,g))},f4n:function(b,c,e,f,h,g,j,m,p,t,n){var j=b.materials[j],o=c[p*3],v=c[p*3+1],p=c[p*3+2],u=c[t*3],x=c[t*3+1],t=c[t*3+2],z=c[n*3],y=c[n*3+1],n=c[n*3+2];b.faces.push(new THREE.Face4(e,f,h,g,[new THREE.Vector3(c[m*3],c[m*3+1],c[m*3+2]),new THREE.Vector3(o,
v,p),new THREE.Vector3(u,x,t),new THREE.Vector3(z,y,n)],null,j))},uv3:function(b,c,e,f,h,g,j){var m=[];m.push(new THREE.UV(c,e));m.push(new THREE.UV(f,h));m.push(new THREE.UV(g,j));b.push(m)},uv4:function(b,c,e,f,h,g,j,m,p){var t=[];t.push(new THREE.UV(c,e));t.push(new THREE.UV(f,h));t.push(new THREE.UV(g,j));t.push(new THREE.UV(m,p));b.push(t)}};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){}};
THREE.SceneLoader.prototype={load:function(b,c){var e=this,f=new Worker(b);f.postMessage(0);var h=THREE.Loader.prototype.extractUrlbase(b);f.onmessage=function(b){function f(b,c){return c=="relativeToHTML"?b:h+"/"+b}function m(){for(u in G.objects)if(!L.objects[u])if(I=G.objects[u],I.geometry!==void 0){if(B=L.geometries[I.geometry]){var b=!1;P=[];for(W=0;W<I.materials.length;W++)P[W]=L.materials[I.materials[W]],b=P[W]instanceof THREE.MeshShaderMaterial;b&&B.computeTangents();C=I.position;r=I.rotation;
q=I.quaternion;s=I.scale;q=0;P.length==0&&(P[0]=new THREE.MeshFaceMaterial);P.length>1&&(P=[new THREE.MeshFaceMaterial]);object=new THREE.Mesh(B,P);object.name=u;object.position.set(C[0],C[1],C[2]);q?(object.quaternion.set(q[0],q[1],q[2],q[3]),object.useQuaternion=!0):object.rotation.set(r[0],r[1],r[2]);object.scale.set(s[0],s[1],s[2]);object.visible=I.visible;L.scene.addObject(object);L.objects[u]=object;I.meshCollider&&(b=THREE.CollisionUtils.MeshColliderWBox(object),L.scene.collisions.colliders.push(b));
if(I.castsShadow)b=new THREE.ShadowVolume(B),L.scene.addChild(b),b.position=object.position,b.rotation=object.rotation,b.scale=object.scale;I.trigger&&I.trigger.toLowerCase()!="none"&&(b={type:I.trigger,object:I},L.triggers[object.name]=b)}}else C=I.position,r=I.rotation,q=I.quaternion,s=I.scale,q=0,object=new THREE.Object3D,object.name=u,object.position.set(C[0],C[1],C[2]),q?(object.quaternion.set(q[0],q[1],q[2],q[3]),object.useQuaternion=!0):object.rotation.set(r[0],r[1],r[2]),object.scale.set(s[0],
s[1],s[2]),object.visible=I.visible!==void 0?I.visible:!1,L.scene.addObject(object),L.objects[u]=object,L.empties[u]=object,I.trigger&&I.trigger.toLowerCase()!="none"&&(b={type:I.trigger,object:I},L.triggers[object.name]=b)}function p(b){return function(c){L.geometries[b]=c;m();Q-=1;e.onLoadComplete();n()}}function t(b){return function(c){L.geometries[b]=c}}function n(){e.callbackProgress({totalModels:T,totalTextures:k,loadedModels:T-Q,loadedTextures:k-S},L);e.onLoadProgress();Q==0&&S==0&&c(L)}var o,
v,u,x,z,y,w,I,C,K,F,B,O,E,H,P,V,G,aa,Q,S,T,k,L;G=b.data;H=new THREE.BinaryLoader;aa=new THREE.JSONLoader;S=Q=0;L={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},triggers:{},empties:{}};b=!1;for(u in G.objects)if(I=G.objects[u],I.meshCollider){b=!0;break}if(b)L.scene.collisions=new THREE.CollisionSystem;if(G.transform){b=G.transform.position;K=G.transform.rotation;var ca=G.transform.scale;b&&L.scene.position.set(b[0],b[1],b[2]);K&&L.scene.rotation.set(K[0],
K[1],K[2]);ca&&L.scene.scale.set(ca[0],ca[1],ca[2]);(b||K||ca)&&L.scene.updateMatrix()}b=function(){S-=1;n();e.onLoadComplete()};for(z in G.cameras){K=G.cameras[z];if(K.type=="perspective")O=new THREE.Camera(K.fov,K.aspect,K.near,K.far);else if(K.type=="ortho")O=new THREE.Camera,O.projectionMatrix=THREE.Matrix4.makeOrtho(K.left,K.right,K.top,K.bottom,K.near,K.far);C=K.position;K=K.target;O.position.set(C[0],C[1],C[2]);O.target.position.set(K[0],K[1],K[2]);L.cameras[z]=O}for(x in G.lights)z=G.lights[x],
O=z.color!==void 0?z.color:16777215,K=z.intensity!==void 0?z.intensity:1,z.type=="directional"?(C=z.direction,V=new THREE.DirectionalLight(O,K),V.position.set(C[0],C[1],C[2]),V.position.normalize()):z.type=="point"?(C=z.position,d=z.distance,V=new THREE.PointLight(O,K,d),V.position.set(C[0],C[1],C[2])):z.type=="ambient"&&(V=new THREE.AmbientLight(O)),L.scene.addLight(V),L.lights[x]=V;for(y in G.fogs)x=G.fogs[y],x.type=="linear"?E=new THREE.Fog(0,x.near,x.far):x.type=="exp2"&&(E=new THREE.FogExp2(0,
x.density)),K=x.color,E.color.setRGB(K[0],K[1],K[2]),L.fogs[y]=E;if(L.cameras&&G.defaults.camera)L.currentCamera=L.cameras[G.defaults.camera];if(L.fogs&&G.defaults.fog)L.scene.fog=L.fogs[G.defaults.fog];K=G.defaults.bgcolor;L.bgColor=new THREE.Color;L.bgColor.setRGB(K[0],K[1],K[2]);L.bgColorAlpha=G.defaults.bgalpha;for(o in G.geometries)if(y=G.geometries[o],y.type=="bin_mesh"||y.type=="ascii_mesh")Q+=1,e.onLoadStart();T=Q;for(o in G.geometries)y=G.geometries[o],y.type=="cube"?(B=new THREE.CubeGeometry(y.width,
y.height,y.depth,y.segmentsWidth,y.segmentsHeight,y.segmentsDepth,null,y.flipped,y.sides),L.geometries[o]=B):y.type=="plane"?(B=new THREE.PlaneGeometry(y.width,y.height,y.segmentsWidth,y.segmentsHeight),L.geometries[o]=B):y.type=="sphere"?(B=new THREE.SphereGeometry(y.radius,y.segmentsWidth,y.segmentsHeight),L.geometries[o]=B):y.type=="cylinder"?(B=new THREE.CylinderGeometry(y.numSegs,y.topRad,y.botRad,y.height,y.topOffset,y.botOffset),L.geometries[o]=B):y.type=="torus"?(B=new THREE.TorusGeometry(y.radius,
y.tube,y.segmentsR,y.segmentsT),L.geometries[o]=B):y.type=="icosahedron"?(B=new THREE.IcosahedronGeometry(y.subdivisions),L.geometries[o]=B):y.type=="bin_mesh"?H.load({model:f(y.url,G.urlBaseType),callback:p(o)}):y.type=="ascii_mesh"?aa.load({model:f(y.url,G.urlBaseType),callback:p(o)}):y.type=="embedded_mesh"&&(y=G.embeds[y.id])&&aa.createModel(y,t(o),"");for(w in G.textures)if(o=G.textures[w],o.url instanceof Array){S+=o.url.length;for(H=0;H<o.url.length;H++)e.onLoadStart()}else S+=1,e.onLoadStart();
k=S;for(w in G.textures){o=G.textures[w];if(o.mapping!=void 0&&THREE[o.mapping]!=void 0)o.mapping=new THREE[o.mapping];if(o.url instanceof Array){H=[];for(var W=0;W<o.url.length;W++)H[W]=f(o.url[W],G.urlBaseType);H=THREE.ImageUtils.loadTextureCube(H,o.mapping,b)}else{H=THREE.ImageUtils.loadTexture(f(o.url,G.urlBaseType),o.mapping,b);if(THREE[o.minFilter]!=void 0)H.minFilter=THREE[o.minFilter];if(THREE[o.magFilter]!=void 0)H.magFilter=THREE[o.magFilter];if(o.repeat){H.repeat.set(o.repeat[0],o.repeat[1]);
if(o.repeat[0]!=1)H.wrapS=THREE.RepeatWrapping;if(o.repeat[1]!=1)H.wrapT=THREE.RepeatWrapping}o.offset&&H.offset.set(o.offset[0],o.offset[1]);if(o.wrap){aa={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(aa[o.wrap[0]]!==void 0)H.wrapS=aa[o.wrap[0]];if(aa[o.wrap[1]]!==void 0)H.wrapT=aa[o.wrap[1]]}}L.textures[w]=H}for(v in G.materials){w=G.materials[v];for(F in w.parameters)if(F=="envMap"||F=="map"||F=="lightMap")w.parameters[F]=L.textures[w.parameters[F]];else if(F=="shading")w.parameters[F]=
w.parameters[F]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(F=="blending")w.parameters[F]=THREE[w.parameters[F]]?THREE[w.parameters[F]]:THREE.NormalBlending;else if(F=="combine")w.parameters[F]=w.parameters[F]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;else if(F=="vertexColors")if(w.parameters[F]=="face")w.parameters[F]=THREE.FaceColors;else if(w.parameters[F])w.parameters[F]=THREE.VertexColors;if(w.parameters.opacity!==void 0&&w.parameters.opacity<1)w.parameters.transparent=
!0;if(w.parameters.normalMap){o=THREE.ShaderUtils.lib.normal;b=THREE.UniformsUtils.clone(o.uniforms);H=w.parameters.color;aa=w.parameters.specular;y=w.parameters.ambient;E=w.parameters.shininess;b.tNormal.texture=L.textures[w.parameters.normalMap];if(w.parameters.normalMapFactor)b.uNormalScale.value=w.parameters.normalMapFactor;if(w.parameters.map)b.tDiffuse.texture=w.parameters.map,b.enableDiffuse.value=!0;if(w.parameters.lightMap)b.tAO.texture=w.parameters.lightMap,b.enableAO.value=!0;if(w.parameters.specularMap)b.tSpecular.texture=
L.textures[w.parameters.specularMap],b.enableSpecular.value=!0;b.uDiffuseColor.value.setHex(H);b.uSpecularColor.value.setHex(aa);b.uAmbientColor.value.setHex(y);b.uShininess.value=E;if(w.parameters.opacity)b.uOpacity.value=w.parameters.opacity;w=new THREE.MeshShaderMaterial({fragmentShader:o.fragmentShader,vertexShader:o.vertexShader,uniforms:b,lights:!0,fog:!0})}else w=new THREE[w.type](w.parameters);L.materials[v]=w}m();e.callbackSync(L)}}};
THREE.MarchingCubes=function(b,c){THREE.Object3D.call(this);this.materials=c instanceof Array?c:[c];this.init=function(b){this.isolation=80;this.size=b;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(this.size3*3);this.vlist=new Float32Array(36);this.nlist=new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=
0;this.hasNormal=this.hasPos=!1;this.positionArray=new Float32Array(this.maxCount*3);this.normalArray=new Float32Array(this.maxCount*3)};this.lerp=function(b,c,h){return b+(c-b)*h};this.VIntX=function(b,c,h,g,j,m,p,t,n,o){j=(j-n)/(o-n);n=this.normal_cache;c[g]=m+j*this.delta;c[g+1]=p;c[g+2]=t;h[g]=this.lerp(n[b],n[b+3],j);h[g+1]=this.lerp(n[b+1],n[b+4],j);h[g+2]=this.lerp(n[b+2],n[b+5],j)};this.VIntY=function(b,c,h,g,j,m,p,t,n,o){j=(j-n)/(o-n);n=this.normal_cache;c[g]=m;c[g+1]=p+j*this.delta;c[g+
2]=t;c=b+this.yd*3;h[g]=this.lerp(n[b],n[c],j);h[g+1]=this.lerp(n[b+1],n[c+1],j);h[g+2]=this.lerp(n[b+2],n[c+2],j)};this.VIntZ=function(b,c,h,g,j,m,p,t,n,o){j=(j-n)/(o-n);n=this.normal_cache;c[g]=m;c[g+1]=p;c[g+2]=t+j*this.delta;c=b+this.zd*3;h[g]=this.lerp(n[b],n[c],j);h[g+1]=this.lerp(n[b+1],n[c+1],j);h[g+2]=this.lerp(n[b+2],n[c+2],j)};this.compNorm=function(b){var c=b*3;this.normal_cache[c]==0&&(this.normal_cache[c]=this.field[b-1]-this.field[b+1],this.normal_cache[c+1]=this.field[b-this.yd]-this.field[b+
this.yd],this.normal_cache[c+2]=this.field[b-this.zd]-this.field[b+this.zd])};this.polygonize=function(b,c,h,g,j,m){var p=g+1,t=g+this.yd,n=g+this.zd,o=p+this.yd,v=p+this.zd,u=g+this.yd+this.zd,x=p+this.yd+this.zd,z=0,y=this.field[g],w=this.field[p],I=this.field[t],C=this.field[o],K=this.field[n],F=this.field[v],B=this.field[u],O=this.field[x];y<j&&(z|=1);w<j&&(z|=2);I<j&&(z|=8);C<j&&(z|=4);K<j&&(z|=16);F<j&&(z|=32);B<j&&(z|=128);O<j&&(z|=64);var E=THREE.edgeTable[z];if(E==0)return 0;var H=this.delta,
P=b+H,V=c+H,H=h+H;E&1&&(this.compNorm(g),this.compNorm(p),this.VIntX(g*3,this.vlist,this.nlist,0,j,b,c,h,y,w));E&2&&(this.compNorm(p),this.compNorm(o),this.VIntY(p*3,this.vlist,this.nlist,3,j,P,c,h,w,C));E&4&&(this.compNorm(t),this.compNorm(o),this.VIntX(t*3,this.vlist,this.nlist,6,j,b,V,h,I,C));E&8&&(this.compNorm(g),this.compNorm(t),this.VIntY(g*3,this.vlist,this.nlist,9,j,b,c,h,y,I));E&16&&(this.compNorm(n),this.compNorm(v),this.VIntX(n*3,this.vlist,this.nlist,12,j,b,c,H,K,F));E&32&&(this.compNorm(v),
this.compNorm(x),this.VIntY(v*3,this.vlist,this.nlist,15,j,P,c,H,F,O));E&64&&(this.compNorm(u),this.compNorm(x),this.VIntX(u*3,this.vlist,this.nlist,18,j,b,V,H,B,O));E&128&&(this.compNorm(n),this.compNorm(u),this.VIntY(n*3,this.vlist,this.nlist,21,j,b,c,H,K,B));E&256&&(this.compNorm(g),this.compNorm(n),this.VIntZ(g*3,this.vlist,this.nlist,24,j,b,c,h,y,K));E&512&&(this.compNorm(p),this.compNorm(v),this.VIntZ(p*3,this.vlist,this.nlist,27,j,P,c,h,w,F));E&1024&&(this.compNorm(o),this.compNorm(x),this.VIntZ(o*
3,this.vlist,this.nlist,30,j,P,V,h,C,O));E&2048&&(this.compNorm(t),this.compNorm(u),this.VIntZ(t*3,this.vlist,this.nlist,33,j,b,V,h,I,B));z<<=4;for(j=g=0;THREE.triTable[z+j]!=-1;)b=z+j,c=b+1,h=b+2,this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[b],3*THREE.triTable[c],3*THREE.triTable[h],m),j+=3,g++;return g};this.posnormtriv=function(b,c,h,g,j,m){var p=this.count*3;this.positionArray[p]=b[h];this.positionArray[p+1]=b[h+1];this.positionArray[p+2]=b[h+2];this.positionArray[p+3]=b[g];this.positionArray[p+
4]=b[g+1];this.positionArray[p+5]=b[g+2];this.positionArray[p+6]=b[j];this.positionArray[p+7]=b[j+1];this.positionArray[p+8]=b[j+2];this.normalArray[p]=c[h];this.normalArray[p+1]=c[h+1];this.normalArray[p+2]=c[h+2];this.normalArray[p+3]=c[g];this.normalArray[p+4]=c[g+1];this.normalArray[p+5]=c[g+2];this.normalArray[p+6]=c[j];this.normalArray[p+7]=c[j+1];this.normalArray[p+8]=c[j+2];this.hasNormal=this.hasPos=!0;this.count+=3;this.count>=this.maxCount-3&&m(this)};this.begin=function(){this.count=0;
this.hasNormal=this.hasPos=!1};this.end=function(b){if(this.count!=0){for(var c=this.count*3;c<this.positionArray.length;c++)this.positionArray[c]=0;b(this)}};this.addBall=function(b,c,h,g,j){var m=this.size*Math.sqrt(g/j),p=h*this.size,t=c*this.size,n=b*this.size,o=Math.floor(p-m);o<1&&(o=1);p=Math.floor(p+m);p>this.size-1&&(p=this.size-1);var v=Math.floor(t-m);v<1&&(v=1);t=Math.floor(t+m);t>this.size-1&&(t=this.size-1);var u=Math.floor(n-m);u<1&&(u=1);m=Math.floor(n+m);m>this.size-1&&(m=this.size-
1);for(var x,z,y,w,I,C;o<p;o++){n=this.size2*o;z=o/this.size-h;I=z*z;for(z=v;z<t;z++){y=n+this.size*z;x=z/this.size-c;C=x*x;for(x=u;x<m;x++)w=x/this.size-b,w=g/(1.0E-6+w*w+C+I)-j,w>0&&(this.field[y+x]+=w)}}};this.addPlaneX=function(b,c){var h,g,j,m,p,t=this.size,n=this.yd,o=this.zd,v=this.field,u=t*Math.sqrt(b/c);u>t&&(u=t);for(h=0;h<u;h++)if(g=h/t,g*=g,m=b/(1.0E-4+g)-c,m>0)for(g=0;g<t;g++){p=h+g*n;for(j=0;j<t;j++)v[o*j+p]+=m}};this.addPlaneY=function(b,c){var h,g,j,m,p,t,n=this.size,o=this.yd,v=
this.zd,u=this.field,x=n*Math.sqrt(b/c);x>n&&(x=n);for(g=0;g<x;g++)if(h=g/n,h*=h,m=b/(1.0E-4+h)-c,m>0){p=g*o;for(h=0;h<n;h++){t=p+h;for(j=0;j<n;j++)u[v*j+t]+=m}}};this.addPlaneZ=function(b,c){var h,g,j,m,p,t;size=this.size;yd=this.yd;zd=this.zd;field=this.field;dist=size*Math.sqrt(b/c);dist>size&&(dist=size);for(j=0;j<dist;j++)if(h=j/size,h*=h,m=b/(1.0E-4+h)-c,m>0){p=zd*j;for(g=0;g<size;g++){t=p+g*yd;for(h=0;h<size;h++)field[t+h]+=m}}};this.reset=function(){var b;for(b=0;b<this.size3;b++)this.normal_cache[b*
3]=0,this.field[b]=0};this.render=function(b){this.begin();var c,h,g,j,m,p,t,n,o,v=this.size-2;for(j=1;j<v;j++){o=this.size2*j;t=(j-this.halfsize)/this.halfsize;for(g=1;g<v;g++){n=o+this.size*g;p=(g-this.halfsize)/this.halfsize;for(h=1;h<v;h++)m=(h-this.halfsize)/this.halfsize,c=n+h,this.polygonize(m,p,t,c,this.isolation,b)}}this.end(b)};this.generateGeometry=function(){var b=0,c=new THREE.Geometry,h=[];this.render(function(g){var j,m,p,t,n,o,v,u;for(j=0;j<g.count;j++)v=j*3,n=v+1,u=v+2,m=g.positionArray[v],
p=g.positionArray[n],t=g.positionArray[u],o=new THREE.Vector3(m,p,t),m=g.normalArray[v],p=g.normalArray[n],t=g.normalArray[u],v=new THREE.Vector3(m,p,t),v.normalize(),n=new THREE.Vertex(o),c.vertices.push(n),h.push(v);nfaces=g.count/3;for(j=0;j<nfaces;j++)v=(b+j)*3,n=v+1,u=v+2,o=h[v],m=h[n],p=h[u],v=new THREE.Face3(v,n,u,[o,m,p]),c.faces.push(v);b+=nfaces;g.count=0});return c};this.init(b)};THREE.MarchingCubes.prototype=new THREE.Object3D;THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes;
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);
THREE.Trident=function(b){function c(c){return new THREE.Mesh(new THREE.CylinderGeometry(30,0.1,b.length/20,b.length/5),new THREE.MeshBasicMaterial({color:c}))}function e(b,c){var e=new THREE.Geometry;e.vertices=[new THREE.Vertex,new THREE.Vertex(b)];return new THREE.Line(e,new THREE.LineBasicMaterial({color:c}))}THREE.Object3D.call(this);var f=Math.PI/2,h,b=b||THREE.Trident.defaultParams;if(b!==THREE.Trident.defaultParams)for(h in THREE.Trident.defaultParams)b.hasOwnProperty(h)||(b[h]=THREE.Trident.defaultParams[h]);
this.scale=new THREE.Vector3(b.scale,b.scale,b.scale);this.addChild(e(new THREE.Vector3(b.length,0,0),b.xAxisColor));this.addChild(e(new THREE.Vector3(0,b.length,0),b.yAxisColor));this.addChild(e(new THREE.Vector3(0,0,b.length),b.zAxisColor));if(b.showArrows)h=c(b.xAxisColor),h.rotation.y=-f,h.position.x=b.length,this.addChild(h),h=c(b.yAxisColor),h.rotation.x=f,h.position.y=b.length,this.addChild(h),h=c(b.zAxisColor),h.rotation.y=Math.PI,h.position.z=b.length,this.addChild(h)};
THREE.Trident.prototype=new THREE.Object3D;THREE.Trident.prototype.constructor=THREE.Trident;THREE.Trident.defaultParams={xAxisColor:16711680,yAxisColor:65280,zAxisColor:255,showArrows:!0,length:100,scale:1};THREE.PlaneCollider=function(b,c){this.point=b;this.normal=c};THREE.SphereCollider=function(b,c){this.center=b;this.radius=c;this.radiusSq=c*c};THREE.BoxCollider=function(b,c){this.min=b;this.max=c;this.dynamic=!0;this.normal=new THREE.Vector3};
THREE.MeshCollider=function(b,c){this.mesh=b;this.box=c;this.numFaces=this.mesh.geometry.faces.length;this.normal=new THREE.Vector3};THREE.CollisionSystem=function(){this.collisionNormal=new THREE.Vector3;this.colliders=[];this.hits=[]};THREE.Collisions=new THREE.CollisionSystem;THREE.CollisionSystem.prototype.merge=function(b){this.colliders=this.colliders.concat(b.colliders);this.hits=this.hits.concat(b.hits)};
THREE.CollisionSystem.prototype.rayCastAll=function(b){b.direction.normalize();this.hits.length=0;var c,e,f,h,g=0;c=0;for(e=this.colliders.length;c<e;c++)if(h=this.colliders[c],f=this.rayCast(b,h),f<Number.MAX_VALUE)h.distance=f,f>g?this.hits.push(h):this.hits.unshift(h),g=f;return this.hits};
THREE.CollisionSystem.prototype.rayCastNearest=function(b){var c=this.rayCastAll(b);if(c.length==0)return null;for(var e=0;c[e]instanceof THREE.MeshCollider;){var f=this.rayMesh(b,c[e]);if(f.dist<Number.MAX_VALUE){c[e].distance=f.dist;c[e].faceIndex=f.faceIndex;break}e++}if(e>c.length)return null;return c[e]};
THREE.CollisionSystem.prototype.rayCast=function(b,c){if(c instanceof THREE.PlaneCollider)return this.rayPlane(b,c);else if(c instanceof THREE.SphereCollider)return this.raySphere(b,c);else if(c instanceof THREE.BoxCollider)return this.rayBox(b,c);else if(c instanceof THREE.MeshCollider&&c.box)return this.rayBox(b,c.box)};
THREE.CollisionSystem.prototype.rayMesh=function(b,c){for(var e=this.makeRayLocal(b,c.mesh),f=Number.MAX_VALUE,h,g=0;g<c.numFaces;g++){var j=c.mesh.geometry.faces[g],m=c.mesh.geometry.vertices[j.a].position,p=c.mesh.geometry.vertices[j.b].position,t=c.mesh.geometry.vertices[j.c].position,n=j instanceof THREE.Face4?c.mesh.geometry.vertices[j.d].position:null;j instanceof THREE.Face3?(j=this.rayTriangle(e,m,p,t,f,this.collisionNormal,c.mesh),j<f&&(f=j,h=g,c.normal.copy(this.collisionNormal),c.normal.normalize())):
j instanceof THREE.Face4&&(j=this.rayTriangle(e,m,p,n,f,this.collisionNormal,c.mesh),j<f&&(f=j,h=g,c.normal.copy(this.collisionNormal),c.normal.normalize()),j=this.rayTriangle(e,p,t,n,f,this.collisionNormal,c.mesh),j<f&&(f=j,h=g,c.normal.copy(this.collisionNormal),c.normal.normalize()))}return{dist:f,faceIndex:h}};
THREE.CollisionSystem.prototype.rayTriangle=function(b,c,e,f,h,g,j){var m=THREE.CollisionSystem.__v1,p=THREE.CollisionSystem.__v2;g.set(0,0,0);m.sub(e,c);p.sub(f,e);g.cross(m,p);m=g.dot(b.direction);if(!(m<0))if(j.doubleSided||j.flipSided)g.multiplyScalar(-1),m*=-1;else return Number.MAX_VALUE;j=g.dot(c)-g.dot(b.origin);if(!(j<=0))return Number.MAX_VALUE;if(!(j>=m*h))return Number.MAX_VALUE;j/=m;m=THREE.CollisionSystem.__v3;m.copy(b.direction);m.multiplyScalar(j);m.addSelf(b.origin);Math.abs(g.x)>
Math.abs(g.y)?Math.abs(g.x)>Math.abs(g.z)?(b=m.y-c.y,g=e.y-c.y,h=f.y-c.y,m=m.z-c.z,e=e.z-c.z,f=f.z-c.z):(b=m.x-c.x,g=e.x-c.x,h=f.x-c.x,m=m.y-c.y,e=e.y-c.y,f=f.y-c.y):Math.abs(g.y)>Math.abs(g.z)?(b=m.x-c.x,g=e.x-c.x,h=f.x-c.x,m=m.z-c.z,e=e.z-c.z,f=f.z-c.z):(b=m.x-c.x,g=e.x-c.x,h=f.x-c.x,m=m.y-c.y,e=e.y-c.y,f=f.y-c.y);c=g*f-e*h;if(c==0)return Number.MAX_VALUE;c=1/c;f=(b*f-m*h)*c;if(!(f>=0))return Number.MAX_VALUE;c*=g*m-e*b;if(!(c>=0))return Number.MAX_VALUE;if(!(1-f-c>=0))return Number.MAX_VALUE;return j};
THREE.CollisionSystem.prototype.makeRayLocal=function(b,c){var e=THREE.CollisionSystem.__m;THREE.Matrix4.makeInvert(c.matrixWorld,e);var f=THREE.CollisionSystem.__r;f.origin.copy(b.origin);f.direction.copy(b.direction);e.multiplyVector3(f.origin);e.rotateAxis(f.direction);f.direction.normalize();return f};
THREE.CollisionSystem.prototype.rayBox=function(b,c){var e;c.dynamic&&c.mesh&&c.mesh.matrixWorld?e=this.makeRayLocal(b,c.mesh):(e=THREE.CollisionSystem.__r,e.origin.copy(b.origin),e.direction.copy(b.direction));var f=0,h=0,g=0,j=0,m=0,p=0,t=!0;e.origin.x<c.min.x?(f=c.min.x-e.origin.x,f/=e.direction.x,t=!1,j=-1):e.origin.x>c.max.x&&(f=c.max.x-e.origin.x,f/=e.direction.x,t=!1,j=1);e.origin.y<c.min.y?(h=c.min.y-e.origin.y,h/=e.direction.y,t=!1,m=-1):e.origin.y>c.max.y&&(h=c.max.y-e.origin.y,h/=e.direction.y,
t=!1,m=1);e.origin.z<c.min.z?(g=c.min.z-e.origin.z,g/=e.direction.z,t=!1,p=-1):e.origin.z>c.max.z&&(g=c.max.z-e.origin.z,g/=e.direction.z,t=!1,p=1);if(t)return-1;t=0;h>f&&(t=1,f=h);g>f&&(t=2,f=g);switch(t){case 0:m=e.origin.y+e.direction.y*f;if(m<c.min.y||m>c.max.y)return Number.MAX_VALUE;e=e.origin.z+e.direction.z*f;if(e<c.min.z||e>c.max.z)return Number.MAX_VALUE;c.normal.set(j,0,0);break;case 1:j=e.origin.x+e.direction.x*f;if(j<c.min.x||j>c.max.x)return Number.MAX_VALUE;e=e.origin.z+e.direction.z*
f;if(e<c.min.z||e>c.max.z)return Number.MAX_VALUE;c.normal.set(0,m,0);break;case 2:j=e.origin.x+e.direction.x*f;if(j<c.min.x||j>c.max.x)return Number.MAX_VALUE;m=e.origin.y+e.direction.y*f;if(m<c.min.y||m>c.max.y)return Number.MAX_VALUE;c.normal.set(0,0,p)}return f};THREE.CollisionSystem.prototype.rayPlane=function(b,c){var e=b.direction.dot(c.normal),f=c.point.dot(c.normal);if(e<0)e=(f-b.origin.dot(c.normal))/e;else return Number.MAX_VALUE;return e>0?e:Number.MAX_VALUE};
THREE.CollisionSystem.prototype.raySphere=function(b,c){var e=c.center.clone().subSelf(b.origin);if(e.lengthSq<c.radiusSq)return-1;var f=e.dot(b.direction.clone());if(f<=0)return Number.MAX_VALUE;e=c.radiusSq-(e.lengthSq()-f*f);if(e>=0)return Math.abs(f)-Math.sqrt(e);return Number.MAX_VALUE};THREE.CollisionSystem.__v1=new THREE.Vector3;THREE.CollisionSystem.__v2=new THREE.Vector3;THREE.CollisionSystem.__v3=new THREE.Vector3;THREE.CollisionSystem.__nr=new THREE.Vector3;THREE.CollisionSystem.__m=new THREE.Matrix4;
THREE.CollisionSystem.__r=new THREE.Ray;THREE.CollisionUtils={};THREE.CollisionUtils.MeshOBB=function(b){b.geometry.computeBoundingBox();var c=b.geometry.boundingBox,e=new THREE.Vector3(c.x[0],c.y[0],c.z[0]),c=new THREE.Vector3(c.x[1],c.y[1],c.z[1]),e=new THREE.BoxCollider(e,c);e.mesh=b;return e};THREE.CollisionUtils.MeshAABB=function(b){var c=THREE.CollisionUtils.MeshOBB(b);c.min.addSelf(b.position);c.max.addSelf(b.position);c.dynamic=!1;return c};
THREE.CollisionUtils.MeshColliderWBox=function(b){return new THREE.MeshCollider(b,THREE.CollisionUtils.MeshOBB(b))};
if(THREE.WebGLRenderer)THREE.AnaglyphWebGLRenderer=function(b){THREE.WebGLRenderer.call(this,b);var c=this,e=this.setSize,f=this.render,h=new THREE.Camera,g=new THREE.Camera,j=new THREE.Matrix4,m=new THREE.Matrix4,p,t,n;h.useTarget=g.useTarget=!1;h.matrixAutoUpdate=g.matrixAutoUpdate=!1;var b={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},o=new THREE.WebGLRenderTarget(512,512,b),v=new THREE.WebGLRenderTarget(512,512,b),u=new THREE.Camera(53,1,1,1E4);u.position.z=
2;_material=new THREE.MeshShaderMaterial({uniforms:{mapLeft:{type:"t",value:0,texture:o},mapRight:{type:"t",value:1,texture:v}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\nvec4 colorL, colorR;\nvec2 uv = vUv;\ncolorL = texture2D( mapLeft, uv );\ncolorR = texture2D( mapRight, uv );\ngl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"});
var x=new THREE.Scene;x.addObject(new THREE.Mesh(new THREE.PlaneGeometry(2,2),_material));this.setSize=function(b,f){e.call(c,b,f);o.width=b;o.height=f;v.width=b;v.height=f};this.render=function(b,e){e.update(null,!0);if(p!==e.aspect||t!==e.near||n!==e.fov){p=e.aspect;t=e.near;n=e.fov;var w=e.projectionMatrix.clone(),I=125/30*0.5,C=I*t/125,K=t*Math.tan(n*Math.PI/360),F;j.n14=I;m.n14=-I;I=-K*p+C;F=K*p+C;w.n11=2*t/(F-I);w.n13=(F+I)/(F-I);h.projectionMatrix=w.clone();I=-K*p-C;F=K*p-C;w.n11=2*t/(F-I);
w.n13=(F+I)/(F-I);g.projectionMatrix=w.clone()}h.matrix=e.matrixWorld.clone().multiplySelf(m);h.update(null,!0);h.position.copy(e.position);h.near=t;h.far=e.far;f.call(c,b,h,o,!0);g.matrix=e.matrixWorld.clone().multiplySelf(j);g.update(null,!0);g.position.copy(e.position);g.near=t;g.far=e.far;f.call(c,b,g,v,!0);f.call(c,x,u)}};
if(THREE.WebGLRenderer)THREE.CrosseyedWebGLRenderer=function(b){THREE.WebGLRenderer.call(this,b);this.autoClear=!1;var c=this,e=this.setSize,f=this.render,h,g,j=new THREE.Camera,m=new THREE.Camera;c.separation=10;if(b&&b.separation!==void 0)c.separation=b.separation;(new THREE.Camera(53,window.innerWidth/2/window.innerHeight,1,1E4)).position.z=-10;this.setSize=function(b,f){e.call(c,b,f);h=b/2;g=f};this.render=function(b,e){this.clear();j.fov=e.fov;j.aspect=0.5*e.aspect;j.near=e.near;j.far=e.far;
j.updateProjectionMatrix();j.position.copy(e.position);j.target.position.copy(e.target.position);j.translateX(c.separation);m.projectionMatrix=j.projectionMatrix;m.position.copy(e.position);m.target.position.copy(e.target.position);m.translateX(-c.separation);this.setViewport(0,0,h,g);f.call(c,b,j);this.setViewport(h,0,h,g);f.call(c,b,m,!1)}};
